

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jun 23 15:50:21 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D  ;; Function _dispLCD is unused but had its address taken
  1180                           global _dispLCD
  1181                           _dispLCD equ 0
  1182  0000  ;; Function _dispLCD_clr is unused but had its address taken
  1183                           global _dispLCD_clr
  1184                           _dispLCD_clr equ 0
  1185  0000  ;; Function _dispLCD_B0 is unused but had its address taken
  1186                           global _dispLCD_B0
  1187                           _dispLCD_B0 equ 0
  1188  0000  ;; Function _dispLCD_B1 is unused but had its address taken
  1189                           global _dispLCD_B1
  1190                           _dispLCD_B1 equ 0
  1191  0000                     	FNCALL	_main,_ADC_init
  1192                           	FNCALL	_main,_ADC_read
  1193                           	FNCALL	_main,_dispLCD_init
  1194                           	FNCALL	_main,_dispLCD_num
  1195                           	FNCALL	_main,_dispLCDstr
  1196                           	FNCALL	_dispLCDstr,_dispLCD_dataReg
  1197                           	FNCALL	_dispLCDstr,_dispLCD_lincol
  1198                           	FNCALL	_dispLCD_num,___awdiv
  1199                           	FNCALL	_dispLCD_num,___awmod
  1200                           	FNCALL	_dispLCD_num,_dispLCD_dataReg
  1201                           	FNCALL	_dispLCD_num,_dispLCD_lincol
  1202                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  1203                           	FNCALL	_dispLCD_init,_delay
  1204                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  1205                           	FNROOT	_main
  1206                           	FNCALL	_isr,_ADC_int
  1207                           	FNCALL	_isr,_T0_int
  1208                           	FNCALL	_isr,_T1_int
  1209                           	FNCALL	_isr,_T2_int
  1210                           	FNCALL	intlevel1,_isr
  1211                           	global	intlevel1
  1212                           	FNROOT	intlevel1
  1213                           	global	_IHM
  1214                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1215                           global __pidataBANK0
  1216                           __pidataBANK0:
  1217  045F                     	file	"./ihm.h"
  1218                           	line	15
  1219                           
  1220                           ;initializer for _IHM
  1221                           	retlw	low((fp__dispLCD_init-fpbase))
  1222  045F  3401               	retlw	low((fp__dispLCDstr-fpbase))
  1223  0460  3407               	retlw	low(0)
  1224  0461  3400               	retlw	low((fp__dispLCD_num-fpbase))
  1225  0462  3404               	retlw	low(0)
  1226  0463  3400               	retlw	low(0)
  1227  0464  3400               	retlw	low(0)
  1228  0465  3400               	global	_T0count
  1229                           	global	_ADC_value
  1230                           	global	_T2count
  1231                           	global	_T1count
  1232                           	global	_T2CONbits
  1233                           _T2CONbits	set	0x12
  1234  0012                     	global	_TMR2
  1235                           _TMR2	set	0x11
  1236  0011                     	global	_TMR1L
  1237                           _TMR1L	set	0xE
  1238  000E                     	global	_TMR1H
  1239                           _TMR1H	set	0xF
  1240  000F                     	global	_T1CONbits
  1241                           _T1CONbits	set	0x10
  1242  0010                     	global	_TMR0
  1243                           _TMR0	set	0x1
  1244  0001                     	global	_LCDbits
  1245                           _LCDbits	set	8
  1246  0008                     	global	_PIR1bits
  1247                           _PIR1bits	set	0xC
  1248  000C                     	global	_ADRESH
  1249                           _ADRESH	set	0x1E
  1250  001E                     	global	_ADCON0bits
  1251                           _ADCON0bits	set	0x1F
  1252  001F                     	global	_INTCONbits
  1253                           _INTCONbits	set	0xB
  1254  000B                     	global	_PR2
  1255                           _PR2	set	0x92
  1256  0092                     	global	_OPTION_REGbits
  1257                           _OPTION_REGbits	set	0x81
  1258  0081                     	global	_TRISDbits
  1259                           _TRISDbits	set	0x88
  1260  0088                     	global	_ADRESL
  1261                           _ADRESL	set	0x9E
  1262  009E                     	global	_PIE1bits
  1263                           _PIE1bits	set	0x8C
  1264  008C                     	global	_ADCON1bits
  1265                           _ADCON1bits	set	0x9F
  1266  009F                     	global	_ANSELbits
  1267                           _ANSELbits	set	0x188
  1268  0188                     psect	strings,class=STRING,delta=2,noexec
  1269                           global __pstrings
  1270                           __pstrings:
  1271  0453                     stringtab:
  1272  0453                     	global    __stringtab
  1273                           __stringtab:
  1274  0453                     ;	String table - string pointers are 1 byte each
  1275                           stringcode:stringdir:
  1276  0453                     movlw high(stringdir)
      + 0453                     stringdir:	
  1277  0453  3004               movwf pclath
  1278  0454  008A               movf fsr,w
  1279  0455  0804               incf fsr
  1280  0456  0A84               	addwf pc
  1281  0457  0782               	global __stringbase
  1282                           __stringbase:
  1283  0458                     	retlw	0
  1284  0458  3400               psect	strings
  1285                           	global    __end_of__stringtab
  1286                           __end_of__stringtab:
  1287  0459                     	
  1288                           STR_1:	
  1289  0459                     	retlw	65	;'A'
  1290  0459  3441               	retlw	68	;'D'
  1291  045A  3444               	retlw	67	;'C'
  1292  045B  3443               	retlw	58	;':'
  1293  045C  343A               	retlw	32	;' '
  1294  045D  3420               	retlw	0
  1295  045E  3400               psect	strings
  1296                           ; #config settings
  1297                           global __CFG_FOSC$INTRC_NOCLKOUT
  1298                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1299  0000                     global __CFG_WDTE$OFF
  1300                           __CFG_WDTE$OFF equ 0x0
  1301  0000                     global __CFG_PWRTE$OFF
  1302                           __CFG_PWRTE$OFF equ 0x0
  1303  0000                     global __CFG_MCLRE$OFF
  1304                           __CFG_MCLRE$OFF equ 0x0
  1305  0000                     global __CFG_CP$OFF
  1306                           __CFG_CP$OFF equ 0x0
  1307  0000                     global __CFG_CPD$OFF
  1308                           __CFG_CPD$OFF equ 0x0
  1309  0000                     global __CFG_BOREN$OFF
  1310                           __CFG_BOREN$OFF equ 0x0
  1311  0000                     global __CFG_IESO$OFF
  1312                           __CFG_IESO$OFF equ 0x0
  1313  0000                     global __CFG_FCMEN$OFF
  1314                           __CFG_FCMEN$OFF equ 0x0
  1315  0000                     global __CFG_LVP$OFF
  1316                           __CFG_LVP$OFF equ 0x0
  1317  0000                     global __CFG_BOR4V$BOR40V
  1318                           __CFG_BOR4V$BOR40V equ 0x0
  1319  0000                     global __CFG_WRT$OFF
  1320                           __CFG_WRT$OFF equ 0x0
  1321  0000                     	file	"C:\Users\21193634\AppData\Local\Temp\s6qc."
  1322                           	line	#
  1323                           psect cinit,class=CODE,delta=2
  1324                           global start_initialization
  1325                           start_initialization:
  1326  000F                     
  1327                           global __initialization
  1328                           __initialization:
  1329  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1330                           global __pbssCOMMON
  1331                           __pbssCOMMON:
  1332  0076                     _T0count:
  1333  0076                            ds      2
  1334  0076                     
  1335                           _ADC_value:
  1336  0078                            ds      2
  1337  0078                     
  1338                           psect	bssBANK0,class=BANK0,space=1,noexec
  1339                           global __pbssBANK0
  1340                           __pbssBANK0:
  1341  003D                     _T2count:
  1342  003D                            ds      2
  1343  003D                     
  1344                           _T1count:
  1345  003F                            ds      2
  1346  003F                     
  1347                           psect	dataBANK0,class=BANK0,space=1,noexec
  1348                           global __pdataBANK0
  1349                           __pdataBANK0:
  1350  0036                     	file	"./ihm.h"
  1351                           	line	15
  1352                           _IHM:
  1353  0036                            ds      7
  1354  0036                     
  1355                           	file	"C:\Users\21193634\AppData\Local\Temp\s6qc."
  1356                           	line	#
  1357                           global btemp
  1358                           psect inittext,class=CODE,delta=2
  1359                           global init_fetch0,btemp
  1360                           ;	Called with low address in FSR and high address in W
  1361                           init_fetch0:
  1362  041E                     	movf btemp,w
  1363  041E  087E               	movwf pclath
  1364  041F  008A               	movf btemp+1,w
  1365  0420  087F               	movwf pc
  1366  0421  0082               global init_ram0
  1367                           ;Called with:
  1368                           ;	high address of idata address in btemp 
  1369                           ;	low address of idata address in btemp+1 
  1370                           ;	low address of data in FSR
  1371                           ;	high address + 1 of data in btemp-1
  1372                           init_ram0:
  1373  0422                     	fcall init_fetch0
  1374  0422  120A  118A  241E  120A  118A  	movwf indf,f
  1375  0427  0080               	incf fsr,f
  1376  0428  0A84               	movf fsr,w
  1377  0429  0804               	xorwf btemp-1,w
  1378  042A  067D               	btfsc status,2
  1379  042B  1903               	retlw 0
  1380  042C  3400               	incf btemp+1,f
  1381  042D  0AFF               	btfsc status,2
  1382  042E  1903               	incf btemp,f
  1383  042F  0AFE               	goto init_ram0
  1384  0430  2C22               ; Initialize objects allocated to BANK0
  1385                           psect cinit,class=CODE,delta=2,merge=1
  1386                           global init_ram0, __pidataBANK0
  1387                           	bcf	status, 7	;select IRP bank0
  1388  000F  1383               	movlw low(__pdataBANK0+7)
  1389  0010  303D               	movwf btemp-1,f
  1390  0011  00FD               	movlw high(__pidataBANK0)
  1391  0012  3004               	movwf btemp,f
  1392  0013  00FE               	movlw low(__pidataBANK0)
  1393  0014  305F               	movwf btemp+1,f
  1394  0015  00FF               	movlw low(__pdataBANK0)
  1395  0016  3036               	movwf fsr,f
  1396  0017  0084               	fcall init_ram0
  1397  0018  120A  118A  2422  120A  118A  	line	#
  1398                           ; Clear objects allocated to BANK0
  1399                           psect cinit,class=CODE,delta=2,merge=1
  1400                           	clrf	((__pbssBANK0)+0)&07Fh
  1401  001D  01BD               	clrf	((__pbssBANK0)+1)&07Fh
  1402  001E  01BE               	clrf	((__pbssBANK0)+2)&07Fh
  1403  001F  01BF               	clrf	((__pbssBANK0)+3)&07Fh
  1404  0020  01C0               ; Clear objects allocated to COMMON
  1405                           psect cinit,class=CODE,delta=2,merge=1
  1406                           	clrf	((__pbssCOMMON)+0)&07Fh
  1407  0021  01F6               	clrf	((__pbssCOMMON)+1)&07Fh
  1408  0022  01F7               	clrf	((__pbssCOMMON)+2)&07Fh
  1409  0023  01F8               	clrf	((__pbssCOMMON)+3)&07Fh
  1410  0024  01F9               psect cinit,class=CODE,delta=2,merge=1
  1411                           global end_of_initialization,__end_of__initialization
  1412                           
  1413                           ;End of C runtime variable initialization code
  1414                           
  1415                           end_of_initialization:
  1416  0025                     __end_of__initialization:
  1417  0025                     clrf status
  1418  0025  0183               ljmp _main	;jump to C main() function
  1419  0026  120A  118A  2AFE   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1420                           global __pcstackCOMMON
  1421                           __pcstackCOMMON:
  1422  0070                     ?_T0_int:	; 1 bytes @ 0x0
  1423  0070                     ??_T0_int:	; 1 bytes @ 0x0
  1424  0070                     ?_T1_int:	; 1 bytes @ 0x0
  1425  0070                     ??_T1_int:	; 1 bytes @ 0x0
  1426  0070                     ?_T2_int:	; 1 bytes @ 0x0
  1427  0070                     ??_T2_int:	; 1 bytes @ 0x0
  1428  0070                     ?_ADC_init:	; 1 bytes @ 0x0
  1429  0070                     ?_ADC_int:	; 1 bytes @ 0x0
  1430  0070                     ??_ADC_int:	; 1 bytes @ 0x0
  1431  0070                     ?_isr:	; 1 bytes @ 0x0
  1432  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  1433  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  1434  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
  1435  0070                     ?_main:	; 1 bytes @ 0x0
  1436  0070                     	ds	2
  1437  0070                     ??_isr:	; 1 bytes @ 0x2
  1438  0072                     	ds	2
  1439  0072                     ??_ADC_init:	; 1 bytes @ 0x4
  1440  0074                     ?_delay:	; 1 bytes @ 0x4
  1441  0074                     ??_dispLCD_instReg:	; 1 bytes @ 0x4
  1442  0074                     ??_dispLCD_dataReg:	; 1 bytes @ 0x4
  1443  0074                     ??___awdiv:	; 1 bytes @ 0x4
  1444  0074                     ??___awmod:	; 1 bytes @ 0x4
  1445  0074                     	global	?_ADC_read
  1446                           ?_ADC_read:	; 2 bytes @ 0x4
  1447  0074                     	global	delay@t
  1448                           delay@t:	; 2 bytes @ 0x4
  1449  0074                     	ds	1
  1450  0074                     	global	dispLCD_dataReg@d
  1451                           dispLCD_dataReg@d:	; 1 bytes @ 0x5
  1452  0075                     	ds	1
  1453  0075                     ??_ADC_read:	; 1 bytes @ 0x6
  1454  0076                     ??_dispLCD_init:	; 1 bytes @ 0x6
  1455  0076                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1456                           global __pcstackBANK0
  1457                           __pcstackBANK0:
  1458  0020                     ??_delay:	; 1 bytes @ 0x0
  1459  0020                     	global	?___awdiv
  1460                           ?___awdiv:	; 2 bytes @ 0x0
  1461  0020                     	global	?___awmod
  1462                           ?___awmod:	; 2 bytes @ 0x0
  1463  0020                     	global	dispLCD_instReg@i
  1464                           dispLCD_instReg@i:	; 1 bytes @ 0x0
  1465  0020                     	global	___awdiv@divisor
  1466                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1467  0020                     	global	___awmod@divisor
  1468                           ___awmod@divisor:	; 2 bytes @ 0x0
  1469  0020                     	ds	1
  1470  0020                     ?_dispLCD_lincol:	; 1 bytes @ 0x1
  1471  0021                     	global	dispLCD_lincol@col
  1472                           dispLCD_lincol@col:	; 1 bytes @ 0x1
  1473  0021                     	ds	1
  1474  0021                     ??_dispLCD_lincol:	; 1 bytes @ 0x2
  1475  0022                     	global	___awdiv@dividend
  1476                           ___awdiv@dividend:	; 2 bytes @ 0x2
  1477  0022                     	global	___awmod@dividend
  1478                           ___awmod@dividend:	; 2 bytes @ 0x2
  1479  0022                     	ds	1
  1480  0022                     	global	dispLCD_lincol@lin
  1481                           dispLCD_lincol@lin:	; 1 bytes @ 0x3
  1482  0023                     	ds	1
  1483  0023                     ?_dispLCDstr:	; 1 bytes @ 0x4
  1484  0024                     	global	dispLCDstr@str
  1485                           dispLCDstr@str:	; 1 bytes @ 0x4
  1486  0024                     	global	___awdiv@counter
  1487                           ___awdiv@counter:	; 1 bytes @ 0x4
  1488  0024                     	global	___awmod@counter
  1489                           ___awmod@counter:	; 1 bytes @ 0x4
  1490  0024                     	ds	1
  1491  0024                     ??_dispLCDstr:	; 1 bytes @ 0x5
  1492  0025                     	global	___awdiv@sign
  1493                           ___awdiv@sign:	; 1 bytes @ 0x5
  1494  0025                     	global	___awmod@sign
  1495                           ___awmod@sign:	; 1 bytes @ 0x5
  1496  0025                     	ds	1
  1497  0025                     	global	___awdiv@quotient
  1498                           ___awdiv@quotient:	; 2 bytes @ 0x6
  1499  0026                     	ds	2
  1500  0026                     ?_dispLCD_num:	; 1 bytes @ 0x8
  1501  0028                     	global	dispLCD_num@lin
  1502                           dispLCD_num@lin:	; 1 bytes @ 0x8
  1503  0028                     	ds	1
  1504  0028                     	global	dispLCD_num@col
  1505                           dispLCD_num@col:	; 1 bytes @ 0x9
  1506  0029                     	ds	1
  1507  0029                     	global	dispLCD_num@num
  1508                           dispLCD_num@num:	; 2 bytes @ 0xA
  1509  002A                     	ds	2
  1510  002A                     	global	dispLCD_num@tam
  1511                           dispLCD_num@tam:	; 1 bytes @ 0xC
  1512  002C                     	ds	1
  1513  002C                     ??_dispLCD_num:	; 1 bytes @ 0xD
  1514  002D                     	ds	3
  1515  002D                     	global	dispLCD_num@size
  1516                           dispLCD_num@size:	; 1 bytes @ 0x10
  1517  0030                     	ds	1
  1518  0030                     	global	dispLCD_num@sinal
  1519                           dispLCD_num@sinal:	; 1 bytes @ 0x11
  1520  0031                     	ds	1
  1521  0031                     	global	dispLCD_num@div
  1522                           dispLCD_num@div:	; 2 bytes @ 0x12
  1523  0032                     	ds	2
  1524  0032                     ??_main:	; 1 bytes @ 0x14
  1525  0034                     	ds	2
  1526  0034                     ;!
  1527                           ;!Data Sizes:
  1528                           ;!    Strings     6
  1529                           ;!    Constant    0
  1530                           ;!    Data        7
  1531                           ;!    BSS         8
  1532                           ;!    Persistent  0
  1533                           ;!    Stack       0
  1534                           ;!
  1535                           ;!Auto Spaces:
  1536                           ;!    Space          Size  Autos    Used
  1537                           ;!    COMMON           14      6      10
  1538                           ;!    BANK0            80     22      33
  1539                           ;!    BANK1            80      0       0
  1540                           ;!    BANK3            96      0       0
  1541                           ;!    BANK2            96      0       0
  1542                           
  1543                           ;!
  1544                           ;!Pointer List with Targets:
  1545                           ;!
  1546                           ;!    S360$2$2	PTR const unsigned char  size(1) Largest target is 0
  1547                           ;!
  1548                           ;!    S360$1$0	PTR const unsigned char  size(1) Largest target is 6
  1549                           ;!		 -> STR_1(CODE[6]), 
  1550                           ;!
  1551                           ;!    S360$B1	PTR FTN()unsigned char  size(1) Largest target is 1
  1552                           ;!		 -> dispLCD_B1(), 
  1553                           ;!
  1554                           ;!    IHM.B1	PTR FTN()unsigned char  size(1) Largest target is 1
  1555                           ;!		 -> dispLCD_B1(), 
  1556                           ;!
  1557                           ;!    S360$B0	PTR FTN()unsigned char  size(1) Largest target is 1
  1558                           ;!		 -> dispLCD_B0(), 
  1559                           ;!
  1560                           ;!    IHM.B0	PTR FTN()unsigned char  size(1) Largest target is 1
  1561                           ;!		 -> dispLCD_B0(), 
  1562                           ;!
  1563                           ;!    S360$clr	PTR FTN()void  size(1) Largest target is 1
  1564                           ;!		 -> dispLCD_clr(), 
  1565                           ;!
  1566                           ;!    IHM.clr	PTR FTN()void  size(1) Largest target is 1
  1567                           ;!		 -> dispLCD_clr(), 
  1568                           ;!
  1569                           ;!    S360$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(
                                 1) Largest target is 1
  1570                           ;!		 -> dispLCD_num(), 
  1571                           ;!
  1572                           ;!    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1
                                 ) Largest target is 1
  1573                           ;!		 -> dispLCD_num(), 
  1574                           ;!
  1575                           ;!    S360$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void
                                   size(1) Largest target is 1
  1576                           ;!		 -> dispLCD(), 
  1577                           ;!
  1578                           ;!    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(1) Largest target is 1
  1579                           ;!		 -> dispLCD(), 
  1580                           ;!
  1581                           ;!    S360$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  1582                           ;!		 -> dispLCDstr(), 
  1583                           ;!
  1584                           ;!    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  1585                           ;!		 -> dispLCDstr(), 
  1586                           ;!
  1587                           ;!    S360$init	PTR FTN()void  size(1) Largest target is 1
  1588                           ;!		 -> dispLCD_init(), 
  1589                           ;!
  1590                           ;!    IHM.init	PTR FTN()void  size(1) Largest target is 1
  1591                           ;!		 -> dispLCD_init(), 
  1592                           ;!
  1593                           ;!    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 6
  1594                           ;!		 -> STR_1(CODE[6]), 
  1595                           ;!
  1596                           
  1597                           
  1598                           ;!
  1599                           ;!Critical Paths under _main in COMMON
  1600                           ;!
  1601                           ;!    _main->_ADC_read
  1602                           ;!    _dispLCDstr->_dispLCD_dataReg
  1603                           ;!    _dispLCD_num->_ADC_read
  1604                           ;!    _dispLCD_num->_dispLCD_dataReg
  1605                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1606                           ;!    _dispLCD_init->_delay
  1607                           ;!    _dispLCD_init->_dispLCD_instReg
  1608                           ;!
  1609                           ;!Critical Paths under _isr in COMMON
  1610                           ;!
  1611                           ;!    _isr->_ADC_int
  1612                           ;!
  1613                           ;!Critical Paths under _main in BANK0
  1614                           ;!
  1615                           ;!    _main->_dispLCD_num
  1616                           ;!    _dispLCDstr->_dispLCD_lincol
  1617                           ;!    _dispLCD_num->___awdiv
  1618                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1619                           ;!    _dispLCD_init->_delay
  1620                           ;!    _dispLCD_init->_dispLCD_instReg
  1621                           ;!
  1622                           ;!Critical Paths under _isr in BANK0
  1623                           ;!
  1624                           ;!    None.
  1625                           ;!
  1626                           ;!Critical Paths under _main in BANK1
  1627                           ;!
  1628                           ;!    None.
  1629                           ;!
  1630                           ;!Critical Paths under _isr in BANK1
  1631                           ;!
  1632                           ;!    None.
  1633                           ;!
  1634                           ;!Critical Paths under _main in BANK3
  1635                           ;!
  1636                           ;!    None.
  1637                           ;!
  1638                           ;!Critical Paths under _isr in BANK3
  1639                           ;!
  1640                           ;!    None.
  1641                           ;!
  1642                           ;!Critical Paths under _main in BANK2
  1643                           ;!
  1644                           ;!    None.
  1645                           ;!
  1646                           ;!Critical Paths under _isr in BANK2
  1647                           ;!
  1648                           ;!    None.
  1649                           
  1650 ;;
  1651 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1652 ;;
  1653                           
  1654                           ;!
  1655                           ;!Call Graph Tables:
  1656                           ;!
  1657                           ;! ---------------------------------------------------------------------------------
  1658                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1659                           ;! ---------------------------------------------------------------------------------
  1660                           ;! (0) _main                                                 2     2      0    4826
  1661                           ;!                                             20 BANK0      2     2      0
  1662                           ;!                           _ADC_init
  1663                           ;!                           _ADC_read
  1664                           ;!                       _dispLCD_init *
  1665                           ;!                        _dispLCD_num *
  1666                           ;!                         _dispLCDstr *
  1667                           ;! ---------------------------------------------------------------------------------
  1668                           ;! (1) _dispLCDstr                                           2     1      1     875
  1669                           ;!                                              4 BANK0      2     1      1
  1670                           ;!                    _dispLCD_dataReg
  1671                           ;!                     _dispLCD_lincol
  1672                           ;! ---------------------------------------------------------------------------------
  1673                           ;! (1) _dispLCD_num                                         12     7      5    3399
  1674                           ;!                                              8 BANK0     12     7      5
  1675                           ;!                           _ADC_read (ARG)
  1676                           ;!                            ___awdiv
  1677                           ;!                            ___awmod
  1678                           ;!                    _dispLCD_dataReg
  1679                           ;!                     _dispLCD_lincol
  1680                           ;! ---------------------------------------------------------------------------------
  1681                           ;! (2) _dispLCD_lincol                                       3     2      1     670
  1682                           ;!                                              1 BANK0      3     2      1
  1683                           ;!                    _dispLCD_instReg
  1684                           ;! ---------------------------------------------------------------------------------
  1685                           ;! (2) _dispLCD_dataReg                                      2     2      0      44
  1686                           ;!                                              4 COMMON     2     2      0
  1687                           ;! ---------------------------------------------------------------------------------
  1688                           ;! (2) ___awmod                                              7     3      4     613
  1689                           ;!                                              4 COMMON     1     1      0
  1690                           ;!                                              0 BANK0      6     2      4
  1691                           ;! ---------------------------------------------------------------------------------
  1692                           ;! (2) ___awdiv                                              9     5      4    1165
  1693                           ;!                                              4 COMMON     1     1      0
  1694                           ;!                                              0 BANK0      8     4      4
  1695                           ;! ---------------------------------------------------------------------------------
  1696                           ;! (1) _dispLCD_init                                         0     0      0     552
  1697                           ;!                              _delay
  1698                           ;!                    _dispLCD_instReg
  1699                           ;! ---------------------------------------------------------------------------------
  1700                           ;! (3) _dispLCD_instReg                                      3     3      0     248
  1701                           ;!                                              4 COMMON     2     2      0
  1702                           ;!                                              0 BANK0      1     1      0
  1703                           ;! ---------------------------------------------------------------------------------
  1704                           ;! (2) _delay                                                3     1      2     304
  1705                           ;!                                              4 COMMON     2     0      2
  1706                           ;!                                              0 BANK0      1     1      0
  1707                           ;! ---------------------------------------------------------------------------------
  1708                           ;! (1) _ADC_read                                             2     0      2       0
  1709                           ;!                                              4 COMMON     2     0      2
  1710                           ;! ---------------------------------------------------------------------------------
  1711                           ;! (1) _ADC_init                                             0     0      0       0
  1712                           ;! ---------------------------------------------------------------------------------
  1713                           ;! Estimated maximum stack depth 3
  1714                           ;! ---------------------------------------------------------------------------------
  1715                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1716                           ;! ---------------------------------------------------------------------------------
  1717                           ;! (4) _isr                                                  2     2      0       0
  1718                           ;!                                              2 COMMON     2     2      0
  1719                           ;!                            _ADC_int
  1720                           ;!                             _T0_int
  1721                           ;!                             _T1_int
  1722                           ;!                             _T2_int
  1723                           ;! ---------------------------------------------------------------------------------
  1724                           ;! (5) _T2_int                                               0     0      0       0
  1725                           ;! ---------------------------------------------------------------------------------
  1726                           ;! (5) _T1_int                                               0     0      0       0
  1727                           ;! ---------------------------------------------------------------------------------
  1728                           ;! (5) _T0_int                                               0     0      0       0
  1729                           ;! ---------------------------------------------------------------------------------
  1730                           ;! (5) _ADC_int                                              2     2      0       0
  1731                           ;!                                              0 COMMON     2     2      0
  1732                           ;! ---------------------------------------------------------------------------------
  1733                           ;! Estimated maximum stack depth 5
  1734                           ;! ---------------------------------------------------------------------------------
  1735                           ;!
  1736                           ;! Call Graph Graphs:
  1737                           ;!
  1738                           ;! _main (ROOT)
  1739                           ;!   _ADC_init
  1740                           ;!   _ADC_read
  1741                           ;!   _dispLCD_init *
  1742                           ;!     _delay
  1743                           ;!     _dispLCD_instReg
  1744                           ;!   _dispLCD_num *
  1745                           ;!     _ADC_read (ARG)
  1746                           ;!     ___awdiv (ARG)
  1747                           ;!     ___awmod (ARG)
  1748                           ;!     _dispLCD_dataReg (ARG)
  1749                           ;!     _dispLCD_lincol (ARG)
  1750                           ;!       _dispLCD_instReg
  1751                           ;!   _dispLCDstr *
  1752                           ;!     _dispLCD_dataReg
  1753                           ;!     _dispLCD_lincol
  1754                           ;!       _dispLCD_instReg
  1755                           ;!
  1756                           ;! _isr (ROOT)
  1757                           ;!   _ADC_int
  1758                           ;!   _T0_int
  1759                           ;!   _T1_int
  1760                           ;!   _T2_int
  1761                           ;!
  1762                           
  1763                           ;! Address spaces:
  1764                           
  1765                           ;!Name               Size   Autos  Total    Cost      Usage
  1766                           ;!BANK3               60      0       0       9        0.0%
  1767                           ;!BITBANK3            60      0       0       8        0.0%
  1768                           ;!SFR3                 0      0       0       4        0.0%
  1769                           ;!BITSFR3              0      0       0       4        0.0%
  1770                           ;!BANK2               60      0       0      11        0.0%
  1771                           ;!BITBANK2            60      0       0      10        0.0%
  1772                           ;!SFR2                 0      0       0       5        0.0%
  1773                           ;!BITSFR2              0      0       0       5        0.0%
  1774                           ;!BANK1               50      0       0       7        0.0%
  1775                           ;!BITBANK1            50      0       0       6        0.0%
  1776                           ;!SFR1                 0      0       0       2        0.0%
  1777                           ;!BITSFR1              0      0       0       2        0.0%
  1778                           ;!BANK0               50     16      21       5       41.3%
  1779                           ;!BITBANK0            50      0       0       4        0.0%
  1780                           ;!SFR0                 0      0       0       1        0.0%
  1781                           ;!BITSFR0              0      0       0       1        0.0%
  1782                           ;!COMMON               E      6       A       1       71.4%
  1783                           ;!BITCOMMON            E      0       0       0        0.0%
  1784                           ;!CODE                 0      0       0       0        0.0%
  1785                           ;!DATA                 0      0      2B      12        0.0%
  1786                           ;!ABS                  0      0      2B       3        0.0%
  1787                           ;!NULL                 0      0       0       0        0.0%
  1788                           ;!STACK                0      0       0       2        0.0%
  1789                           ;!EEDATA             100      0       0       0        0.0%
  1790                           
  1791                           	global	_main
  1792                           
  1793 ;; *************** function _main *****************
  1794 ;; Defined at:
  1795 ;;		line 16 in file "main.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : B00/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0
  1811 ;;      Temps:          0       2       0       0       0
  1812 ;;      Totals:         0       2       0       0       0
  1813 ;;Total ram usage:        2 bytes
  1814 ;; Hardware stack levels required when called:    5
  1815 ;; This function calls:
  1816 ;;		_ADC_init
  1817 ;;		_ADC_read
  1818 ;;		_dispLCD_init
  1819 ;;		_dispLCD_num
  1820 ;;		_dispLCDstr
  1821 ;; This function is called by:
  1822 ;;		Startup code after reset
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1826                           	file	"main.c"
  1827                           	line	16
  1828                           global __pmaintext
  1829                           __pmaintext:	;psect for function _main
  1830  02FE                     psect	maintext
  1831                           	file	"main.c"
  1832                           	line	16
  1833                           	global	__size_of_main
  1834                           	__size_of_main	equ	__end_of_main-_main
  1835  003B                     	
  1836                           _main:	
  1837  02FE                     ;incstack = 0
  1838                           	opt	stack 3
  1839                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1840                           	line	18
  1841                           	
  1842                           l1692:	
  1843  02FE                     ;main.c: 18:     IHM.init();
  1844                           	bcf	status, 5	;RP0=0, select bank0
  1845  02FE  1283               	bcf	status, 6	;RP1=0, select bank0
  1846  02FF  1303               	movf	(_IHM),w
  1847  0300  0836               	fcall	fptable
  1848  0301  120A  118A  2029  120A  118A  	line	19
  1849                           ;main.c: 19:     ADC_init();
  1850                           	fcall	_ADC_init
  1851  0306  120A  118A  239D  120A  118A  	line	20
  1852                           	
  1853                           l1694:	
  1854  030B                     ;main.c: 20:     IHM.print("ADC: ");
  1855                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1856  030B  3001               	bcf	status, 5	;RP0=0, select bank0
  1857  030C  1283               	bcf	status, 6	;RP1=0, select bank0
  1858  030D  1303               	movwf	(??_main+0)+0
  1859  030E  00B4               	movf	(??_main+0)+0,w
  1860  030F  0834               	movwf	(dispLCDstr@str)
  1861  0310  00A4               	movf	(0+low(_IHM|((0x0)<<8)+01h)),w
  1862  0311  0837               	fcall	fptable
  1863  0312  120A  118A  2029  120A  118A  	goto	l1696
  1864  0317  2B18               	line	21
  1865                           ;main.c: 21:     while( 1 )
  1866                           	
  1867                           l147:	
  1868  0318                     	line	23
  1869                           	
  1870                           l1696:	
  1871  0318                     ;main.c: 22:     {;main.c: 23:         IHM.printv(0,5, (int)ADC_read(), 4 );
  1872                           	bcf	status, 5	;RP0=0, select bank0
  1873  0318  1283               	bcf	status, 6	;RP1=0, select bank0
  1874  0319  1303               	clrf	(dispLCD_num@lin)
  1875  031A  01A8               	movlw	low(05h)
  1876  031B  3005               	movwf	(??_main+0)+0
  1877  031C  00B4               	movf	(??_main+0)+0,w
  1878  031D  0834               	movwf	(dispLCD_num@col)
  1879  031E  00A9               	fcall	_ADC_read
  1880  031F  120A  118A  2466  120A  118A  	movf	(1+(?_ADC_read)),w
  1881  0324  0875               	bcf	status, 5	;RP0=0, select bank0
  1882  0325  1283               	bcf	status, 6	;RP1=0, select bank0
  1883  0326  1303               	movwf	(dispLCD_num@num+1)
  1884  0327  00AB               	movf	(0+(?_ADC_read)),w
  1885  0328  0874               	movwf	(dispLCD_num@num)
  1886  0329  00AA               	movlw	low(04h)
  1887  032A  3004               	movwf	(??_main+1)+0
  1888  032B  00B5               	movf	(??_main+1)+0,w
  1889  032C  0835               	movwf	(dispLCD_num@tam)
  1890  032D  00AC               	movf	(0+low(_IHM|((0x0)<<8)+03h)),w
  1891  032E  0839               	fcall	fptable
  1892  032F  120A  118A  2029  120A  118A  	goto	l1696
  1893  0334  2B18               	line	24
  1894                           ;main.c: 24:     }
  1895                           	
  1896                           l148:	
  1897  0335                     	goto	l1696
  1898  0335  2B18               	
  1899                           l149:	
  1900  0336                     	line	25
  1901                           	
  1902                           l150:	
  1903  0336                     	global	start
  1904                           	ljmp	start
  1905  0336  120A  118A  280C   	opt stack 0
  1906                           GLOBAL	__end_of_main
  1907                           	__end_of_main:
  1908  0339                     	signat	_main,89
  1909                           	global	_dispLCDstr
  1910                           
  1911 ;; *************** function _dispLCDstr *****************
  1912 ;; Defined at:
  1913 ;;		line 164 in file "lcd.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;  str             1    4[BANK0 ] PTR const unsigned char 
  1916 ;;		 -> STR_1(6), 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0       1       0       0       0
  1929 ;;      Locals:         0       0       0       0       0
  1930 ;;      Temps:          0       1       0       0       0
  1931 ;;      Totals:         0       2       0       0       0
  1932 ;;Total ram usage:        2 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    4
  1935 ;; This function calls:
  1936 ;;		_dispLCD_dataReg
  1937 ;;		_dispLCD_lincol
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1943                           	file	"lcd.c"
  1944                           	line	164
  1945                           global __ptext1
  1946                           __ptext1:	;psect for function _dispLCDstr
  1947  0278                     psect	text1
  1948                           	file	"lcd.c"
  1949                           	line	164
  1950                           	global	__size_of_dispLCDstr
  1951                           	__size_of_dispLCDstr	equ	__end_of_dispLCDstr-_dispLCDstr
  1952  0045                     	
  1953                           _dispLCDstr:	
  1954  0278                     ;incstack = 0
  1955                           	opt	stack 3
  1956                           ; Regs used in _dispLCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1957                           	line	166
  1958                           	
  1959                           l1636:	
  1960  0278                     ;lcd.c: 164: void dispLCDstr( const char * str );lcd.c: 165: {;lcd.c: 166:     dispLCD_l
                                 incol( 0, 0 );
  1961                           	bcf	status, 5	;RP0=0, select bank0
  1962  0278  1283               	bcf	status, 6	;RP1=0, select bank0
  1963  0279  1303               	clrf	(dispLCD_lincol@col)
  1964  027A  01A1               	movlw	low(0)
  1965  027B  3000               	fcall	_dispLCD_lincol
  1966  027C  120A  118A  23F5  120A  118A  	line	168
  1967                           ;lcd.c: 168:     while( *str )
  1968                           	goto	l1646
  1969  0281  2AAD               	
  1970                           l93:	
  1971  0282                     	line	170
  1972                           	
  1973                           l1638:	
  1974  0282                     ;lcd.c: 169:     {;lcd.c: 170:         if( *str == '\n' )
  1975                           	bcf	status, 5	;RP0=0, select bank0
  1976  0282  1283               	bcf	status, 6	;RP1=0, select bank0
  1977  0283  1303               	movf	(dispLCDstr@str),w
  1978  0284  0824               	movwf	fsr0
  1979  0285  0084               	fcall	stringdir
  1980  0286  120A  118A  2453  120A  118A  	xorlw	0Ah
  1981  028B  3A0A               	skipz
  1982  028C  1D03               	goto	u1251
  1983  028D  2A8F               	goto	u1250
  1984  028E  2A90               u1251:
  1985  028F                     	goto	l1642
  1986  028F  2A98               u1250:
  1987  0290                     	line	172
  1988                           	
  1989                           l1640:	
  1990  0290                     ;lcd.c: 171:         {;lcd.c: 172:             dispLCD_lincol(1,0);
  1991                           	clrf	(dispLCD_lincol@col)
  1992  0290  01A1               	movlw	low(01h)
  1993  0291  3001               	fcall	_dispLCD_lincol
  1994  0292  120A  118A  23F5  120A  118A  	goto	l1642
  1995  0297  2A98               	line	173
  1996                           ;lcd.c: 173:         }
  1997                           	
  1998                           l94:	
  1999  0298                     	line	174
  2000                           	
  2001                           l1642:	
  2002  0298                     ;lcd.c: 174:         dispLCD_dataReg( *str );
  2003                           	bcf	status, 5	;RP0=0, select bank0
  2004  0298  1283               	bcf	status, 6	;RP1=0, select bank0
  2005  0299  1303               	movf	(dispLCDstr@str),w
  2006  029A  0824               	movwf	fsr0
  2007  029B  0084               	fcall	stringdir
  2008  029C  120A  118A  2453  120A  118A  	fcall	_dispLCD_dataReg
  2009  02A1  120A  118A  2372  120A  118A  	line	175
  2010                           	
  2011                           l1644:	
  2012  02A6                     ;lcd.c: 175:         ++str;
  2013                           	movlw	low(01h)
  2014  02A6  3001               	bcf	status, 5	;RP0=0, select bank0
  2015  02A7  1283               	bcf	status, 6	;RP1=0, select bank0
  2016  02A8  1303               	movwf	(??_dispLCDstr+0)+0
  2017  02A9  00A5               	movf	(??_dispLCDstr+0)+0,w
  2018  02AA  0825               	addwf	(dispLCDstr@str),f
  2019  02AB  07A4               	goto	l1646
  2020  02AC  2AAD               	line	176
  2021                           ;lcd.c: 176:     }
  2022                           	
  2023                           l92:	
  2024  02AD                     	line	168
  2025                           	
  2026                           l1646:	
  2027  02AD                     ;lcd.c: 168:     while( *str )
  2028                           	bcf	status, 5	;RP0=0, select bank0
  2029  02AD  1283               	bcf	status, 6	;RP1=0, select bank0
  2030  02AE  1303               	movf	(dispLCDstr@str),w
  2031  02AF  0824               	movwf	fsr0
  2032  02B0  0084               	fcall	stringdir
  2033  02B1  120A  118A  2453  120A  118A  	xorlw	0
  2034  02B6  3A00               	skipz
  2035  02B7  1D03               	goto	u1261
  2036  02B8  2ABA               	goto	u1260
  2037  02B9  2ABB               u1261:
  2038  02BA                     	goto	l1638
  2039  02BA  2A82               u1260:
  2040  02BB                     	goto	l96
  2041  02BB  2ABC               	
  2042                           l95:	
  2043  02BC                     	line	177
  2044                           	
  2045                           l96:	
  2046  02BC                     	return
  2047  02BC  0008               	opt stack 0
  2048                           GLOBAL	__end_of_dispLCDstr
  2049                           	__end_of_dispLCDstr:
  2050  02BD                     	signat	_dispLCDstr,4217
  2051                           	global	_dispLCD_num
  2052                           
  2053 ;; *************** function _dispLCD_num *****************
  2054 ;; Defined at:
  2055 ;;		line 180 in file "lcd.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  lin             1    8[BANK0 ] unsigned char 
  2058 ;;  col             1    9[BANK0 ] unsigned char 
  2059 ;;  num             2   10[BANK0 ] int 
  2060 ;;  tam             1   12[BANK0 ] unsigned char 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  div             2   18[BANK0 ] int 
  2063 ;;  sinal           1   17[BANK0 ] unsigned char 
  2064 ;;  size            1   16[BANK0 ] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       5       0       0       0
  2075 ;;      Locals:         0       4       0       0       0
  2076 ;;      Temps:          0       3       0       0       0
  2077 ;;      Totals:         0      12       0       0       0
  2078 ;;Total ram usage:       12 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    4
  2081 ;; This function calls:
  2082 ;;		___awdiv
  2083 ;;		___awmod
  2084 ;;		_dispLCD_dataReg
  2085 ;;		_dispLCD_lincol
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2091                           	line	180
  2092                           global __ptext2
  2093                           __ptext2:	;psect for function _dispLCD_num
  2094  0038                     psect	text2
  2095                           	file	"lcd.c"
  2096                           	line	180
  2097                           	global	__size_of_dispLCD_num
  2098                           	__size_of_dispLCD_num	equ	__end_of_dispLCD_num-_dispLCD_num
  2099  00EF                     	
  2100                           _dispLCD_num:	
  2101  0038                     ;incstack = 0
  2102                           	opt	stack 3
  2103                           ; Regs used in _dispLCD_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2104                           	line	187
  2105                           	
  2106                           l1648:	
  2107  0038                     ;lcd.c: 180: void dispLCD_num( unsigned char lin, unsigned char col,;lcd.c: 181:        
                                              int num, unsigned char tam );lcd.c: 182: {;lcd.c: 183:     int div;;lcd.c: 
                                 184:     unsigned char size;;lcd.c: 185:     char sinal;;lcd.c: 187:     sinal = num < 0
                                 ;
  2108                           	bcf	status, 5	;RP0=0, select bank0
  2109  0038  1283               	bcf	status, 6	;RP1=0, select bank0
  2110  0039  1303               	btfsc	(dispLCD_num@num+1),7
  2111  003A  1BAB               	goto	u1271
  2112  003B  283D               	goto	u1270
  2113  003C  283F               u1271:
  2114  003D                     	movlw	1
  2115  003D  3001               	goto	u1280
  2116  003E  2840               u1270:
  2117  003F                     	movlw	0
  2118  003F  3000               u1280:
  2119  0040                     	movwf	(??_dispLCD_num+0)+0
  2120  0040  00AD               	movf	(??_dispLCD_num+0)+0,w
  2121  0041  082D               	movwf	(dispLCD_num@sinal)
  2122  0042  00B1               	line	188
  2123                           	
  2124                           l1650:	
  2125  0043                     ;lcd.c: 188:     if( sinal )
  2126                           	movf	((dispLCD_num@sinal)),w
  2127  0043  0831               	btfsc	status,2
  2128  0044  1903               	goto	u1291
  2129  0045  2847               	goto	u1290
  2130  0046  2848               u1291:
  2131  0047                     	goto	l1654
  2132  0047  284E               u1290:
  2133  0048                     	line	189
  2134                           	
  2135                           l1652:	
  2136  0048                     ;lcd.c: 189:         num = (~num) + 1;
  2137                           	comf	(dispLCD_num@num),f
  2138  0048  09AA               	comf	(dispLCD_num@num+1),f
  2139  0049  09AB               	incf	(dispLCD_num@num),f
  2140  004A  0AAA               	skipnz
  2141  004B  1903               	incf	(dispLCD_num@num+1),f
  2142  004C  0AAB               	goto	l1654
  2143  004D  284E               	
  2144                           l99:	
  2145  004E                     	line	191
  2146                           	
  2147                           l1654:	
  2148  004E                     ;lcd.c: 191:     dispLCD_lincol(lin, col);
  2149                           	movf	(dispLCD_num@col),w
  2150  004E  0829               	movwf	(??_dispLCD_num+0)+0
  2151  004F  00AD               	movf	(??_dispLCD_num+0)+0,w
  2152  0050  082D               	movwf	(dispLCD_lincol@col)
  2153  0051  00A1               	movf	(dispLCD_num@lin),w
  2154  0052  0828               	fcall	_dispLCD_lincol
  2155  0053  120A  118A  23F5  120A  118A  	line	193
  2156                           	
  2157                           l1656:	
  2158  0058                     ;lcd.c: 193:     div=10000;
  2159                           	movlw	010h
  2160  0058  3010               	bcf	status, 5	;RP0=0, select bank0
  2161  0059  1283               	bcf	status, 6	;RP1=0, select bank0
  2162  005A  1303               	movwf	(dispLCD_num@div)
  2163  005B  00B2               	movlw	027h
  2164  005C  3027               	movwf	((dispLCD_num@div))+1
  2165  005D  00B3               	line	194
  2166                           	
  2167                           l1658:	
  2168  005E                     ;lcd.c: 194:     size = 5;
  2169                           	movlw	low(05h)
  2170  005E  3005               	movwf	(??_dispLCD_num+0)+0
  2171  005F  00AD               	movf	(??_dispLCD_num+0)+0,w
  2172  0060  082D               	movwf	(dispLCD_num@size)
  2173  0061  00B0               	line	195
  2174                           ;lcd.c: 195:     while( div >= 1 )
  2175                           	goto	l1666
  2176  0062  2892               	
  2177                           l101:	
  2178  0063                     	line	197
  2179                           	
  2180                           l1660:	
  2181  0063                     ;lcd.c: 196:     {;lcd.c: 197:         if( num/div == 0 )
  2182                           	bcf	status, 5	;RP0=0, select bank0
  2183  0063  1283               	bcf	status, 6	;RP1=0, select bank0
  2184  0064  1303               	movf	(dispLCD_num@div+1),w
  2185  0065  0833               	movwf	(___awdiv@divisor+1)
  2186  0066  00A1               	movf	(dispLCD_num@div),w
  2187  0067  0832               	movwf	(___awdiv@divisor)
  2188  0068  00A0               	movf	(dispLCD_num@num+1),w
  2189  0069  082B               	movwf	(___awdiv@dividend+1)
  2190  006A  00A3               	movf	(dispLCD_num@num),w
  2191  006B  082A               	movwf	(___awdiv@dividend)
  2192  006C  00A2               	fcall	___awdiv
  2193  006D  120A  118A  21A0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2194  0072  1283               	bcf	status, 6	;RP1=0, select bank0
  2195  0073  1303               	movf	((0+(?___awdiv))),w
  2196  0074  0820               iorwf	((1+(?___awdiv))),w
  2197  0075  0421               	btfss	status,2
  2198  0076  1D03               	goto	u1301
  2199  0077  2879               	goto	u1300
  2200  0078  287A               u1301:
  2201  0079                     	goto	l1672
  2202  0079  28AC               u1300:
  2203  007A                     	line	198
  2204                           	
  2205                           l1662:	
  2206  007A                     ;lcd.c: 198:             --size;
  2207                           	movlw	01h
  2208  007A  3001               	subwf	(dispLCD_num@size),f
  2209  007B  02B0               	goto	l1664
  2210  007C  287E               	line	199
  2211                           ;lcd.c: 199:         else
  2212                           	
  2213                           l102:	
  2214  007D                     	line	200
  2215                           ;lcd.c: 200:             break;
  2216                           	goto	l1672
  2217  007D  28AC               	
  2218                           l103:	
  2219  007E                     	line	201
  2220                           	
  2221                           l1664:	
  2222  007E                     ;lcd.c: 201:         div/=10;
  2223                           	movlw	0Ah
  2224  007E  300A               	movwf	(___awdiv@divisor)
  2225  007F  00A0               	movlw	0
  2226  0080  3000               	movwf	((___awdiv@divisor))+1
  2227  0081  00A1               	movf	(dispLCD_num@div+1),w
  2228  0082  0833               	movwf	(___awdiv@dividend+1)
  2229  0083  00A3               	movf	(dispLCD_num@div),w
  2230  0084  0832               	movwf	(___awdiv@dividend)
  2231  0085  00A2               	fcall	___awdiv
  2232  0086  120A  118A  21A0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2233  008B  1283               	bcf	status, 6	;RP1=0, select bank0
  2234  008C  1303               	movf	(1+(?___awdiv)),w
  2235  008D  0821               	movwf	(dispLCD_num@div+1)
  2236  008E  00B3               	movf	(0+(?___awdiv)),w
  2237  008F  0820               	movwf	(dispLCD_num@div)
  2238  0090  00B2               	goto	l1666
  2239  0091  2892               	line	202
  2240                           ;lcd.c: 202:     }
  2241                           	
  2242                           l100:	
  2243  0092                     	line	195
  2244                           	
  2245                           l1666:	
  2246  0092                     ;lcd.c: 195:     while( div >= 1 )
  2247                           	movf	(dispLCD_num@div+1),w
  2248  0092  0833               	xorlw	80h
  2249  0093  3A80               	movwf	btemp+1
  2250  0094  00FF               	movlw	(0)^80h
  2251  0095  3080               	subwf	btemp+1,w
  2252  0096  027F               	skipz
  2253  0097  1D03               	goto	u1315
  2254  0098  289B               	movlw	01h
  2255  0099  3001               	subwf	(dispLCD_num@div),w
  2256  009A  0232               u1315:
  2257  009B                     
  2258                           	skipnc
  2259  009B  1803               	goto	u1311
  2260  009C  289E               	goto	u1310
  2261  009D  289F               u1311:
  2262  009E                     	goto	l1660
  2263  009E  2863               u1310:
  2264  009F                     	goto	l1672
  2265  009F  28AC               	
  2266                           l104:	
  2267  00A0                     	line	204
  2268                           ;lcd.c: 204:     while( tam > (size+sinal) && tam > 1 )
  2269                           	goto	l1672
  2270  00A0  28AC               	
  2271                           l106:	
  2272  00A1                     	line	206
  2273                           	
  2274                           l1668:	
  2275  00A1                     ;lcd.c: 205:     {;lcd.c: 206:         dispLCD_dataReg(' ');
  2276                           	movlw	low(020h)
  2277  00A1  3020               	fcall	_dispLCD_dataReg
  2278  00A2  120A  118A  2372  120A  118A  	line	207
  2279                           	
  2280                           l1670:	
  2281  00A7                     ;lcd.c: 207:         --tam;
  2282                           	movlw	01h
  2283  00A7  3001               	bcf	status, 5	;RP0=0, select bank0
  2284  00A8  1283               	bcf	status, 6	;RP1=0, select bank0
  2285  00A9  1303               	subwf	(dispLCD_num@tam),f
  2286  00AA  02AC               	goto	l1672
  2287  00AB  28AC               	line	208
  2288                           ;lcd.c: 208:     }
  2289                           	
  2290                           l105:	
  2291  00AC                     	line	204
  2292                           	
  2293                           l1672:	
  2294  00AC                     ;lcd.c: 204:     while( tam > (size+sinal) && tam > 1 )
  2295                           	bcf	status, 5	;RP0=0, select bank0
  2296  00AC  1283               	bcf	status, 6	;RP1=0, select bank0
  2297  00AD  1303               	movf	(dispLCD_num@size),w
  2298  00AE  0830               	addwf	(dispLCD_num@sinal),w
  2299  00AF  0731               	movwf	(??_dispLCD_num+0)+0
  2300  00B0  00AD               	clrf	(??_dispLCD_num+0)+0+1
  2301  00B1  01AE               	rlf	1+(??_dispLCD_num+0)+0,f
  2302  00B2  0DAE               	
  2303                           	movf	1+(??_dispLCD_num+0)+0,w
  2304  00B3  082E               	xorlw	80h
  2305  00B4  3A80               	movwf	(??_dispLCD_num+2)+0
  2306  00B5  00AF               	movlw	80h
  2307  00B6  3080               	subwf	(??_dispLCD_num+2)+0,w
  2308  00B7  022F               	skipz
  2309  00B8  1D03               	goto	u1325
  2310  00B9  28BC               	movf	(dispLCD_num@tam),w
  2311  00BA  082C               	subwf	0+(??_dispLCD_num+0)+0,w
  2312  00BB  022D               u1325:
  2313  00BC                     
  2314                           	skipnc
  2315  00BC  1803               	goto	u1321
  2316  00BD  28BF               	goto	u1320
  2317  00BE  28C0               u1321:
  2318  00BF                     	goto	l1676
  2319  00BF  28CA               u1320:
  2320  00C0                     	
  2321                           l1674:	
  2322  00C0                     	movlw	low(02h)
  2323  00C0  3002               	bcf	status, 5	;RP0=0, select bank0
  2324  00C1  1283               	bcf	status, 6	;RP1=0, select bank0
  2325  00C2  1303               	subwf	(dispLCD_num@tam),w
  2326  00C3  022C               	skipnc
  2327  00C4  1803               	goto	u1331
  2328  00C5  28C7               	goto	u1330
  2329  00C6  28C8               u1331:
  2330  00C7                     	goto	l1668
  2331  00C7  28A1               u1330:
  2332  00C8                     	goto	l1676
  2333  00C8  28CA               	
  2334                           l108:	
  2335  00C9                     	goto	l1676
  2336  00C9  28CA               	
  2337                           l109:	
  2338  00CA                     	line	210
  2339                           	
  2340                           l1676:	
  2341  00CA                     ;lcd.c: 210:     if( sinal )
  2342                           	bcf	status, 5	;RP0=0, select bank0
  2343  00CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2344  00CB  1303               	movf	((dispLCD_num@sinal)),w
  2345  00CC  0831               	btfsc	status,2
  2346  00CD  1903               	goto	u1341
  2347  00CE  28D0               	goto	u1340
  2348  00CF  28D1               u1341:
  2349  00D0                     	goto	l111
  2350  00D0  28D8               u1340:
  2351  00D1                     	line	211
  2352                           	
  2353                           l1678:	
  2354  00D1                     ;lcd.c: 211:         dispLCD_dataReg('-');
  2355                           	movlw	low(02Dh)
  2356  00D1  302D               	fcall	_dispLCD_dataReg
  2357  00D2  120A  118A  2372  120A  118A  	goto	l111
  2358  00D7  28D8               	
  2359                           l110:	
  2360  00D8                     	line	213
  2361                           ;lcd.c: 213:     do
  2362                           	
  2363                           l111:	
  2364  00D8                     	line	215
  2365                           ;lcd.c: 214:     {;lcd.c: 215:         dispLCD_dataReg( (unsigned char)(num / div) + '0'
                                  );
  2366                           	bcf	status, 5	;RP0=0, select bank0
  2367  00D8  1283               	bcf	status, 6	;RP1=0, select bank0
  2368  00D9  1303               	movf	(dispLCD_num@div+1),w
  2369  00DA  0833               	movwf	(___awdiv@divisor+1)
  2370  00DB  00A1               	movf	(dispLCD_num@div),w
  2371  00DC  0832               	movwf	(___awdiv@divisor)
  2372  00DD  00A0               	movf	(dispLCD_num@num+1),w
  2373  00DE  082B               	movwf	(___awdiv@dividend+1)
  2374  00DF  00A3               	movf	(dispLCD_num@num),w
  2375  00E0  082A               	movwf	(___awdiv@dividend)
  2376  00E1  00A2               	fcall	___awdiv
  2377  00E2  120A  118A  21A0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2378  00E7  1283               	bcf	status, 6	;RP1=0, select bank0
  2379  00E8  1303               	movf	(0+(?___awdiv)),w
  2380  00E9  0820               	addlw	030h
  2381  00EA  3E30               	fcall	_dispLCD_dataReg
  2382  00EB  120A  118A  2372  120A  118A  	line	216
  2383                           ;lcd.c: 216:         num = num % div;
  2384                           	bcf	status, 5	;RP0=0, select bank0
  2385  00F0  1283               	bcf	status, 6	;RP1=0, select bank0
  2386  00F1  1303               	movf	(dispLCD_num@div+1),w
  2387  00F2  0833               	movwf	(___awmod@divisor+1)
  2388  00F3  00A1               	movf	(dispLCD_num@div),w
  2389  00F4  0832               	movwf	(___awmod@divisor)
  2390  00F5  00A0               	movf	(dispLCD_num@num+1),w
  2391  00F6  082B               	movwf	(___awmod@dividend+1)
  2392  00F7  00A3               	movf	(dispLCD_num@num),w
  2393  00F8  082A               	movwf	(___awmod@dividend)
  2394  00F9  00A2               	fcall	___awmod
  2395  00FA  120A  118A  2213  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2396  00FF  1283               	bcf	status, 6	;RP1=0, select bank0
  2397  0100  1303               	movf	(1+(?___awmod)),w
  2398  0101  0821               	movwf	(dispLCD_num@num+1)
  2399  0102  00AB               	movf	(0+(?___awmod)),w
  2400  0103  0820               	movwf	(dispLCD_num@num)
  2401  0104  00AA               	line	217
  2402                           ;lcd.c: 217:         div/=10;
  2403                           	movlw	0Ah
  2404  0105  300A               	movwf	(___awdiv@divisor)
  2405  0106  00A0               	movlw	0
  2406  0107  3000               	movwf	((___awdiv@divisor))+1
  2407  0108  00A1               	movf	(dispLCD_num@div+1),w
  2408  0109  0833               	movwf	(___awdiv@dividend+1)
  2409  010A  00A3               	movf	(dispLCD_num@div),w
  2410  010B  0832               	movwf	(___awdiv@dividend)
  2411  010C  00A2               	fcall	___awdiv
  2412  010D  120A  118A  21A0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2413  0112  1283               	bcf	status, 6	;RP1=0, select bank0
  2414  0113  1303               	movf	(1+(?___awdiv)),w
  2415  0114  0821               	movwf	(dispLCD_num@div+1)
  2416  0115  00B3               	movf	(0+(?___awdiv)),w
  2417  0116  0820               	movwf	(dispLCD_num@div)
  2418  0117  00B2               	line	218
  2419                           	
  2420                           l1680:	
  2421  0118                     ;lcd.c: 218:     }
  2422                           	movf	(dispLCD_num@div+1),w
  2423  0118  0833               	xorlw	80h
  2424  0119  3A80               	movwf	btemp+1
  2425  011A  00FF               	movlw	(0)^80h
  2426  011B  3080               	subwf	btemp+1,w
  2427  011C  027F               	skipz
  2428  011D  1D03               	goto	u1355
  2429  011E  2921               	movlw	01h
  2430  011F  3001               	subwf	(dispLCD_num@div),w
  2431  0120  0232               u1355:
  2432  0121                     
  2433                           	skipnc
  2434  0121  1803               	goto	u1351
  2435  0122  2924               	goto	u1350
  2436  0123  2925               u1351:
  2437  0124                     	goto	l111
  2438  0124  28D8               u1350:
  2439  0125                     	goto	l113
  2440  0125  2926               	
  2441                           l112:	
  2442  0126                     	line	220
  2443                           	
  2444                           l113:	
  2445  0126                     	return
  2446  0126  0008               	opt stack 0
  2447                           GLOBAL	__end_of_dispLCD_num
  2448                           	__end_of_dispLCD_num:
  2449  0127                     	signat	_dispLCD_num,16505
  2450                           	global	_dispLCD_lincol
  2451                           
  2452 ;; *************** function _dispLCD_lincol *****************
  2453 ;; Defined at:
  2454 ;;		line 126 in file "lcd.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  lin             1    wreg     unsigned char 
  2457 ;;  col             1    1[BANK0 ] unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  lin             1    3[BANK0 ] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       1       0       0       0
  2470 ;;      Locals:         0       1       0       0       0
  2471 ;;      Temps:          0       1       0       0       0
  2472 ;;      Totals:         0       3       0       0       0
  2473 ;;Total ram usage:        3 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    3
  2476 ;; This function calls:
  2477 ;;		_dispLCD_instReg
  2478 ;; This function is called by:
  2479 ;;		_dispLCDstr
  2480 ;;		_dispLCD_num
  2481 ;;		_dispLCD
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2485                           	line	126
  2486                           global __ptext3
  2487                           __ptext3:	;psect for function _dispLCD_lincol
  2488  03F5                     psect	text3
  2489                           	file	"lcd.c"
  2490                           	line	126
  2491                           	global	__size_of_dispLCD_lincol
  2492                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  2493  0015                     	
  2494                           _dispLCD_lincol:	
  2495  03F5                     ;incstack = 0
  2496                           	opt	stack 3
  2497                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  2498                           ;dispLCD_lincol@lin stored from wreg
  2499                           	bcf	status, 5	;RP0=0, select bank0
  2500  03F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2501  03F6  1303               	movwf	(dispLCD_lincol@lin)
  2502  03F7  00A3               	line	128
  2503                           	
  2504                           l1532:	
  2505  03F8                     ;lcd.c: 126: void dispLCD_lincol( unsigned char lin, unsigned char col);lcd.c: 127: {;lc
                                 d.c: 128:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  2506                           	movf	(dispLCD_lincol@lin),w
  2507  03F8  0823               	movwf	(??_dispLCD_lincol+0)+0
  2508  03F9  00A2               	movlw	06h
  2509  03FA  3006               u1055:
  2510  03FB                     	clrc
  2511  03FB  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  2512  03FC  0DA2               	addlw	-1
  2513  03FD  3EFF               	skipz
  2514  03FE  1D03               	goto	u1055
  2515  03FF  2BFB               	movf	(dispLCD_lincol@col),w
  2516  0400  0821               	addwf	0+(??_dispLCD_lincol+0)+0,w
  2517  0401  0722               	andlw	07Fh
  2518  0402  397F               	addlw	080h
  2519  0403  3E80               	fcall	_dispLCD_instReg
  2520  0404  120A  118A  2127  120A  118A  	line	129
  2521                           	
  2522                           l80:	
  2523  0409                     	return
  2524  0409  0008               	opt stack 0
  2525                           GLOBAL	__end_of_dispLCD_lincol
  2526                           	__end_of_dispLCD_lincol:
  2527  040A                     	signat	_dispLCD_lincol,8313
  2528                           	global	_dispLCD_dataReg
  2529                           
  2530 ;; *************** function _dispLCD_dataReg *****************
  2531 ;; Defined at:
  2532 ;;		line 110 in file "lcd.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  d               1    wreg     unsigned char 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  d               1    5[COMMON] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2, status,0
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       0       0       0       0
  2547 ;;      Locals:         1       0       0       0       0
  2548 ;;      Temps:          1       0       0       0       0
  2549 ;;      Totals:         2       0       0       0       0
  2550 ;;Total ram usage:        2 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    2
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_dispLCDstr
  2557 ;;		_dispLCD_num
  2558 ;;		_dispLCD
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2562                           	line	110
  2563                           global __ptext4
  2564                           __ptext4:	;psect for function _dispLCD_dataReg
  2565  0372                     psect	text4
  2566                           	file	"lcd.c"
  2567                           	line	110
  2568                           	global	__size_of_dispLCD_dataReg
  2569                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  2570  002B                     	
  2571                           _dispLCD_dataReg:	
  2572  0372                     ;incstack = 0
  2573                           	opt	stack 4
  2574                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  2575                           ;dispLCD_dataReg@d stored from wreg
  2576                           	movwf	(dispLCD_dataReg@d)
  2577  0372  00F5               	line	112
  2578                           	
  2579                           l1232:	
  2580  0373                     ;lcd.c: 110: void dispLCD_dataReg( unsigned char d );lcd.c: 111: {;lcd.c: 112:     LCDbi
                                 ts.RS = 1;
  2581                           	bcf	status, 5	;RP0=0, select bank0
  2582  0373  1283               	bcf	status, 6	;RP1=0, select bank0
  2583  0374  1303               	bsf	(8),4	;volatile
  2584  0375  1608               	line	113
  2585                           	
  2586                           l1234:	
  2587  0376                     ;lcd.c: 113:     LCDbits.BUS = d >> 4;
  2588                           	movf	(dispLCD_dataReg@d),w
  2589  0376  0875               	movwf	(??_dispLCD_dataReg+0)+0
  2590  0377  00F4               	movlw	04h
  2591  0378  3004               u585:
  2592  0379                     	clrc
  2593  0379  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  2594  037A  0CF4               	addlw	-1
  2595  037B  3EFF               	skipz
  2596  037C  1D03               	goto	u585
  2597  037D  2B79               	movf	(8),w	;volatile
  2598  037E  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  2599  037F  0674               	andlw	not ((1<<4)-1)
  2600  0380  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  2601  0381  0674               	movwf	(8)	;volatile
  2602  0382  0088               	line	114
  2603                           	
  2604                           l1236:	
  2605  0383                     ;lcd.c: 114:     LCDbits.EN = 0;
  2606                           	bcf	(8),5	;volatile
  2607  0383  1288               	line	115
  2608                           	
  2609                           l1238:	
  2610  0384                     ;lcd.c: 115:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2611                           	opt asmopt_push
  2612                           opt asmopt_off
  2613                           	movlw	13
  2614  0384  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  2615  0385  00F4               	u1377:
  2616  0386                     decfsz	(??_dispLCD_dataReg+0)+0,f
  2617  0386  0BF4               	goto	u1377
  2618  0387  2B86               opt asmopt_pop
  2619                           
  2620                           	line	116
  2621                           	
  2622                           l1240:	
  2623  0388                     ;lcd.c: 116:     LCDbits.EN = 1;
  2624                           	bcf	status, 5	;RP0=0, select bank0
  2625  0388  1283               	bcf	status, 6	;RP1=0, select bank0
  2626  0389  1303               	bsf	(8),5	;volatile
  2627  038A  1688               	line	118
  2628                           	
  2629                           l1242:	
  2630  038B                     ;lcd.c: 118:     LCDbits.RS = 1;
  2631                           	bsf	(8),4	;volatile
  2632  038B  1608               	line	119
  2633                           	
  2634                           l1244:	
  2635  038C                     ;lcd.c: 119:     LCDbits.BUS = d & 0x0F;
  2636                           	movlw	low(0Fh)
  2637  038C  300F               	andwf	(dispLCD_dataReg@d),w
  2638  038D  0575               	movwf	(??_dispLCD_dataReg+0)+0
  2639  038E  00F4               	movf	(8),w	;volatile
  2640  038F  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  2641  0390  0674               	andlw	not ((1<<4)-1)
  2642  0391  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  2643  0392  0674               	movwf	(8)	;volatile
  2644  0393  0088               	line	120
  2645                           	
  2646                           l1246:	
  2647  0394                     ;lcd.c: 120:     LCDbits.EN = 0;
  2648                           	bcf	(8),5	;volatile
  2649  0394  1288               	line	121
  2650                           ;lcd.c: 121:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2651                           	opt asmopt_push
  2652                           opt asmopt_off
  2653                           	movlw	13
  2654  0395  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  2655  0396  00F4               	u1387:
  2656  0397                     decfsz	(??_dispLCD_dataReg+0)+0,f
  2657  0397  0BF4               	goto	u1387
  2658  0398  2B97               opt asmopt_pop
  2659                           
  2660                           	line	122
  2661                           	
  2662                           l1248:	
  2663  0399                     ;lcd.c: 122:     LCDbits.EN = 1;
  2664                           	bcf	status, 5	;RP0=0, select bank0
  2665  0399  1283               	bcf	status, 6	;RP1=0, select bank0
  2666  039A  1303               	bsf	(8),5	;volatile
  2667  039B  1688               	line	123
  2668                           	
  2669                           l77:	
  2670  039C                     	return
  2671  039C  0008               	opt stack 0
  2672                           GLOBAL	__end_of_dispLCD_dataReg
  2673                           	__end_of_dispLCD_dataReg:
  2674  039D                     	signat	_dispLCD_dataReg,4217
  2675                           	global	___awmod
  2676                           
  2677 ;; *************** function ___awmod *****************
  2678 ;; Defined at:
  2679 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  divisor         2    0[BANK0 ] int 
  2682 ;;  dividend        2    2[BANK0 ] int 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  sign            1    5[BANK0 ] unsigned char 
  2685 ;;  counter         1    4[BANK0 ] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  2    0[BANK0 ] int 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         0       4       0       0       0
  2696 ;;      Locals:         0       2       0       0       0
  2697 ;;      Temps:          1       0       0       0       0
  2698 ;;      Totals:         1       6       0       0       0
  2699 ;;Total ram usage:        7 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    2
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_dispLCD_num
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2709                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2710                           	line	5
  2711                           global __ptext5
  2712                           __ptext5:	;psect for function ___awmod
  2713  0213                     psect	text5
  2714                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2715                           	line	5
  2716                           	global	__size_of___awmod
  2717                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  2718  0065                     	
  2719                           ___awmod:	
  2720  0213                     ;incstack = 0
  2721                           	opt	stack 4
  2722                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2723                           	line	12
  2724                           	
  2725                           l1578:	
  2726  0213                     	bcf	status, 5	;RP0=0, select bank0
  2727  0213  1283               	bcf	status, 6	;RP1=0, select bank0
  2728  0214  1303               	clrf	(___awmod@sign)
  2729  0215  01A5               	line	13
  2730                           	
  2731                           l1580:	
  2732  0216                     	btfss	(___awmod@dividend+1),7
  2733  0216  1FA3               	goto	u1161
  2734  0217  2A19               	goto	u1160
  2735  0218  2A1A               u1161:
  2736  0219                     	goto	l1586
  2737  0219  2A22               u1160:
  2738  021A                     	line	14
  2739                           	
  2740                           l1582:	
  2741  021A                     	comf	(___awmod@dividend),f
  2742  021A  09A2               	comf	(___awmod@dividend+1),f
  2743  021B  09A3               	incf	(___awmod@dividend),f
  2744  021C  0AA2               	skipnz
  2745  021D  1903               	incf	(___awmod@dividend+1),f
  2746  021E  0AA3               	line	15
  2747                           	
  2748                           l1584:	
  2749  021F                     	clrf	(___awmod@sign)
  2750  021F  01A5               	incf	(___awmod@sign),f
  2751  0220  0AA5               	goto	l1586
  2752  0221  2A22               	line	16
  2753                           	
  2754                           l475:	
  2755  0222                     	line	17
  2756                           	
  2757                           l1586:	
  2758  0222                     	btfss	(___awmod@divisor+1),7
  2759  0222  1FA1               	goto	u1171
  2760  0223  2A25               	goto	u1170
  2761  0224  2A26               u1171:
  2762  0225                     	goto	l1590
  2763  0225  2A2C               u1170:
  2764  0226                     	line	18
  2765                           	
  2766                           l1588:	
  2767  0226                     	comf	(___awmod@divisor),f
  2768  0226  09A0               	comf	(___awmod@divisor+1),f
  2769  0227  09A1               	incf	(___awmod@divisor),f
  2770  0228  0AA0               	skipnz
  2771  0229  1903               	incf	(___awmod@divisor+1),f
  2772  022A  0AA1               	goto	l1590
  2773  022B  2A2C               	
  2774                           l476:	
  2775  022C                     	line	19
  2776                           	
  2777                           l1590:	
  2778  022C                     	movf	((___awmod@divisor)),w
  2779  022C  0820               iorwf	((___awmod@divisor+1)),w
  2780  022D  0421               	btfsc	status,2
  2781  022E  1903               	goto	u1181
  2782  022F  2A31               	goto	u1180
  2783  0230  2A32               u1181:
  2784  0231                     	goto	l1608
  2785  0231  2A67               u1180:
  2786  0232                     	line	20
  2787                           	
  2788                           l1592:	
  2789  0232                     	clrf	(___awmod@counter)
  2790  0232  01A4               	incf	(___awmod@counter),f
  2791  0233  0AA4               	line	21
  2792                           	goto	l1598
  2793  0234  2A41               	
  2794                           l479:	
  2795  0235                     	line	22
  2796                           	
  2797                           l1594:	
  2798  0235                     	movlw	01h
  2799  0235  3001               	
  2800                           u1195:
  2801  0236                     	clrc
  2802  0236  1003               	rlf	(___awmod@divisor),f
  2803  0237  0DA0               	rlf	(___awmod@divisor+1),f
  2804  0238  0DA1               	addlw	-1
  2805  0239  3EFF               	skipz
  2806  023A  1D03               	goto	u1195
  2807  023B  2A36               	line	23
  2808                           	
  2809                           l1596:	
  2810  023C                     	movlw	low(01h)
  2811  023C  3001               	movwf	(??___awmod+0)+0
  2812  023D  00F4               	movf	(??___awmod+0)+0,w
  2813  023E  0874               	addwf	(___awmod@counter),f
  2814  023F  07A4               	goto	l1598
  2815  0240  2A41               	line	24
  2816                           	
  2817                           l478:	
  2818  0241                     	line	21
  2819                           	
  2820                           l1598:	
  2821  0241                     	btfss	(___awmod@divisor+1),(15)&7
  2822  0241  1FA1               	goto	u1201
  2823  0242  2A44               	goto	u1200
  2824  0243  2A45               u1201:
  2825  0244                     	goto	l1594
  2826  0244  2A35               u1200:
  2827  0245                     	goto	l1600
  2828  0245  2A47               	
  2829                           l480:	
  2830  0246                     	goto	l1600
  2831  0246  2A47               	line	25
  2832                           	
  2833                           l481:	
  2834  0247                     	line	26
  2835                           	
  2836                           l1600:	
  2837  0247                     	movf	(___awmod@divisor+1),w
  2838  0247  0821               	subwf	(___awmod@dividend+1),w
  2839  0248  0223               	skipz
  2840  0249  1D03               	goto	u1215
  2841  024A  2A4D               	movf	(___awmod@divisor),w
  2842  024B  0820               	subwf	(___awmod@dividend),w
  2843  024C  0222               u1215:
  2844  024D                     	skipc
  2845  024D  1C03               	goto	u1211
  2846  024E  2A50               	goto	u1210
  2847  024F  2A51               u1211:
  2848  0250                     	goto	l1604
  2849  0250  2A58               u1210:
  2850  0251                     	line	27
  2851                           	
  2852                           l1602:	
  2853  0251                     	movf	(___awmod@divisor),w
  2854  0251  0820               	subwf	(___awmod@dividend),f
  2855  0252  02A2               	movf	(___awmod@divisor+1),w
  2856  0253  0821               	skipc
  2857  0254  1C03               	decf	(___awmod@dividend+1),f
  2858  0255  03A3               	subwf	(___awmod@dividend+1),f
  2859  0256  02A3               	goto	l1604
  2860  0257  2A58               	
  2861                           l482:	
  2862  0258                     	line	28
  2863                           	
  2864                           l1604:	
  2865  0258                     	movlw	01h
  2866  0258  3001               	
  2867                           u1225:
  2868  0259                     	clrc
  2869  0259  1003               	rrf	(___awmod@divisor+1),f
  2870  025A  0CA1               	rrf	(___awmod@divisor),f
  2871  025B  0CA0               	addlw	-1
  2872  025C  3EFF               	skipz
  2873  025D  1D03               	goto	u1225
  2874  025E  2A59               	line	29
  2875                           	
  2876                           l1606:	
  2877  025F                     	movlw	01h
  2878  025F  3001               	subwf	(___awmod@counter),f
  2879  0260  02A4               	btfss	status,2
  2880  0261  1D03               	goto	u1231
  2881  0262  2A64               	goto	u1230
  2882  0263  2A65               u1231:
  2883  0264                     	goto	l1600
  2884  0264  2A47               u1230:
  2885  0265                     	goto	l1608
  2886  0265  2A67               	
  2887                           l483:	
  2888  0266                     	goto	l1608
  2889  0266  2A67               	line	30
  2890                           	
  2891                           l477:	
  2892  0267                     	line	31
  2893                           	
  2894                           l1608:	
  2895  0267                     	movf	((___awmod@sign)),w
  2896  0267  0825               	btfsc	status,2
  2897  0268  1903               	goto	u1241
  2898  0269  2A6B               	goto	u1240
  2899  026A  2A6C               u1241:
  2900  026B                     	goto	l1612
  2901  026B  2A72               u1240:
  2902  026C                     	line	32
  2903                           	
  2904                           l1610:	
  2905  026C                     	comf	(___awmod@dividend),f
  2906  026C  09A2               	comf	(___awmod@dividend+1),f
  2907  026D  09A3               	incf	(___awmod@dividend),f
  2908  026E  0AA2               	skipnz
  2909  026F  1903               	incf	(___awmod@dividend+1),f
  2910  0270  0AA3               	goto	l1612
  2911  0271  2A72               	
  2912                           l484:	
  2913  0272                     	line	33
  2914                           	
  2915                           l1612:	
  2916  0272                     	movf	(___awmod@dividend+1),w
  2917  0272  0823               	movwf	(?___awmod+1)
  2918  0273  00A1               	movf	(___awmod@dividend),w
  2919  0274  0822               	movwf	(?___awmod)
  2920  0275  00A0               	goto	l485
  2921  0276  2A77               	
  2922                           l1614:	
  2923  0277                     	line	34
  2924                           	
  2925                           l485:	
  2926  0277                     	return
  2927  0277  0008               	opt stack 0
  2928                           GLOBAL	__end_of___awmod
  2929                           	__end_of___awmod:
  2930  0278                     	signat	___awmod,8314
  2931                           	global	___awdiv
  2932                           
  2933 ;; *************** function ___awdiv *****************
  2934 ;; Defined at:
  2935 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;  divisor         2    0[BANK0 ] int 
  2938 ;;  dividend        2    2[BANK0 ] int 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  quotient        2    6[BANK0 ] int 
  2941 ;;  sign            1    5[BANK0 ] unsigned char 
  2942 ;;  counter         1    4[BANK0 ] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  2    0[BANK0 ] int 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         0       4       0       0       0
  2953 ;;      Locals:         0       4       0       0       0
  2954 ;;      Temps:          1       0       0       0       0
  2955 ;;      Totals:         1       8       0       0       0
  2956 ;;Total ram usage:        9 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    2
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_dispLCD_num
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  2966                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2967                           	line	5
  2968                           global __ptext6
  2969                           __ptext6:	;psect for function ___awdiv
  2970  01A0                     psect	text6
  2971                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2972                           	line	5
  2973                           	global	__size_of___awdiv
  2974                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2975  0073                     	
  2976                           ___awdiv:	
  2977  01A0                     ;incstack = 0
  2978                           	opt	stack 4
  2979                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2980                           	line	13
  2981                           	
  2982                           l1534:	
  2983  01A0                     	bcf	status, 5	;RP0=0, select bank0
  2984  01A0  1283               	bcf	status, 6	;RP1=0, select bank0
  2985  01A1  1303               	clrf	(___awdiv@sign)
  2986  01A2  01A5               	line	14
  2987                           	
  2988                           l1536:	
  2989  01A3                     	btfss	(___awdiv@divisor+1),7
  2990  01A3  1FA1               	goto	u1061
  2991  01A4  29A6               	goto	u1060
  2992  01A5  29A7               u1061:
  2993  01A6                     	goto	l1542
  2994  01A6  29AF               u1060:
  2995  01A7                     	line	15
  2996                           	
  2997                           l1538:	
  2998  01A7                     	comf	(___awdiv@divisor),f
  2999  01A7  09A0               	comf	(___awdiv@divisor+1),f
  3000  01A8  09A1               	incf	(___awdiv@divisor),f
  3001  01A9  0AA0               	skipnz
  3002  01AA  1903               	incf	(___awdiv@divisor+1),f
  3003  01AB  0AA1               	line	16
  3004                           	
  3005                           l1540:	
  3006  01AC                     	clrf	(___awdiv@sign)
  3007  01AC  01A5               	incf	(___awdiv@sign),f
  3008  01AD  0AA5               	goto	l1542
  3009  01AE  29AF               	line	17
  3010                           	
  3011                           l462:	
  3012  01AF                     	line	18
  3013                           	
  3014                           l1542:	
  3015  01AF                     	btfss	(___awdiv@dividend+1),7
  3016  01AF  1FA3               	goto	u1071
  3017  01B0  29B2               	goto	u1070
  3018  01B1  29B3               u1071:
  3019  01B2                     	goto	l1548
  3020  01B2  29BD               u1070:
  3021  01B3                     	line	19
  3022                           	
  3023                           l1544:	
  3024  01B3                     	comf	(___awdiv@dividend),f
  3025  01B3  09A2               	comf	(___awdiv@dividend+1),f
  3026  01B4  09A3               	incf	(___awdiv@dividend),f
  3027  01B5  0AA2               	skipnz
  3028  01B6  1903               	incf	(___awdiv@dividend+1),f
  3029  01B7  0AA3               	line	20
  3030                           	
  3031                           l1546:	
  3032  01B8                     	movlw	low(01h)
  3033  01B8  3001               	movwf	(??___awdiv+0)+0
  3034  01B9  00F4               	movf	(??___awdiv+0)+0,w
  3035  01BA  0874               	xorwf	(___awdiv@sign),f
  3036  01BB  06A5               	goto	l1548
  3037  01BC  29BD               	line	21
  3038                           	
  3039                           l463:	
  3040  01BD                     	line	22
  3041                           	
  3042                           l1548:	
  3043  01BD                     	clrf	(___awdiv@quotient)
  3044  01BD  01A6               	clrf	(___awdiv@quotient+1)
  3045  01BE  01A7               	line	23
  3046                           	
  3047                           l1550:	
  3048  01BF                     	movf	((___awdiv@divisor)),w
  3049  01BF  0820               iorwf	((___awdiv@divisor+1)),w
  3050  01C0  0421               	btfsc	status,2
  3051  01C1  1903               	goto	u1081
  3052  01C2  29C4               	goto	u1080
  3053  01C3  29C5               u1081:
  3054  01C4                     	goto	l1570
  3055  01C4  2A02               u1080:
  3056  01C5                     	line	24
  3057                           	
  3058                           l1552:	
  3059  01C5                     	clrf	(___awdiv@counter)
  3060  01C5  01A4               	incf	(___awdiv@counter),f
  3061  01C6  0AA4               	line	25
  3062                           	goto	l1558
  3063  01C7  29D4               	
  3064                           l466:	
  3065  01C8                     	line	26
  3066                           	
  3067                           l1554:	
  3068  01C8                     	movlw	01h
  3069  01C8  3001               	
  3070                           u1095:
  3071  01C9                     	clrc
  3072  01C9  1003               	rlf	(___awdiv@divisor),f
  3073  01CA  0DA0               	rlf	(___awdiv@divisor+1),f
  3074  01CB  0DA1               	addlw	-1
  3075  01CC  3EFF               	skipz
  3076  01CD  1D03               	goto	u1095
  3077  01CE  29C9               	line	27
  3078                           	
  3079                           l1556:	
  3080  01CF                     	movlw	low(01h)
  3081  01CF  3001               	movwf	(??___awdiv+0)+0
  3082  01D0  00F4               	movf	(??___awdiv+0)+0,w
  3083  01D1  0874               	addwf	(___awdiv@counter),f
  3084  01D2  07A4               	goto	l1558
  3085  01D3  29D4               	line	28
  3086                           	
  3087                           l465:	
  3088  01D4                     	line	25
  3089                           	
  3090                           l1558:	
  3091  01D4                     	btfss	(___awdiv@divisor+1),(15)&7
  3092  01D4  1FA1               	goto	u1101
  3093  01D5  29D7               	goto	u1100
  3094  01D6  29D8               u1101:
  3095  01D7                     	goto	l1554
  3096  01D7  29C8               u1100:
  3097  01D8                     	goto	l1560
  3098  01D8  29DA               	
  3099                           l467:	
  3100  01D9                     	goto	l1560
  3101  01D9  29DA               	line	29
  3102                           	
  3103                           l468:	
  3104  01DA                     	line	30
  3105                           	
  3106                           l1560:	
  3107  01DA                     	movlw	01h
  3108  01DA  3001               	
  3109                           u1115:
  3110  01DB                     	clrc
  3111  01DB  1003               	rlf	(___awdiv@quotient),f
  3112  01DC  0DA6               	rlf	(___awdiv@quotient+1),f
  3113  01DD  0DA7               	addlw	-1
  3114  01DE  3EFF               	skipz
  3115  01DF  1D03               	goto	u1115
  3116  01E0  29DB               	line	31
  3117                           	movf	(___awdiv@divisor+1),w
  3118  01E1  0821               	subwf	(___awdiv@dividend+1),w
  3119  01E2  0223               	skipz
  3120  01E3  1D03               	goto	u1125
  3121  01E4  29E7               	movf	(___awdiv@divisor),w
  3122  01E5  0820               	subwf	(___awdiv@dividend),w
  3123  01E6  0222               u1125:
  3124  01E7                     	skipc
  3125  01E7  1C03               	goto	u1121
  3126  01E8  29EA               	goto	u1120
  3127  01E9  29EB               u1121:
  3128  01EA                     	goto	l1566
  3129  01EA  29F3               u1120:
  3130  01EB                     	line	32
  3131                           	
  3132                           l1562:	
  3133  01EB                     	movf	(___awdiv@divisor),w
  3134  01EB  0820               	subwf	(___awdiv@dividend),f
  3135  01EC  02A2               	movf	(___awdiv@divisor+1),w
  3136  01ED  0821               	skipc
  3137  01EE  1C03               	decf	(___awdiv@dividend+1),f
  3138  01EF  03A3               	subwf	(___awdiv@dividend+1),f
  3139  01F0  02A3               	line	33
  3140                           	
  3141                           l1564:	
  3142  01F1                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3143  01F1  1426               	goto	l1566
  3144  01F2  29F3               	line	34
  3145                           	
  3146                           l469:	
  3147  01F3                     	line	35
  3148                           	
  3149                           l1566:	
  3150  01F3                     	movlw	01h
  3151  01F3  3001               	
  3152                           u1135:
  3153  01F4                     	clrc
  3154  01F4  1003               	rrf	(___awdiv@divisor+1),f
  3155  01F5  0CA1               	rrf	(___awdiv@divisor),f
  3156  01F6  0CA0               	addlw	-1
  3157  01F7  3EFF               	skipz
  3158  01F8  1D03               	goto	u1135
  3159  01F9  29F4               	line	36
  3160                           	
  3161                           l1568:	
  3162  01FA                     	movlw	01h
  3163  01FA  3001               	subwf	(___awdiv@counter),f
  3164  01FB  02A4               	btfss	status,2
  3165  01FC  1D03               	goto	u1141
  3166  01FD  29FF               	goto	u1140
  3167  01FE  2A00               u1141:
  3168  01FF                     	goto	l1560
  3169  01FF  29DA               u1140:
  3170  0200                     	goto	l1570
  3171  0200  2A02               	
  3172                           l470:	
  3173  0201                     	goto	l1570
  3174  0201  2A02               	line	37
  3175                           	
  3176                           l464:	
  3177  0202                     	line	38
  3178                           	
  3179                           l1570:	
  3180  0202                     	movf	((___awdiv@sign)),w
  3181  0202  0825               	btfsc	status,2
  3182  0203  1903               	goto	u1151
  3183  0204  2A06               	goto	u1150
  3184  0205  2A07               u1151:
  3185  0206                     	goto	l1574
  3186  0206  2A0D               u1150:
  3187  0207                     	line	39
  3188                           	
  3189                           l1572:	
  3190  0207                     	comf	(___awdiv@quotient),f
  3191  0207  09A6               	comf	(___awdiv@quotient+1),f
  3192  0208  09A7               	incf	(___awdiv@quotient),f
  3193  0209  0AA6               	skipnz
  3194  020A  1903               	incf	(___awdiv@quotient+1),f
  3195  020B  0AA7               	goto	l1574
  3196  020C  2A0D               	
  3197                           l471:	
  3198  020D                     	line	40
  3199                           	
  3200                           l1574:	
  3201  020D                     	movf	(___awdiv@quotient+1),w
  3202  020D  0827               	movwf	(?___awdiv+1)
  3203  020E  00A1               	movf	(___awdiv@quotient),w
  3204  020F  0826               	movwf	(?___awdiv)
  3205  0210  00A0               	goto	l472
  3206  0211  2A12               	
  3207                           l1576:	
  3208  0212                     	line	41
  3209                           	
  3210                           l472:	
  3211  0212                     	return
  3212  0212  0008               	opt stack 0
  3213                           GLOBAL	__end_of___awdiv
  3214                           	__end_of___awdiv:
  3215  0213                     	signat	___awdiv,8314
  3216                           	global	_dispLCD_init
  3217                           
  3218 ;; *************** function _dispLCD_init *****************
  3219 ;; Defined at:
  3220 ;;		line 132 in file "lcd.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;		None
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0, pclath, cstack
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3234 ;;      Params:         0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0
  3237 ;;      Totals:         0       0       0       0       0
  3238 ;;Total ram usage:        0 bytes
  3239 ;; Hardware stack levels used:    1
  3240 ;; Hardware stack levels required when called:    3
  3241 ;; This function calls:
  3242 ;;		_delay
  3243 ;;		_dispLCD_instReg
  3244 ;; This function is called by:
  3245 ;;		_main
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3249                           	file	"lcd.c"
  3250                           	line	132
  3251                           global __ptext7
  3252                           __ptext7:	;psect for function _dispLCD_init
  3253  02BD                     psect	text7
  3254                           	file	"lcd.c"
  3255                           	line	132
  3256                           	global	__size_of_dispLCD_init
  3257                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  3258  0041                     	
  3259                           _dispLCD_init:	
  3260  02BD                     ;incstack = 0
  3261                           	opt	stack 4
  3262                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  3263                           	line	134
  3264                           	
  3265                           l1616:	
  3266  02BD                     ;lcd.c: 134:     delay(100);
  3267                           	movlw	064h
  3268  02BD  3064               	movwf	(delay@t)
  3269  02BE  00F4               	movlw	0
  3270  02BF  3000               	movwf	((delay@t))+1
  3271  02C0  00F5               	fcall	_delay
  3272  02C1  120A  118A  23DD  120A  118A  	line	135
  3273                           	
  3274                           l1618:	
  3275  02C6                     ;lcd.c: 135:     TRISDbits.TRISD0 = 0;
  3276                           	bsf	status, 5	;RP0=1, select bank1
  3277  02C6  1683               	bcf	status, 6	;RP1=0, select bank1
  3278  02C7  1303               	bcf	(136)^080h,0	;volatile
  3279  02C8  1008               	line	136
  3280                           	
  3281                           l1620:	
  3282  02C9                     ;lcd.c: 136:     TRISDbits.TRISD1 = 0;
  3283                           	bcf	(136)^080h,1	;volatile
  3284  02C9  1088               	line	137
  3285                           	
  3286                           l1622:	
  3287  02CA                     ;lcd.c: 137:     TRISDbits.TRISD2 = 0;
  3288                           	bcf	(136)^080h,2	;volatile
  3289  02CA  1108               	line	138
  3290                           	
  3291                           l1624:	
  3292  02CB                     ;lcd.c: 138:     TRISDbits.TRISD3 = 0;
  3293                           	bcf	(136)^080h,3	;volatile
  3294  02CB  1188               	line	139
  3295                           	
  3296                           l1626:	
  3297  02CC                     ;lcd.c: 139:     TRISDbits.TRISD4 = 0;
  3298                           	bcf	(136)^080h,4	;volatile
  3299  02CC  1208               	line	140
  3300                           	
  3301                           l1628:	
  3302  02CD                     ;lcd.c: 140:     TRISDbits.TRISD5 = 0;
  3303                           	bcf	(136)^080h,5	;volatile
  3304  02CD  1288               	line	141
  3305                           	
  3306                           l1630:	
  3307  02CE                     ;lcd.c: 141:     TRISDbits.TRISD6 = 1;
  3308                           	bsf	(136)^080h,6	;volatile
  3309  02CE  1708               	line	142
  3310                           	
  3311                           l1632:	
  3312  02CF                     ;lcd.c: 142:     TRISDbits.TRISD7 = 1;
  3313                           	bsf	(136)^080h,7	;volatile
  3314  02CF  1788               	line	143
  3315                           ;lcd.c: 143:     delay(100);
  3316                           	movlw	064h
  3317  02D0  3064               	movwf	(delay@t)
  3318  02D1  00F4               	movlw	0
  3319  02D2  3000               	movwf	((delay@t))+1
  3320  02D3  00F5               	fcall	_delay
  3321  02D4  120A  118A  23DD  120A  118A  	line	144
  3322                           	
  3323                           l1634:	
  3324  02D9                     ;lcd.c: 144:     LCDbits.EN = 1;
  3325                           	bcf	status, 5	;RP0=0, select bank0
  3326  02D9  1283               	bcf	status, 6	;RP1=0, select bank0
  3327  02DA  1303               	bsf	(8),5	;volatile
  3328  02DB  1688               	line	145
  3329                           ;lcd.c: 145:     dispLCD_instReg( 0x20|0x00|0x08);
  3330                           	movlw	low(028h)
  3331  02DC  3028               	fcall	_dispLCD_instReg
  3332  02DD  120A  118A  2127  120A  118A  	line	146
  3333                           ;lcd.c: 146:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  3334                           	movlw	low(0Ch)
  3335  02E2  300C               	fcall	_dispLCD_instReg
  3336  02E3  120A  118A  2127  120A  118A  	line	147
  3337                           ;lcd.c: 147:     dispLCD_instReg( 0x01 );
  3338                           	movlw	low(01h)
  3339  02E8  3001               	fcall	_dispLCD_instReg
  3340  02E9  120A  118A  2127  120A  118A  	line	148
  3341                           ;lcd.c: 148:     dispLCD_instReg( 0x02 );
  3342                           	movlw	low(02h)
  3343  02EE  3002               	fcall	_dispLCD_instReg
  3344  02EF  120A  118A  2127  120A  118A  	line	149
  3345                           ;lcd.c: 149:     delay(100);
  3346                           	movlw	064h
  3347  02F4  3064               	movwf	(delay@t)
  3348  02F5  00F4               	movlw	0
  3349  02F6  3000               	movwf	((delay@t))+1
  3350  02F7  00F5               	fcall	_delay
  3351  02F8  120A  118A  23DD  120A  118A  	line	150
  3352                           	
  3353                           l83:	
  3354  02FD                     	return
  3355  02FD  0008               	opt stack 0
  3356                           GLOBAL	__end_of_dispLCD_init
  3357                           	__end_of_dispLCD_init:
  3358  02FE                     	signat	_dispLCD_init,89
  3359                           	global	_dispLCD_instReg
  3360                           
  3361 ;; *************** function _dispLCD_instReg *****************
  3362 ;; Defined at:
  3363 ;;		line 77 in file "lcd.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  i               1    wreg     unsigned char 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  i               1    0[BANK0 ] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3377 ;;      Params:         0       0       0       0       0
  3378 ;;      Locals:         0       1       0       0       0
  3379 ;;      Temps:          2       0       0       0       0
  3380 ;;      Totals:         2       1       0       0       0
  3381 ;;Total ram usage:        3 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    2
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_dispLCD_lincol
  3388 ;;		_dispLCD_init
  3389 ;;		_dispLCD_clr
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3393                           	line	77
  3394                           global __ptext8
  3395                           __ptext8:	;psect for function _dispLCD_instReg
  3396  0127                     psect	text8
  3397                           	file	"lcd.c"
  3398                           	line	77
  3399                           	global	__size_of_dispLCD_instReg
  3400                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  3401  0079                     	
  3402                           _dispLCD_instReg:	
  3403  0127                     ;incstack = 0
  3404                           	opt	stack 3
  3405                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  3406                           ;dispLCD_instReg@i stored from wreg
  3407                           	bcf	status, 5	;RP0=0, select bank0
  3408  0127  1283               	bcf	status, 6	;RP1=0, select bank0
  3409  0128  1303               	movwf	(dispLCD_instReg@i)
  3410  0129  00A0               	line	79
  3411                           	
  3412                           l1484:	
  3413  012A                     ;lcd.c: 77: void dispLCD_instReg( unsigned char i );lcd.c: 78: {;lcd.c: 79:     LCDbits.
                                 RS = 0;
  3414                           	bcf	(8),4	;volatile
  3415  012A  1208               	line	80
  3416                           	
  3417                           l1486:	
  3418  012B                     ;lcd.c: 80:     LCDbits.BUS = (i>>4);
  3419                           	movf	(dispLCD_instReg@i),w
  3420  012B  0820               	movwf	(??_dispLCD_instReg+0)+0
  3421  012C  00F4               	movlw	04h
  3422  012D  3004               u975:
  3423  012E                     	clrc
  3424  012E  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  3425  012F  0CF4               	addlw	-1
  3426  0130  3EFF               	skipz
  3427  0131  1D03               	goto	u975
  3428  0132  292E               	movf	(8),w	;volatile
  3429  0133  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3430  0134  0674               	andlw	not ((1<<4)-1)
  3431  0135  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3432  0136  0674               	movwf	(8)	;volatile
  3433  0137  0088               	line	82
  3434                           	
  3435                           l1488:	
  3436  0138                     ;lcd.c: 82:     LCDbits.EN = 0;
  3437                           	bcf	(8),5	;volatile
  3438  0138  1288               	line	83
  3439                           ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  3440                           		decf	((dispLCD_instReg@i)),w
  3441  0139  0320               	btfsc	status,2
  3442  013A  1903               	goto	u981
  3443  013B  293D               	goto	u980
  3444  013C  293E               u981:
  3445  013D                     	goto	l1492
  3446  013D  2945               u980:
  3447  013E                     	
  3448                           l1490:	
  3449  013E                     		movlw	2
  3450  013E  3002               	xorwf	((dispLCD_instReg@i)),w
  3451  013F  0620               	btfss	status,2
  3452  0140  1D03               	goto	u991
  3453  0141  2943               	goto	u990
  3454  0142  2944               u991:
  3455  0143                     	goto	l1494
  3456  0143  294F               u990:
  3457  0144                     	goto	l1492
  3458  0144  2945               	
  3459                           l67:	
  3460  0145                     	line	84
  3461                           	
  3462                           l1492:	
  3463  0145                     ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3464                           	opt asmopt_push
  3465                           opt asmopt_off
  3466                           movlw	3
  3467  0145  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  3468  0146  00F5               	movlw	151
  3469  0147  3097               movwf	((??_dispLCD_instReg+0)+0),f
  3470  0148  00F4               	u1397:
  3471  0149                     decfsz	((??_dispLCD_instReg+0)+0),f
  3472  0149  0BF4               	goto	u1397
  3473  014A  2949               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  3474  014B  0BF5               	goto	u1397
  3475  014C  2949               	nop2
  3476  014D  294E               opt asmopt_pop
  3477                           
  3478                           	goto	l1496
  3479  014E  2954               	line	85
  3480                           ;lcd.c: 85:     else
  3481                           	
  3482                           l65:	
  3483  014F                     	line	86
  3484                           	
  3485                           l1494:	
  3486  014F                     ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3487                           	opt asmopt_push
  3488                           opt asmopt_off
  3489                           	movlw	13
  3490  014F  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3491  0150  00F4               	u1407:
  3492  0151                     decfsz	(??_dispLCD_instReg+0)+0,f
  3493  0151  0BF4               	goto	u1407
  3494  0152  2951               opt asmopt_pop
  3495                           
  3496                           	goto	l1496
  3497  0153  2954               	
  3498                           l68:	
  3499  0154                     	line	87
  3500                           	
  3501                           l1496:	
  3502  0154                     ;lcd.c: 87:     LCDbits.EN = 1;
  3503                           	bcf	status, 5	;RP0=0, select bank0
  3504  0154  1283               	bcf	status, 6	;RP1=0, select bank0
  3505  0155  1303               	bsf	(8),5	;volatile
  3506  0156  1688               	line	90
  3507                           	
  3508                           l1498:	
  3509  0157                     ;lcd.c: 90:     if( (i & 0xF0) == (0x20 | 0x00) )
  3510                           	movlw	low(0F0h)
  3511  0157  30F0               	andwf	(dispLCD_instReg@i),w
  3512  0158  0520               	movwf	(??_dispLCD_instReg+0)+0
  3513  0159  00F4               		movlw	32
  3514  015A  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  3515  015B  0674               	btfss	status,2
  3516  015C  1D03               	goto	u1001
  3517  015D  295F               	goto	u1000
  3518  015E  2960               u1001:
  3519  015F                     	goto	l1510
  3520  015F  2977               u1000:
  3521  0160                     	line	92
  3522                           	
  3523                           l1500:	
  3524  0160                     ;lcd.c: 91:     {;lcd.c: 92:         LCDbits.RS = 0;
  3525                           	bcf	(8),4	;volatile
  3526  0160  1208               	line	93
  3527                           	
  3528                           l1502:	
  3529  0161                     ;lcd.c: 93:         LCDbits.BUS = i>>4;
  3530                           	movf	(dispLCD_instReg@i),w
  3531  0161  0820               	movwf	(??_dispLCD_instReg+0)+0
  3532  0162  00F4               	movlw	04h
  3533  0163  3004               u1015:
  3534  0164                     	clrc
  3535  0164  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  3536  0165  0CF4               	addlw	-1
  3537  0166  3EFF               	skipz
  3538  0167  1D03               	goto	u1015
  3539  0168  2964               	movf	(8),w	;volatile
  3540  0169  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3541  016A  0674               	andlw	not ((1<<4)-1)
  3542  016B  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3543  016C  0674               	movwf	(8)	;volatile
  3544  016D  0088               	line	94
  3545                           	
  3546                           l1504:	
  3547  016E                     ;lcd.c: 94:         LCDbits.EN = 0;
  3548                           	bcf	(8),5	;volatile
  3549  016E  1288               	line	95
  3550                           	
  3551                           l1506:	
  3552  016F                     ;lcd.c: 95:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3553                           	opt asmopt_push
  3554                           opt asmopt_off
  3555                           	movlw	13
  3556  016F  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3557  0170  00F4               	u1417:
  3558  0171                     decfsz	(??_dispLCD_instReg+0)+0,f
  3559  0171  0BF4               	goto	u1417
  3560  0172  2971               opt asmopt_pop
  3561                           
  3562                           	line	96
  3563                           	
  3564                           l1508:	
  3565  0173                     ;lcd.c: 96:         LCDbits.EN = 1;
  3566                           	bcf	status, 5	;RP0=0, select bank0
  3567  0173  1283               	bcf	status, 6	;RP1=0, select bank0
  3568  0174  1303               	bsf	(8),5	;volatile
  3569  0175  1688               	goto	l1510
  3570  0176  2977               	line	97
  3571                           ;lcd.c: 97:     }
  3572                           	
  3573                           l69:	
  3574  0177                     	line	99
  3575                           	
  3576                           l1510:	
  3577  0177                     ;lcd.c: 99:     LCDbits.RS = 0;
  3578                           	bcf	(8),4	;volatile
  3579  0177  1208               	line	100
  3580                           	
  3581                           l1512:	
  3582  0178                     ;lcd.c: 100:     LCDbits.BUS = i & 0x0F;
  3583                           	movlw	low(0Fh)
  3584  0178  300F               	andwf	(dispLCD_instReg@i),w
  3585  0179  0520               	movwf	(??_dispLCD_instReg+0)+0
  3586  017A  00F4               	movf	(8),w	;volatile
  3587  017B  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3588  017C  0674               	andlw	not ((1<<4)-1)
  3589  017D  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  3590  017E  0674               	movwf	(8)	;volatile
  3591  017F  0088               	line	101
  3592                           	
  3593                           l1514:	
  3594  0180                     ;lcd.c: 101:     LCDbits.EN = 0;
  3595                           	bcf	(8),5	;volatile
  3596  0180  1288               	line	102
  3597                           	
  3598                           l1516:	
  3599  0181                     ;lcd.c: 102:     if( i == 0x01 || i == 0x02 )
  3600                           		decf	((dispLCD_instReg@i)),w
  3601  0181  0320               	btfsc	status,2
  3602  0182  1903               	goto	u1021
  3603  0183  2985               	goto	u1020
  3604  0184  2986               u1021:
  3605  0185                     	goto	l1520
  3606  0185  298D               u1020:
  3607  0186                     	
  3608                           l1518:	
  3609  0186                     		movlw	2
  3610  0186  3002               	xorwf	((dispLCD_instReg@i)),w
  3611  0187  0620               	btfss	status,2
  3612  0188  1D03               	goto	u1031
  3613  0189  298B               	goto	u1030
  3614  018A  298C               u1031:
  3615  018B                     	goto	l1522
  3616  018B  2997               u1030:
  3617  018C                     	goto	l1520
  3618  018C  298D               	
  3619                           l72:	
  3620  018D                     	line	103
  3621                           	
  3622                           l1520:	
  3623  018D                     ;lcd.c: 103:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3624                           	opt asmopt_push
  3625                           opt asmopt_off
  3626                           movlw	3
  3627  018D  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  3628  018E  00F5               	movlw	151
  3629  018F  3097               movwf	((??_dispLCD_instReg+0)+0),f
  3630  0190  00F4               	u1427:
  3631  0191                     decfsz	((??_dispLCD_instReg+0)+0),f
  3632  0191  0BF4               	goto	u1427
  3633  0192  2991               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  3634  0193  0BF5               	goto	u1427
  3635  0194  2991               	nop2
  3636  0195  2996               opt asmopt_pop
  3637                           
  3638                           	goto	l1524
  3639  0196  299C               	line	104
  3640                           ;lcd.c: 104:     else
  3641                           	
  3642                           l70:	
  3643  0197                     	line	105
  3644                           	
  3645                           l1522:	
  3646  0197                     ;lcd.c: 105:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3647                           	opt asmopt_push
  3648                           opt asmopt_off
  3649                           	movlw	13
  3650  0197  300D               movwf	((??_dispLCD_instReg+0)+0),f
  3651  0198  00F4               	u1437:
  3652  0199                     decfsz	(??_dispLCD_instReg+0)+0,f
  3653  0199  0BF4               	goto	u1437
  3654  019A  2999               opt asmopt_pop
  3655                           
  3656                           	goto	l1524
  3657  019B  299C               	
  3658                           l73:	
  3659  019C                     	line	106
  3660                           	
  3661                           l1524:	
  3662  019C                     ;lcd.c: 106:     LCDbits.EN = 1;
  3663                           	bcf	status, 5	;RP0=0, select bank0
  3664  019C  1283               	bcf	status, 6	;RP1=0, select bank0
  3665  019D  1303               	bsf	(8),5	;volatile
  3666  019E  1688               	line	107
  3667                           	
  3668                           l74:	
  3669  019F                     	return
  3670  019F  0008               	opt stack 0
  3671                           GLOBAL	__end_of_dispLCD_instReg
  3672                           	__end_of_dispLCD_instReg:
  3673  01A0                     	signat	_dispLCD_instReg,4217
  3674                           	global	_delay
  3675                           
  3676 ;; *************** function _delay *****************
  3677 ;; Defined at:
  3678 ;;		line 12 in file "delay.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  t               2    4[COMMON] unsigned int 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         2       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0
  3694 ;;      Temps:          0       1       0       0       0
  3695 ;;      Totals:         2       1       0       0       0
  3696 ;;Total ram usage:        3 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    2
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_dispLCD_init
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3706                           	file	"delay.c"
  3707                           	line	12
  3708                           global __ptext9
  3709                           __ptext9:	;psect for function _delay
  3710  03DD                     psect	text9
  3711                           	file	"delay.c"
  3712                           	line	12
  3713                           	global	__size_of_delay
  3714                           	__size_of_delay	equ	__end_of_delay-_delay
  3715  0018                     	
  3716                           _delay:	
  3717  03DD                     ;incstack = 0
  3718                           	opt	stack 4
  3719                           ; Regs used in _delay: [wreg+status,2+status,0]
  3720                           	line	14
  3721                           	
  3722                           l1526:	
  3723  03DD                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  3724                           	goto	l1530
  3725  03DD  2BED               	
  3726                           l31:	
  3727  03DE                     	line	16
  3728                           	
  3729                           l1528:	
  3730  03DE                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));

  3731                           	opt asmopt_push
  3732                           opt asmopt_off
  3733                           	movlw	199
  3734  03DE  30C7               	bcf	status, 5	;RP0=0, select bank0
  3735  03DF  1283               	bcf	status, 6	;RP1=0, select bank0
  3736  03E0  1303               movwf	((??_delay+0)+0),f
  3737  03E1  00A0               	u1447:
  3738  03E2                     	nop2
  3739  03E2  2BE3               decfsz	(??_delay+0)+0,f
  3740  03E3  0BA0               	goto	u1447
  3741  03E4  2BE2               	nop2
  3742  03E5  2BE6               opt asmopt_pop
  3743                           
  3744                           	line	17
  3745                           ;delay.c: 17:         --t;
  3746                           	movlw	01h
  3747  03E6  3001               	subwf	(delay@t),f
  3748  03E7  02F4               	movlw	0
  3749  03E8  3000               	skipc
  3750  03E9  1C03               	decf	(delay@t+1),f
  3751  03EA  03F5               	subwf	(delay@t+1),f
  3752  03EB  02F5               	goto	l1530
  3753  03EC  2BED               	line	18
  3754                           ;delay.c: 18:     }
  3755                           	
  3756                           l30:	
  3757  03ED                     	line	14
  3758                           	
  3759                           l1530:	
  3760  03ED                     ;delay.c: 14:     while( t )
  3761                           	movf	((delay@t)),w
  3762  03ED  0874               iorwf	((delay@t+1)),w
  3763  03EE  0475               	btfss	status,2
  3764  03EF  1D03               	goto	u1041
  3765  03F0  2BF2               	goto	u1040
  3766  03F1  2BF3               u1041:
  3767  03F2                     	goto	l1528
  3768  03F2  2BDE               u1040:
  3769  03F3                     	goto	l33
  3770  03F3  2BF4               	
  3771                           l32:	
  3772  03F4                     	line	19
  3773                           	
  3774                           l33:	
  3775  03F4                     	return
  3776  03F4  0008               	opt stack 0
  3777                           GLOBAL	__end_of_delay
  3778                           	__end_of_delay:
  3779  03F5                     	signat	_delay,4217
  3780                           	global	_ADC_read
  3781                           
  3782 ;; *************** function _ADC_read *****************
  3783 ;; Defined at:
  3784 ;;		line 39 in file "adc.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;		None
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  2    4[COMMON] unsigned int 
  3791 ;; Registers used:
  3792 ;;		wreg
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3798 ;;      Params:         2       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0
  3801 ;;      Totals:         2       0       0       0       0
  3802 ;;Total ram usage:        2 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; Hardware stack levels required when called:    2
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_main
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3812                           	file	"adc.c"
  3813                           	line	39
  3814                           global __ptext10
  3815                           __ptext10:	;psect for function _ADC_read
  3816  0466                     psect	text10
  3817                           	file	"adc.c"
  3818                           	line	39
  3819                           	global	__size_of_ADC_read
  3820                           	__size_of_ADC_read	equ	__end_of_ADC_read-_ADC_read
  3821  0006                     	
  3822                           _ADC_read:	
  3823  0466                     ;incstack = 0
  3824                           	opt	stack 5
  3825                           ; Regs used in _ADC_read: [wreg]
  3826                           	line	41
  3827                           	
  3828                           l1354:	
  3829  0466                     ;adc.c: 41:     return( ADC_value );
  3830                           	movf	(_ADC_value+1),w
  3831  0466  0879               	movwf	(?_ADC_read+1)
  3832  0467  00F5               	movf	(_ADC_value),w
  3833  0468  0878               	movwf	(?_ADC_read)
  3834  0469  00F4               	goto	l25
  3835  046A  2C6B               	
  3836                           l1356:	
  3837  046B                     	line	42
  3838                           	
  3839                           l25:	
  3840  046B                     	return
  3841  046B  0008               	opt stack 0
  3842                           GLOBAL	__end_of_ADC_read
  3843                           	__end_of_ADC_read:
  3844  046C                     	signat	_ADC_read,90
  3845                           	global	_ADC_init
  3846                           
  3847 ;; *************** function _ADC_init *****************
  3848 ;; Defined at:
  3849 ;;		line 12 in file "adc.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2, status,0
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3863 ;;      Params:         0       0       0       0       0
  3864 ;;      Locals:         0       0       0       0       0
  3865 ;;      Temps:          0       0       0       0       0
  3866 ;;      Totals:         0       0       0       0       0
  3867 ;;Total ram usage:        0 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    2
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3877                           	line	12
  3878                           global __ptext11
  3879                           __ptext11:	;psect for function _ADC_init
  3880  039D                     psect	text11
  3881                           	file	"adc.c"
  3882                           	line	12
  3883                           	global	__size_of_ADC_init
  3884                           	__size_of_ADC_init	equ	__end_of_ADC_init-_ADC_init
  3885  0021                     	
  3886                           _ADC_init:	
  3887  039D                     ;incstack = 0
  3888                           	opt	stack 5
  3889                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
  3890                           	line	14
  3891                           	
  3892                           l1334:	
  3893  039D                     ;adc.c: 14:     INTCONbits.GIE = 0;
  3894                           	bcf	(11),7	;volatile
  3895  039D  138B               	line	16
  3896                           ;adc.c: 16:     ANSELbits.ANS0 = 1;
  3897                           	bsf	status, 5	;RP0=1, select bank3
  3898  039E  1683               	bsf	status, 6	;RP1=1, select bank3
  3899  039F  1703               	bsf	(392)^0180h,0	;volatile
  3900  03A0  1408               	line	17
  3901                           	
  3902                           l1336:	
  3903  03A1                     ;adc.c: 17:     ADCON0bits.ADCS = 0x2;
  3904                           	bcf	status, 5	;RP0=0, select bank0
  3905  03A1  1283               	bcf	status, 6	;RP1=0, select bank0
  3906  03A2  1303               	movf	(31),w	;volatile
  3907  03A3  081F               	andlw	not (((1<<2)-1)<<6)
  3908  03A4  393F               	iorlw	(02h & ((1<<2)-1))<<6
  3909  03A5  3880               	movwf	(31)	;volatile
  3910  03A6  009F               	line	18
  3911                           	
  3912                           l1338:	
  3913  03A7                     ;adc.c: 18:     ADCON1bits.VCFG0 = 0;
  3914                           	bsf	status, 5	;RP0=1, select bank1
  3915  03A7  1683               	bcf	status, 6	;RP1=0, select bank1
  3916  03A8  1303               	bcf	(159)^080h,4	;volatile
  3917  03A9  121F               	line	19
  3918                           	
  3919                           l1340:	
  3920  03AA                     ;adc.c: 19:     ADCON1bits.VCFG1 = 0;
  3921                           	bcf	(159)^080h,5	;volatile
  3922  03AA  129F               	line	20
  3923                           ;adc.c: 20:     ADCON0bits.CHS = 0x0;
  3924                           	movlw	((0 & ((1<<4)-1))<<2)|not (((1<<4)-1)<<2)
  3925  03AB  30C3               	bcf	status, 5	;RP0=0, select bank0
  3926  03AC  1283               	bcf	status, 6	;RP1=0, select bank0
  3927  03AD  1303               	andwf	(31),f	;volatile
  3928  03AE  059F               	line	21
  3929                           	
  3930                           l1342:	
  3931  03AF                     ;adc.c: 21:     ADCON1bits.ADFM = 1;
  3932                           	bsf	status, 5	;RP0=1, select bank1
  3933  03AF  1683               	bcf	status, 6	;RP1=0, select bank1
  3934  03B0  1303               	bsf	(159)^080h,7	;volatile
  3935  03B1  179F               	line	22
  3936                           	
  3937                           l1344:	
  3938  03B2                     ;adc.c: 22:     ADCON0bits.ADON = 1;
  3939                           	bcf	status, 5	;RP0=0, select bank0
  3940  03B2  1283               	bcf	status, 6	;RP1=0, select bank0
  3941  03B3  1303               	bsf	(31),0	;volatile
  3942  03B4  141F               	line	24
  3943                           	
  3944                           l1346:	
  3945  03B5                     ;adc.c: 24:     INTCONbits.PEIE = 1;
  3946                           	bsf	(11),6	;volatile
  3947  03B5  170B               	line	25
  3948                           	
  3949                           l1348:	
  3950  03B6                     ;adc.c: 25:     PIE1bits.ADIE = 1;
  3951                           	bsf	status, 5	;RP0=1, select bank1
  3952  03B6  1683               	bcf	status, 6	;RP1=0, select bank1
  3953  03B7  1303               	bsf	(140)^080h,6	;volatile
  3954  03B8  170C               	line	26
  3955                           	
  3956                           l1350:	
  3957  03B9                     ;adc.c: 26:     INTCONbits.GIE = 1;
  3958                           	bsf	(11),7	;volatile
  3959  03B9  178B               	line	27
  3960                           	
  3961                           l1352:	
  3962  03BA                     ;adc.c: 27:     ADCON0bits.GO = 1;
  3963                           	bcf	status, 5	;RP0=0, select bank0
  3964  03BA  1283               	bcf	status, 6	;RP1=0, select bank0
  3965  03BB  1303               	bsf	(31),1	;volatile
  3966  03BC  149F               	line	28
  3967                           	
  3968                           l17:	
  3969  03BD                     	return
  3970  03BD  0008               	opt stack 0
  3971                           GLOBAL	__end_of_ADC_init
  3972                           	__end_of_ADC_init:
  3973  03BE                     	signat	_ADC_init,89
  3974                           	global	_isr
  3975                           
  3976 ;; *************** function _isr *****************
  3977 ;; Defined at:
  3978 ;;		line 14 in file "interrupt.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0
  3994 ;;      Temps:          2       0       0       0       0
  3995 ;;      Totals:         2       0       0       0       0
  3996 ;;Total ram usage:        2 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    1
  3999 ;; This function calls:
  4000 ;;		_ADC_int
  4001 ;;		_T0_int
  4002 ;;		_T1_int
  4003 ;;		_T2_int
  4004 ;; This function is called by:
  4005 ;;		Interrupt level 1
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4009                           	file	"interrupt.c"
  4010                           	line	14
  4011                           global __ptext12
  4012                           __ptext12:	;psect for function _isr
  4013  0339                     psect	text12
  4014                           	file	"interrupt.c"
  4015                           	line	14
  4016                           	global	__size_of_isr
  4017                           	__size_of_isr	equ	__end_of_isr-_isr
  4018  0039                     	
  4019                           _isr:	
  4020  0339                     ;incstack = 0
  4021                           	opt	stack 3
  4022                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4023                           psect	intentry,class=CODE,delta=2
  4024                           global __pintentry
  4025                           __pintentry:
  4026  0004                     global interrupt_function
  4027                           interrupt_function:
  4028  0004                     	global saved_w
  4029                           	saved_w	set	btemp+0
  4030  007E                     	movwf	saved_w
  4031  0004  00FE               	swapf	status,w
  4032  0005  0E03               	movwf	(??_isr+0)
  4033  0006  00F2               	movf	pclath,w
  4034  0007  080A               	movwf	(??_isr+1)
  4035  0008  00F3               	ljmp	_isr
  4036  0009  120A  118A  2B39   psect	text12
  4037                           	line	16
  4038                           	
  4039                           i1l1434:	
  4040  0339                     ;interrupt.c: 16:     if( INTCONbits.T0IF )
  4041                           	btfss	(11),2	;volatile
  4042  0339  1D0B               	goto	u92_21
  4043  033A  2B3C               	goto	u92_20
  4044  033B  2B3D               u92_21:
  4045  033C                     	goto	i1l1440
  4046  033C  2B44               u92_20:
  4047  033D                     	line	18
  4048                           	
  4049                           i1l1436:	
  4050  033D                     ;interrupt.c: 17:     {;interrupt.c: 18:         INTCONbits.T0IF = 0;
  4051                           	bcf	(11),2	;volatile
  4052  033D  110B               	line	19
  4053                           	
  4054                           i1l1438:	
  4055  033E                     ;interrupt.c: 19:         T0_int();
  4056                           	fcall	_T0_int
  4057  033E  120A  118A  2431  120A  118A  	goto	i1l1440
  4058  0343  2B44               	line	20
  4059                           ;interrupt.c: 20:     }
  4060                           	
  4061                           i1l50:	
  4062  0344                     	line	21
  4063                           	
  4064                           i1l1440:	
  4065  0344                     ;interrupt.c: 21:     if( PIR1bits.TMR1IF )
  4066                           	bcf	status, 5	;RP0=0, select bank0
  4067  0344  1283               	bcf	status, 6	;RP1=0, select bank0
  4068  0345  1303               	btfss	(12),0	;volatile
  4069  0346  1C0C               	goto	u93_21
  4070  0347  2B49               	goto	u93_20
  4071  0348  2B4A               u93_21:
  4072  0349                     	goto	i1l1446
  4073  0349  2B51               u93_20:
  4074  034A                     	line	23
  4075                           	
  4076                           i1l1442:	
  4077  034A                     ;interrupt.c: 22:     {;interrupt.c: 23:         PIR1bits.TMR1IF = 0;
  4078                           	bcf	(12),0	;volatile
  4079  034A  100C               	line	24
  4080                           	
  4081                           i1l1444:	
  4082  034B                     ;interrupt.c: 24:         T1_int();
  4083                           	fcall	_T1_int
  4084  034B  120A  118A  240A  120A  118A  	goto	i1l1446
  4085  0350  2B51               	line	25
  4086                           ;interrupt.c: 25:     }
  4087                           	
  4088                           i1l51:	
  4089  0351                     	line	26
  4090                           	
  4091                           i1l1446:	
  4092  0351                     ;interrupt.c: 26:     if( PIR1bits.TMR2IF )
  4093                           	bcf	status, 5	;RP0=0, select bank0
  4094  0351  1283               	bcf	status, 6	;RP1=0, select bank0
  4095  0352  1303               	btfss	(12),1	;volatile
  4096  0353  1C8C               	goto	u94_21
  4097  0354  2B56               	goto	u94_20
  4098  0355  2B57               u94_21:
  4099  0356                     	goto	i1l1452
  4100  0356  2B5E               u94_20:
  4101  0357                     	line	28
  4102                           	
  4103                           i1l1448:	
  4104  0357                     ;interrupt.c: 27:     {;interrupt.c: 28:         PIR1bits.TMR2IF = 0;
  4105                           	bcf	(12),1	;volatile
  4106  0357  108C               	line	29
  4107                           	
  4108                           i1l1450:	
  4109  0358                     ;interrupt.c: 29:         T2_int();
  4110                           	fcall	_T2_int
  4111  0358  120A  118A  2443  120A  118A  	goto	i1l1452
  4112  035D  2B5E               	line	30
  4113                           ;interrupt.c: 30:     }
  4114                           	
  4115                           i1l52:	
  4116  035E                     	line	31
  4117                           	
  4118                           i1l1452:	
  4119  035E                     ;interrupt.c: 31:     if( PIR1bits.ADIF )
  4120                           	bcf	status, 5	;RP0=0, select bank0
  4121  035E  1283               	bcf	status, 6	;RP1=0, select bank0
  4122  035F  1303               	btfss	(12),6	;volatile
  4123  0360  1F0C               	goto	u95_21
  4124  0361  2B63               	goto	u95_20
  4125  0362  2B64               u95_21:
  4126  0363                     	goto	i1l54
  4127  0363  2B6B               u95_20:
  4128  0364                     	line	33
  4129                           	
  4130                           i1l1454:	
  4131  0364                     ;interrupt.c: 32:     {;interrupt.c: 33:         PIR1bits.ADIF = 0;
  4132                           	bcf	(12),6	;volatile
  4133  0364  130C               	line	34
  4134                           	
  4135                           i1l1456:	
  4136  0365                     ;interrupt.c: 34:         ADC_int();
  4137                           	fcall	_ADC_int
  4138  0365  120A  118A  23BE  120A  118A  	goto	i1l54
  4139  036A  2B6B               	line	35
  4140                           ;interrupt.c: 35:     }
  4141                           	
  4142                           i1l53:	
  4143  036B                     	line	36
  4144                           	
  4145                           i1l54:	
  4146  036B                     	movf	(??_isr+1),w
  4147  036B  0873               	movwf	pclath
  4148  036C  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  4149  036D  0E72               	movwf	status
  4150  036E  0083               	swapf	saved_w,f
  4151  036F  0EFE               	swapf	saved_w,w
  4152  0370  0E7E               	retfie
  4153  0371  0009               	opt stack 0
  4154                           GLOBAL	__end_of_isr
  4155                           	__end_of_isr:
  4156  0372                     	signat	_isr,89
  4157                           	global	_T2_int
  4158                           
  4159 ;; *************** function _T2_int *****************
  4160 ;; Defined at:
  4161 ;;		line 132 in file "timers.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4175 ;;      Params:         0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0
  4177 ;;      Temps:          0       0       0       0       0
  4178 ;;      Totals:         0       0       0       0       0
  4179 ;;Total ram usage:        0 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_isr
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4188                           	file	"timers.c"
  4189                           	line	132
  4190                           global __ptext13
  4191                           __ptext13:	;psect for function _T2_int
  4192  0443                     psect	text13
  4193                           	file	"timers.c"
  4194                           	line	132
  4195                           	global	__size_of_T2_int
  4196                           	__size_of_T2_int	equ	__end_of_T2_int-_T2_int
  4197  0010                     	
  4198                           _T2_int:	
  4199  0443                     ;incstack = 0
  4200                           	opt	stack 3
  4201                           ; Regs used in _T2_int: [wreg+status,2+status,0]
  4202                           	line	134
  4203                           	
  4204                           i1l1364:	
  4205  0443                     ;timers.c: 134:     if( T2count )
  4206                           	bcf	status, 5	;RP0=0, select bank0
  4207  0443  1283               	bcf	status, 6	;RP1=0, select bank0
  4208  0444  1303               	movf	((_T2count)),w
  4209  0445  083D               iorwf	((_T2count+1)),w
  4210  0446  043E               	btfsc	status,2
  4211  0447  1903               	goto	u80_21
  4212  0448  2C4A               	goto	u80_20
  4213  0449  2C4B               u80_21:
  4214  044A                     	goto	i1l221
  4215  044A  2C52               u80_20:
  4216  044B                     	line	136
  4217                           	
  4218                           i1l1366:	
  4219  044B                     ;timers.c: 135:     {;timers.c: 136:         --T2count;
  4220                           	movlw	01h
  4221  044B  3001               	subwf	(_T2count),f
  4222  044C  02BD               	movlw	0
  4223  044D  3000               	skipc
  4224  044E  1C03               	decf	(_T2count+1),f
  4225  044F  03BE               	subwf	(_T2count+1),f
  4226  0450  02BE               	goto	i1l221
  4227  0451  2C52               	line	137
  4228                           ;timers.c: 137:     }
  4229                           	
  4230                           i1l220:	
  4231  0452                     	line	138
  4232                           	
  4233                           i1l221:	
  4234  0452                     	return
  4235  0452  0008               	opt stack 0
  4236                           GLOBAL	__end_of_T2_int
  4237                           	__end_of_T2_int:
  4238  0453                     	signat	_T2_int,89
  4239                           	global	_T1_int
  4240                           
  4241 ;; *************** function _T1_int *****************
  4242 ;; Defined at:
  4243 ;;		line 80 in file "timers.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4257 ;;      Params:         0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0
  4260 ;;      Totals:         0       0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_isr
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4270                           	line	80
  4271                           global __ptext14
  4272                           __ptext14:	;psect for function _T1_int
  4273  040A                     psect	text14
  4274                           	file	"timers.c"
  4275                           	line	80
  4276                           	global	__size_of_T1_int
  4277                           	__size_of_T1_int	equ	__end_of_T1_int-_T1_int
  4278  0014                     	
  4279                           _T1_int:	
  4280  040A                     ;incstack = 0
  4281                           	opt	stack 3
  4282                           ; Regs used in _T1_int: [wreg+status,2+status,0]
  4283                           	line	82
  4284                           	
  4285                           i1l1358:	
  4286  040A                     ;timers.c: 82:     TMR1H = ((0xFFFF-1000+1) >> 8) & 0x00FF;
  4287                           	movlw	low(0FCh)
  4288  040A  30FC               	bcf	status, 5	;RP0=0, select bank0
  4289  040B  1283               	bcf	status, 6	;RP1=0, select bank0
  4290  040C  1303               	movwf	(15)	;volatile
  4291  040D  008F               	line	83
  4292                           ;timers.c: 83:     TMR1L = ((0xFFFF-1000+1) >> 0) & 0x00FF;
  4293                           	movlw	low(018h)
  4294  040E  3018               	movwf	(14)	;volatile
  4295  040F  008E               	line	84
  4296                           	
  4297                           i1l1360:	
  4298  0410                     ;timers.c: 84:     if( T1count )
  4299                           	movf	((_T1count)),w
  4300  0410  083F               iorwf	((_T1count+1)),w
  4301  0411  0440               	btfsc	status,2
  4302  0412  1903               	goto	u79_21
  4303  0413  2C15               	goto	u79_20
  4304  0414  2C16               u79_21:
  4305  0415                     	goto	i1l202
  4306  0415  2C1D               u79_20:
  4307  0416                     	line	86
  4308                           	
  4309                           i1l1362:	
  4310  0416                     ;timers.c: 85:     {;timers.c: 86:         --T1count;
  4311                           	movlw	01h
  4312  0416  3001               	subwf	(_T1count),f
  4313  0417  02BF               	movlw	0
  4314  0418  3000               	skipc
  4315  0419  1C03               	decf	(_T1count+1),f
  4316  041A  03C0               	subwf	(_T1count+1),f
  4317  041B  02C0               	goto	i1l202
  4318  041C  2C1D               	line	87
  4319                           ;timers.c: 87:     }
  4320                           	
  4321                           i1l201:	
  4322  041D                     	line	88
  4323                           	
  4324                           i1l202:	
  4325  041D                     	return
  4326  041D  0008               	opt stack 0
  4327                           GLOBAL	__end_of_T1_int
  4328                           	__end_of_T1_int:
  4329  041E                     	signat	_T1_int,89
  4330                           	global	_T0_int
  4331                           
  4332 ;; *************** function _T0_int *****************
  4333 ;; Defined at:
  4334 ;;		line 33 in file "timers.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, status,2, status,0
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0
  4351 ;;      Totals:         0       0       0       0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; This function calls:
  4355 ;;		Nothing
  4356 ;; This function is called by:
  4357 ;;		_isr
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4361                           	line	33
  4362                           global __ptext15
  4363                           __ptext15:	;psect for function _T0_int
  4364  0431                     psect	text15
  4365                           	file	"timers.c"
  4366                           	line	33
  4367                           	global	__size_of_T0_int
  4368                           	__size_of_T0_int	equ	__end_of_T0_int-_T0_int
  4369  0012                     	
  4370                           _T0_int:	
  4371  0431                     ;incstack = 0
  4372                           	opt	stack 3
  4373                           ; Regs used in _T0_int: [wreg+status,2+status,0]
  4374                           	line	35
  4375                           	
  4376                           i1l984:	
  4377  0431                     ;timers.c: 35:     TMR0 = (256-250);
  4378                           	movlw	low(06h)
  4379  0431  3006               	bcf	status, 5	;RP0=0, select bank0
  4380  0432  1283               	bcf	status, 6	;RP1=0, select bank0
  4381  0433  1303               	movwf	(1)	;volatile
  4382  0434  0081               	line	36
  4383                           	
  4384                           i1l986:	
  4385  0435                     ;timers.c: 36:     if( T0count )
  4386                           	movf	((_T0count)),w
  4387  0435  0876               iorwf	((_T0count+1)),w
  4388  0436  0477               	btfsc	status,2
  4389  0437  1903               	goto	u31_21
  4390  0438  2C3A               	goto	u31_20
  4391  0439  2C3B               u31_21:
  4392  043A                     	goto	i1l183
  4393  043A  2C42               u31_20:
  4394  043B                     	line	38
  4395                           	
  4396                           i1l988:	
  4397  043B                     ;timers.c: 37:     {;timers.c: 38:         --T0count;
  4398                           	movlw	01h
  4399  043B  3001               	subwf	(_T0count),f
  4400  043C  02F6               	movlw	0
  4401  043D  3000               	skipc
  4402  043E  1C03               	decf	(_T0count+1),f
  4403  043F  03F7               	subwf	(_T0count+1),f
  4404  0440  02F7               	goto	i1l183
  4405  0441  2C42               	line	39
  4406                           ;timers.c: 39:     }
  4407                           	
  4408                           i1l182:	
  4409  0442                     	line	40
  4410                           	
  4411                           i1l183:	
  4412  0442                     	return
  4413  0442  0008               	opt stack 0
  4414                           GLOBAL	__end_of_T0_int
  4415                           	__end_of_T0_int:
  4416  0443                     	signat	_T0_int,89
  4417                           	global	_ADC_int
  4418                           
  4419 ;; *************** function _ADC_int *****************
  4420 ;; Defined at:
  4421 ;;		line 31 in file "adc.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4435 ;;      Params:         0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0
  4437 ;;      Temps:          2       0       0       0       0
  4438 ;;      Totals:         2       0       0       0       0
  4439 ;;Total ram usage:        2 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_isr
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4448                           	file	"adc.c"
  4449                           	line	31
  4450                           global __ptext16
  4451                           __ptext16:	;psect for function _ADC_int
  4452  03BE                     psect	text16
  4453                           	file	"adc.c"
  4454                           	line	31
  4455                           	global	__size_of_ADC_int
  4456                           	__size_of_ADC_int	equ	__end_of_ADC_int-_ADC_int
  4457  001F                     	
  4458                           _ADC_int:	
  4459  03BE                     ;incstack = 0
  4460                           	opt	stack 3
  4461                           ; Regs used in _ADC_int: [wreg]
  4462                           	line	33
  4463                           	
  4464                           i1l976:	
  4465  03BE                     ;adc.c: 33:     ADC_value = ADRESH;
  4466                           	bcf	status, 5	;RP0=0, select bank0
  4467  03BE  1283               	bcf	status, 6	;RP1=0, select bank0
  4468  03BF  1303               	movf	(30),w	;volatile
  4469  03C0  081E               	movwf	(??_ADC_int+0)+0
  4470  03C1  00F0               	clrf	(??_ADC_int+0)+0+1
  4471  03C2  01F1               	movf	0+(??_ADC_int+0)+0,w
  4472  03C3  0870               	movwf	(_ADC_value)
  4473  03C4  00F8               	movf	1+(??_ADC_int+0)+0,w
  4474  03C5  0871               	movwf	(_ADC_value+1)
  4475  03C6  00F9               	line	34
  4476                           ;adc.c: 34:     ADC_value <<= 8;
  4477                           	movlw	08h
  4478  03C7  3008               	
  4479                           u30_25:
  4480  03C8                     	clrc
  4481  03C8  1003               	rlf	(_ADC_value),f
  4482  03C9  0DF8               	rlf	(_ADC_value+1),f
  4483  03CA  0DF9               	addlw	-1
  4484  03CB  3EFF               	skipz
  4485  03CC  1D03               	goto	u30_25
  4486  03CD  2BC8               	line	35
  4487                           ;adc.c: 35:     ADC_value += ADRESL;
  4488                           	bsf	status, 5	;RP0=1, select bank1
  4489  03CE  1683               	bcf	status, 6	;RP1=0, select bank1
  4490  03CF  1303               	movf	(158)^080h,w	;volatile
  4491  03D0  081E               	movwf	(??_ADC_int+0)+0
  4492  03D1  00F0               	clrf	(??_ADC_int+0)+0+1
  4493  03D2  01F1               	movf	0+(??_ADC_int+0)+0,w
  4494  03D3  0870               	addwf	(_ADC_value),f
  4495  03D4  07F8               	skipnc
  4496  03D5  1803               	incf	(_ADC_value+1),f
  4497  03D6  0AF9               	movf	1+(??_ADC_int+0)+0,w
  4498  03D7  0871               	addwf	(_ADC_value+1),f
  4499  03D8  07F9               	line	36
  4500                           	
  4501                           i1l978:	
  4502  03D9                     ;adc.c: 36:     ADCON0bits.GO = 1;
  4503                           	bcf	status, 5	;RP0=0, select bank0
  4504  03D9  1283               	bcf	status, 6	;RP1=0, select bank0
  4505  03DA  1303               	bsf	(31),1	;volatile
  4506  03DB  149F               	line	37
  4507                           	
  4508                           i1l22:	
  4509  03DC                     	return
  4510  03DC  0008               	opt stack 0
  4511                           GLOBAL	__end_of_ADC_int
  4512                           	__end_of_ADC_int:
  4513  03DD                     	signat	_ADC_int,89
  4514                           global	___latbits
  4515                           ___latbits	equ	2
  4516  0002                     	global	fptotal
  4517                           fptotal equ 6
  4518  0006                     	file ""
  4519                           	line	#
  4520                           psect	functab,class=ENTRY,delta=2
  4521                           global __pfunctab
  4522                           __pfunctab:
  4523  0029                     	global	fptable,__fptable
  4524                           __fptable:
  4525  0029                     fptable:
  4526  0029                     	movwf (btemp+1)&07Fh
  4527  0029  00FF               	movlw high(fptable)
  4528  002A  3000               	movwf pclath
  4529  002B  008A               	movf (btemp+1)&07Fh,w
  4530  002C  087F               	addwf pc
  4531  002D  0782               	global	fpbase
  4532                           fpbase:
  4533  002E                     	goto fpbase	; Call via a null pointer and you will get stuck here.
  4534  002E  282E               	file ""
  4535                           	line	#
  4536                           fp__dispLCD_init:
  4537  002F                     	ljmp	_dispLCD_init
  4538  002F  120A  118A  2ABD   	file ""
  4539                           	line	#
  4540                           fp__dispLCD_num:
  4541  0032                     	ljmp	_dispLCD_num
  4542  0032  120A  118A  2838   	file ""
  4543                           	line	#
  4544                           fp__dispLCDstr:
  4545  0035                     	ljmp	_dispLCDstr
  4546  0035  120A  118A  2A78   	global __end_of__fptable
  4547                           	__end_of__fptable:
  4548  0038                     	global __size_of__fptable
  4549                           	__size_of__fptable	equ	__end_of__fptable-__fptable
  4550  000F                     	global	btemp
  4551                           	btemp set 07Eh
  4552  007E                     
  4553                           	DABS	1,126,2	;btemp
  4554                           	global	wtemp0
  4555                           	wtemp0 set btemp+0
  4556  007E                     	end


Data Sizes:
    Strings     6
    Constant    0
    Data        7
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     22      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S360$2$2	PTR const unsigned char  size(1) Largest target is 0

    S360$1$0	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    S360$B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    IHM.B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    S360$B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    IHM.B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    S360$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    IHM.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S360$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    S360$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    S360$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    S360$init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    IHM.init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_ADC_read
    _dispLCDstr->_dispLCD_dataReg
    _dispLCD_num->_ADC_read
    _dispLCD_num->_dispLCD_dataReg
    _dispLCD_lincol->_dispLCD_instReg
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg

Critical Paths under _isr in COMMON

    _isr->_ADC_int

Critical Paths under _main in BANK0

    _main->_dispLCD_num
    _dispLCDstr->_dispLCD_lincol
    _dispLCD_num->___awdiv
    _dispLCD_lincol->_dispLCD_instReg
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4826
                                             20 BANK0      2     2      0
                           _ADC_init
                           _ADC_read
                       _dispLCD_init *
                        _dispLCD_num *
                         _dispLCDstr *
 ---------------------------------------------------------------------------------
 (1) _dispLCDstr                                           2     1      1     875
                                              4 BANK0      2     1      1
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _dispLCD_num                                         12     7      5    3399
                                              8 BANK0     12     7      5
                           _ADC_read (ARG)
                            ___awdiv
                            ___awmod
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     670
                                              1 BANK0      3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     552
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     248
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     304
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              2 COMMON     2     2      0
                            _ADC_int
                             _T0_int
                             _T1_int
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T1_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T0_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_int                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read
   _dispLCD_init *
     _delay
     _dispLCD_instReg
   _dispLCD_num *
     _ADC_read (ARG)
     ___awdiv (ARG)
     ___awmod (ARG)
     _dispLCD_dataReg (ARG)
     _dispLCD_lincol (ARG)
       _dispLCD_instReg
   _dispLCDstr *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg

 _isr (ROOT)
   _ADC_int
   _T0_int
   _T1_int
   _T2_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      21       5       41.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jun 23 15:50:21 2021

                       pc 0002               __CFG_CP$OFF 0000                        l30 03ED  
                      l31 03DE                        l32 03F4                        l17 03BD  
                      l25 046B                        l33 03F4                        l70 0197  
                      l72 018D                        l80 0409                        l73 019C  
                      l65 014F                        l74 019F                        l67 0145  
                      l83 02FD                        l68 0154                        l92 02AD  
                      l69 0177                        l77 039C                        l93 0282  
                      l94 0298                        l95 02BC                        l96 02BC  
                      l99 004E              ___awdiv@sign 0025   __end_of_dispLCD_dataReg 039D  
                      fsr 0004                       l100 0092                       l101 0063  
                     l110 00D8                       l102 007D                       l111 00D8  
                     l103 007E                       l112 0126                       l104 00A0  
                     l113 0126                       l105 00AC                       l106 00A1  
                     l108 00C9                       l109 00CA                       l150 0336  
                     l147 0318                       l148 0335                       l149 0336  
                     l470 0201                       l462 01AF                       l471 020D  
                     l463 01BD                       l472 0212                       l464 0202  
                     l480 0246                       l465 01D4                       l481 0247  
                     l466 01C8                       l482 0258                       l467 01D9  
                     l483 0266                       l475 0222                       l468 01DA  
                     l484 0272                       l476 022C                       l469 01F3  
                     l485 0277                       l477 0267                       l478 0241  
                     l479 0235                       _IHM 0036                       _PR2 0092  
            __CFG_CPD$OFF 0000                       u585 0379                       u980 013E  
                     u981 013D                       u990 0144                       u991 0143  
                     u975 012E                       _isr 0339                       fsr0 0004  
                     indf 0000   __end_of_dispLCD_instReg 01A0              ___awmod@sign 0025  
         __end_of_ADC_int 03DD              __CFG_LVP$OFF 0000                      l1240 0388  
                    l1232 0373                      l1242 038B                      l1234 0376  
                    l1340 03AA                      l1500 0160                      l1244 038C  
                    l1236 0383                      l1350 03B9                      l1342 03AF  
                    l1334 039D                      l1502 0161                      l1510 0177  
                    l1246 0394                      l1238 0384                      l1352 03BA  
                    l1344 03B2                      l1336 03A1                      l1520 018D  
                    l1512 0178                      l1504 016E                      l1600 0247  
                    l1248 0399                      l1346 03B5                      l1338 03A7  
                    l1354 0466                      l1530 03ED                      l1522 0197  
                    l1514 0180                      l1506 016F                      l1610 026C  
                    l1602 0251                      l1348 03B6                      l1356 046B  
                    l1524 019C                      l1516 0181                      l1508 0173  
                    l1620 02C9                      l1540 01AC                      l1612 0272  
                    l1604 0258                      l1532 03F8                      l1526 03DD  
                    l1518 0186                      l1630 02CE                      l1622 02CA  
                    l1550 01BF                      l1542 01AF                      l1534 01A0  
                    l1614 0277                      l1606 025F                      l1528 03DE  
                    l1632 02CF                      l1624 02CB                      l1616 02BD  
                    l1560 01DA                      l1552 01C5                      l1544 01B3  
                    l1536 01A3                      l1608 0267                      l1640 0290  
                    l1490 013E                      l1634 02D9                      l1626 02CC  
                    l1618 02C6                      l1562 01EB                      l1554 01C8  
                    l1570 0202                      l1546 01B8                      l1538 01A7  
                    l1650 0043                      l1642 0298                      l1492 0145  
                    l1484 012A                      l1628 02CD                      l1572 0207  
                    l1564 01F1                      l1556 01CF                      l1548 01BD  
                    l1580 0216                      l1660 0063                      l1652 0048  
                    l1644 02A6                      l1636 0278                      l1494 014F  
                    l1486 012B                      l1574 020D                      l1566 01F3  
                    l1558 01D4                      l1590 022C                      l1582 021A  
                    l1670 00A7                      l1662 007A                      l1654 004E  
                    l1638 0282                      l1646 02AD                      l1496 0154  
                    l1488 0138                      l1576 0212                      l1568 01FA  
                    l1592 0232                      l1584 021F                      l1680 0118  
                    l1664 007E                      l1672 00AC                      l1656 0058  
                    l1648 0038                      l1498 0157                      l1594 0235  
                    l1586 0222                      l1578 0213                      l1674 00C0  
                    l1666 0092                      l1658 005E                      l1596 023C  
                    l1588 0226                      l1676 00CA                      l1668 00A1  
                    l1692 02FE                      l1598 0241                      l1678 00D1  
                    l1694 030B                      l1696 0318                      ?_isr 0070  
                    STR_1 0459                      u1000 0160                      u1001 015F  
                    u1020 0186                      u1100 01D8                      u1021 0185  
                    u1101 01D7                      u1030 018C                      u1031 018B  
                    u1015 0164                      u1040 03F3                      u1120 01EB  
                    u1200 0245                      u1041 03F2                      u1121 01EA  
                    u1201 0244                      u1210 0251                      u1115 01DB  
                    u1211 0250                      u1140 0200                      u1060 01A7  
                    u1300 007A                      u1141 01FF                      u1125 01E7  
                    u1061 01A6                      u1301 0079                      u1150 0207  
                    u1070 01B3                      u1230 0265                      u1310 009F  
                    u1151 0206                      u1135 01F4                      u1071 01B2  
                    u1231 0264                      u1215 024D                      u1055 03FB  
                    u1311 009E                      u1080 01C5                      u1240 026C  
                    u1160 021A                      u1320 00C0                      u1081 01C4  
                    u1241 026B                      u1225 0259                      u1161 0219  
                    u1321 00BF                      u1170 0226                      u1330 00C8  
                    u1250 0290                      u1171 0225                      u1331 00C7  
                    u1315 009B                      u1251 028F                      u1180 0232  
                    u1340 00D1                      u1260 02BB                      u1181 0231  
                    u1341 00D0                      u1325 00BC                      u1261 02BA  
                    u1350 0125                      u1270 003F                      u1407 0151  
                    u1095 01C9                      u1351 0124                      u1271 003D  
                    u1280 0040                      u1417 0171                      u1290 0048  
                    u1427 0191                      u1195 0236                      u1355 0121  
                    u1291 0047                      u1437 0199                      u1447 03E2  
                    u1377 0386                      u1387 0397                      u1397 0149  
                    i1l22 03DC                      i1l50 0344                      i1l51 0351  
                    i1l52 035E                      i1l53 036B                      i1l54 036B  
                    _TMR0 0001                      _TMR2 0011              __CFG_WRT$OFF 0000  
                    _main 02FE                      btemp 007E                      start 000C  
        __end_of_ADC_init 03BE          __end_of_ADC_read 046C             __CFG_IESO$OFF 0000  
                   ??_isr 0072                     ?_main 0070           __end_of___awdiv 0213  
           __CFG_WDTE$OFF 0000           __end_of___awmod 0278           ___awdiv@divisor 0020  
                   i1l201 041D                     i1l202 041D                     i1l220 0452  
                   i1l221 0452                     i1l182 0442                     i1l183 0442  
                   i1l976 03BE                     i1l984 0431                     i1l978 03D9  
                   i1l986 0435                     i1l988 043B           ___awdiv@counter 0024  
                   u30_25 03C8                     u31_20 043B                     u31_21 043A  
                   _TMR1H 000F                     _TMR1L 000E                     u80_20 044B  
                   u80_21 044A                     u92_20 033D                     u92_21 033C  
                   u93_20 034A                     u93_21 0349                     u94_20 0357  
                   u94_21 0356                     u79_20 0416                     u95_20 0364  
                   u79_21 0415                     u95_21 0363            __CFG_FCMEN$OFF 0000  
                   _delay 03DD                     fpbase 002E            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
    __end_of_dispLCD_init 02FE            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0339          ?_dispLCD_dataReg 0070                 ??_ADC_int 0070  
                  ??_main 0034      __size_of_dispLCD_num 00EF          ?_dispLCD_instReg 0070  
                  ?_delay 0074                    _ADRESH 001E                    _ADRESL 009E  
        ___awdiv@dividend 0022                    i1l1360 0410                    i1l1440 0344  
                  i1l1362 0416                    i1l1450 0358                    i1l1442 034A  
                  i1l1434 0339                    i1l1364 0443                    i1l1452 035E  
                  i1l1444 034B                    i1l1436 033D                    i1l1358 040A  
                  i1l1366 044B                    i1l1454 0364                    i1l1446 0351  
                  i1l1438 033E                    i1l1456 0365                    i1l1448 0357  
                  _T0_int 0431                    _T1_int 040A                    _T2_int 0443  
        __end_of__fptable 0038            __CFG_PWRTE$OFF 0000                 ??___awdiv 0074  
               ??___awmod 0074                    delay@t 0074          ___awdiv@quotient 0026  
         ___awmod@divisor 0020           ___awmod@counter 0024                    fptable 0029  
                  fptotal 0006                    saved_w 007E                 ?_ADC_init 0070  
               ?_ADC_read 0074   __end_of__initialization 0025   __size_of_dispLCD_lincol 0015  
          __pcstackCOMMON 0070              __pidataBANK0 045F             __end_of_delay 03F5  
          _OPTION_REGbits 0081                ??_ADC_init 0074                ??_ADC_read 0076  
                 ??_delay 0020                __pbssBANK0 003D     __size_of_dispLCD_init 0041  
                 ?_T0_int 0070                   ?_T1_int 0070                   ?_T2_int 0070  
              __pmaintext 02FE                _dispLCD_B0 0000                _dispLCD_B1 0000  
              __pintentry 0004                _dispLCDstr 0278                   _ADC_int 03BE  
                 _LCDbits 0008              _dispLCD_init 02BD                   _T0count 0076  
                 _T1count 003F                   _T2count 003D                __stringtab 0453  
         __size_of_T0_int 0012           __size_of_T1_int 0014           __size_of_T2_int 0010  
               _ADC_value 0078                   ___awdiv 01A0                   ___awmod 0213  
               _ANSELbits 0188                   _dispLCD 0000                   __ptext1 0278  
                 __ptext2 0038                   __ptext3 03F5                   __ptext4 0372  
                 __ptext5 0213                   __ptext6 01A0                   __ptext7 02BD  
                 __ptext8 0127                   __ptext9 03DD                 _T1CONbits 0010  
               _T2CONbits 0012              __size_of_isr 0039          ___awmod@dividend 0022  
    end_of_initialization 0025            dispLCD_num@col 0029            dispLCD_num@div 0032  
          dispLCD_num@lin 0028            dispLCD_num@tam 002C            dispLCD_num@num 002A  
          _dispLCD_lincol 03F5               ?_dispLCDstr 0024             ??_dispLCD_num 002D  
               _TRISDbits 0088  __size_of_dispLCD_dataReg 002B         __size_of_ADC_init 0021  
       __size_of_ADC_read 0006    __end_of_dispLCD_lincol 040A  __size_of_dispLCD_instReg 0079  
          __end_of_T0_int 0443            __end_of_T1_int 041E            __end_of_T2_int 0453  
     start_initialization 000F       __end_of_dispLCD_num 0127               __end_of_isr 0372  
     __size_of_dispLCDstr 0045           ?_dispLCD_lincol 0021                  ??_T0_int 0070  
                ??_T1_int 0070                  ??_T2_int 0070  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       dispLCD_lincol@col 0021         dispLCD_lincol@lin 0023                init_fetch0 041E  
             __pdataBANK0 0036                  ?_ADC_int 0070               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 0020         __size_of__fptable 000F  
       ??_dispLCD_dataReg 0074         ??_dispLCD_instReg 0074                 __pfunctab 0029  
                ?___awdiv 0020                  ?___awmod 0020               _dispLCD_clr 0000  
             _dispLCD_num 0038                 __pstrings 0453                  _ADC_init 039D  
                _ADC_read 0466            __size_of_delay 0018         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C              ??_dispLCDstr 0025  
        dispLCD_dataReg@d 0075             dispLCDstr@str 0024                _ADCON0bits 001F  
             __stringbase 0458                _ADCON1bits 009F          __size_of_ADC_int 001F  
      __end_of_dispLCDstr 02BD          dispLCD_instReg@i 0020          __size_of___awdiv 0073  
        __size_of___awmod 0065           fp__dispLCD_init 002F          dispLCD_num@sinal 0031  
      __end_of__stringtab 0459                  __fptable 0029          ??_dispLCD_lincol 0022  
                __ptext10 0466                  __ptext11 039D                  __ptext12 0339  
                __ptext13 0443                  __ptext14 040A                  __ptext15 0431  
                __ptext16 03BE         __CFG_BOR4V$BOR40V 0000             __size_of_main 003B  
              _INTCONbits 000B             ?_dispLCD_init 0070           _dispLCD_dataReg 0372  
                init_ram0 0422            fp__dispLCD_num 0032           dispLCD_num@size 0030  
         _dispLCD_instReg 0127                  intlevel1 0029                 stringcode 0453  
            ?_dispLCD_num 0028             fp__dispLCDstr 0035            ??_dispLCD_init 0076  
                stringdir 0453                  stringtab 0453  
