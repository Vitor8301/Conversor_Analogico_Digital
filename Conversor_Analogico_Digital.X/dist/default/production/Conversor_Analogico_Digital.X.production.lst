

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 26 01:05:45 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	functab,global,class=ENTRY,delta=2
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 2.32
    44                           ; Generated 02/02/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001D                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  0081                     	;# 
   426  0085                     	;# 
   427  0086                     	;# 
   428  0087                     	;# 
   429  0088                     	;# 
   430  0089                     	;# 
   431  008C                     	;# 
   432  008D                     	;# 
   433  008E                     	;# 
   434  008F                     	;# 
   435  0090                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  009F                     	;# 
   453  0105                     	;# 
   454  0107                     	;# 
   455  0108                     	;# 
   456  0109                     	;# 
   457  010C                     	;# 
   458  010C                     	;# 
   459  010D                     	;# 
   460  010E                     	;# 
   461  010F                     	;# 
   462  0185                     	;# 
   463  0187                     	;# 
   464  0188                     	;# 
   465  0189                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0000                     	;# 
   469  0001                     	;# 
   470  0002                     	;# 
   471  0003                     	;# 
   472  0004                     	;# 
   473  0005                     	;# 
   474  0006                     	;# 
   475  0007                     	;# 
   476  0008                     	;# 
   477  0009                     	;# 
   478  000A                     	;# 
   479  000B                     	;# 
   480  000C                     	;# 
   481  000D                     	;# 
   482  000E                     	;# 
   483  000E                     	;# 
   484  000F                     	;# 
   485  0010                     	;# 
   486  0011                     	;# 
   487  0012                     	;# 
   488  0013                     	;# 
   489  0014                     	;# 
   490  0015                     	;# 
   491  0015                     	;# 
   492  0016                     	;# 
   493  0017                     	;# 
   494  0018                     	;# 
   495  0019                     	;# 
   496  001A                     	;# 
   497  001B                     	;# 
   498  001B                     	;# 
   499  001C                     	;# 
   500  001D                     	;# 
   501  001E                     	;# 
   502  001F                     	;# 
   503  0081                     	;# 
   504  0085                     	;# 
   505  0086                     	;# 
   506  0087                     	;# 
   507  0088                     	;# 
   508  0089                     	;# 
   509  008C                     	;# 
   510  008D                     	;# 
   511  008E                     	;# 
   512  008F                     	;# 
   513  0090                     	;# 
   514  0091                     	;# 
   515  0092                     	;# 
   516  0093                     	;# 
   517  0093                     	;# 
   518  0093                     	;# 
   519  0094                     	;# 
   520  0095                     	;# 
   521  0096                     	;# 
   522  0097                     	;# 
   523  0098                     	;# 
   524  0099                     	;# 
   525  009A                     	;# 
   526  009B                     	;# 
   527  009C                     	;# 
   528  009D                     	;# 
   529  009E                     	;# 
   530  009F                     	;# 
   531  0105                     	;# 
   532  0107                     	;# 
   533  0108                     	;# 
   534  0109                     	;# 
   535  010C                     	;# 
   536  010C                     	;# 
   537  010D                     	;# 
   538  010E                     	;# 
   539  010F                     	;# 
   540  0185                     	;# 
   541  0187                     	;# 
   542  0188                     	;# 
   543  0189                     	;# 
   544  018C                     	;# 
   545  018D                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0008                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  000D                     	;# 
   560  000E                     	;# 
   561  000E                     	;# 
   562  000F                     	;# 
   563  0010                     	;# 
   564  0011                     	;# 
   565  0012                     	;# 
   566  0013                     	;# 
   567  0014                     	;# 
   568  0015                     	;# 
   569  0015                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001B                     	;# 
   577  001C                     	;# 
   578  001D                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  0081                     	;# 
   582  0085                     	;# 
   583  0086                     	;# 
   584  0087                     	;# 
   585  0088                     	;# 
   586  0089                     	;# 
   587  008C                     	;# 
   588  008D                     	;# 
   589  008E                     	;# 
   590  008F                     	;# 
   591  0090                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0093                     	;# 
   596  0093                     	;# 
   597  0094                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009C                     	;# 
   606  009D                     	;# 
   607  009E                     	;# 
   608  009F                     	;# 
   609  0105                     	;# 
   610  0107                     	;# 
   611  0108                     	;# 
   612  0109                     	;# 
   613  010C                     	;# 
   614  010C                     	;# 
   615  010D                     	;# 
   616  010E                     	;# 
   617  010F                     	;# 
   618  0185                     	;# 
   619  0187                     	;# 
   620  0188                     	;# 
   621  0189                     	;# 
   622  018C                     	;# 
   623  018D                     	;# 
   624                           
   625 ;; Function _dispLCD is unused but had its address taken
   626  0000                     
   627 ;; Function _dispLCD_B0 is unused but had its address taken
   628  0000                     
   629 ;; Function _dispLCD_B1 is unused but had its address taken
   630  0000                     
   631                           	psect	idataBANK0
   632  061D                     __pidataBANK0:
   633                           
   634                           ;initializer for _IHM
   635  061D  3404               	retlw	low (fp__dispLCD_init-fpbase)
   636  061E  340A               	retlw	low (fp__dispLCDstr-fpbase)
   637  061F  3400               	retlw	0
   638  0620  3407               	retlw	low (fp__dispLCD_num-fpbase)
   639  0621  3401               	retlw	low (fp__dispLCD_clr-fpbase)
   640  0622  3400               	retlw	0
   641  0623  3400               	retlw	0
   642  000E                     _TMR1L	set	14
   643  000F                     _TMR1H	set	15
   644  0001                     _TMR0	set	1
   645  0008                     _LCDbits	set	8
   646  000C                     _PIR1bits	set	12
   647  001E                     _ADRESH	set	30
   648  001F                     _ADCON0bits	set	31
   649  000B                     _INTCONbits	set	11
   650  0088                     _TRISDbits	set	136
   651  009E                     _ADRESL	set	158
   652  008C                     _PIE1bits	set	140
   653  009F                     _ADCON1bits	set	159
   654  0188                     _ANSELbits	set	392
   655                           
   656                           	psect	strings
   657  0517                     __pstrings:
   658  0517                     stringtab:
   659  0517                     __stringtab:
   660  0517                     stringcode:	
   661                           ;	String table - string pointers are 1 byte each
   662                           
   663  0517                     stringdir:
   664  0517  3005               	movlw	high stringdir
   665  0518  008A               	movwf	10
   666  0519  0804               	movf	4,w
   667  051A  0A84               	incf	4,f
   668  051B  0782               	addwf	2,f
   669  051C                     __stringbase:
   670  051C  3400               	retlw	0
   671  051D                     __end_of__stringtab:
   672  051D                     STR_2:
   673  051D  3452               	retlw	82	;'R'
   674  051E  3465               	retlw	101	;'e'
   675  051F  343A               	retlw	58	;':'
   676  0520  3420               	retlw	32	;' '
   677  0521  3420               	retlw	32	;' '
   678  0522  3420               	retlw	32	;' '
   679  0523  3420               	retlw	32	;' '
   680  0524  3420               	retlw	32	;' '
   681  0525  3452               	retlw	82	;'R'
   682  0526  3461               	retlw	97	;'a'
   683  0527  343A               	retlw	58	;':'
   684  0528  3420               	retlw	32	;' '
   685  0529  3420               	retlw	32	;' '
   686  052A  3420               	retlw	32	;' '
   687  052B  3420               	retlw	32	;' '
   688  052C  3420               	retlw	32	;' '
   689  052D  3400               	retlw	0
   690  052E                     STR_1:
   691  052E  3443               	retlw	67	;'C'
   692  052F  343A               	retlw	58	;':'
   693  0530  3420               	retlw	32	;' '
   694  0531  3420               	retlw	32	;' '
   695  0532  3420               	retlw	32	;' '
   696  0533  3446               	retlw	70	;'F'
   697  0534  343A               	retlw	58	;':'
   698  0535  3420               	retlw	32	;' '
   699  0536  3420               	retlw	32	;' '
   700  0537  3420               	retlw	32	;' '
   701  0538  344B               	retlw	75	;'K'
   702  0539  343A               	retlw	58	;':'
   703  053A  3420               	retlw	32	;' '
   704  053B  3420               	retlw	32	;' '
   705  053C  3420               	retlw	32	;' '
   706  053D  3420               	retlw	32	;' '
   707  053E  3400               	retlw	0
   708                           
   709                           	psect	cinit
   710  000F                     start_initialization:	
   711                           ; #config settings
   712                           
   713  000F                     __initialization:
   714                           
   715                           ; Initialize objects allocated to BANK0
   716  000F  1383               	bcf	3,7	;select IRP bank0
   717  0010  3063               	movlw	low (__pdataBANK0+7)
   718  0011  00FD               	movwf	btemp+-1
   719  0012  3006               	movlw	high __pidataBANK0
   720  0013  00FE               	movwf	btemp
   721  0014  301D               	movlw	low __pidataBANK0
   722  0015  00FF               	movwf	btemp+1
   723  0016  305C               	movlw	low __pdataBANK0
   724  0017  0084               	movwf	4
   725  0018  120A  118A  25CA   	fcall	init_ram0
   726                           
   727                           ; Clear objects allocated to BANK0
   728  001B  01E3               	clrf	__pbssBANK0& (0+127)
   729  001C  01E4               	clrf	(__pbssBANK0+1)& (0+127)
   730  001D  01E5               	clrf	(__pbssBANK0+2)& (0+127)
   731  001E  01E6               	clrf	(__pbssBANK0+3)& (0+127)
   732                           
   733                           ; Clear objects allocated to COMMON
   734  001F  01F6               	clrf	__pbssCOMMON& (0+127)
   735  0020  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   736  0021  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   737  0022  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   738  0023                     end_of_initialization:	
   739                           ;End of C runtime variable initialization code
   740                           
   741  0023                     __end_of__initialization:
   742  0023  0183               	clrf	3
   743  0024  120A  118A  28FC   	ljmp	_main	;jump to C main() function
   744                           
   745                           	psect	bssCOMMON
   746  0076                     __pbssCOMMON:
   747  0076                     _T1count:
   748  0076                     	ds	2
   749  0078                     _T0count:
   750  0078                     	ds	2
   751                           
   752                           	psect	bssBANK0
   753  0063                     __pbssBANK0:
   754  0063                     _T2count:
   755  0063                     	ds	2
   756  0065                     _ADC_value:
   757  0065                     	ds	2
   758                           
   759                           	psect	dataBANK0
   760  005C                     __pdataBANK0:
   761  005C                     _IHM:
   762  005C                     	ds	7
   763                           
   764                           	psect	inittext
   765  05C6                     init_fetch0:	
   766                           ;	Called with low address in FSR and high address in W
   767                           
   768  05C6  087E               	movf	126,w
   769  05C7  008A               	movwf	10
   770  05C8  087F               	movf	127,w
   771  05C9  0082               	movwf	2
   772  05CA                     init_ram0:	
   773                           ;Called with:
   774                           ;	high address of idata address in btemp 
   775                           ;	low address of idata address in btemp+1 
   776                           ;	low address of data in FSR
   777                           ;	high address + 1 of data in btemp-1
   778                           
   779  05CA  25C6  120A  118A   	fcall	init_fetch0
   780  05CD  0080               	movwf	0
   781  05CE  0A84               	incf	4,f
   782  05CF  0804               	movf	4,w
   783  05D0  067D               	xorwf	125,w
   784  05D1  1903               	btfsc	3,2
   785  05D2  3400               	retlw	0
   786  05D3  0AFF               	incf	127,f
   787  05D4  1903               	btfsc	3,2
   788  05D5  0AFE               	incf	126,f
   789  05D6  2DCA               	goto	init_ram0
   790                           
   791                           	psect	cstackCOMMON
   792  0070                     __pcstackCOMMON:
   793  0070                     ?_T0_int:
   794  0070                     ??_T0_int:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0070                     ?_T1_int:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0070                     ??_T1_int:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0070                     ?_T2_int:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     ??_T2_int:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     ?_ADC_init:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0070                     ?_ADC_int:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0070                     ??_ADC_int:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0070                     ?_isr:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_dispLCD_instReg:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_dispLCD_dataReg:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_dispLCD_init:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_dispLCD_clr:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_main:	
   834                           ; 1 bytes @ 0x0
   835                           
   836                           
   837                           ; 1 bytes @ 0x0
   838  0070                     	ds	2
   839  0072                     ??_isr:
   840                           
   841                           ; 1 bytes @ 0x2
   842  0072                     	ds	2
   843  0074                     ??_ADC_init:
   844  0074                     ?_delay:	
   845                           ; 1 bytes @ 0x4
   846                           
   847  0074                     ??_dispLCD_instReg:	
   848                           ; 1 bytes @ 0x4
   849                           
   850  0074                     ??_dispLCD_dataReg:	
   851                           ; 1 bytes @ 0x4
   852                           
   853  0074                     ??___awdiv:	
   854                           ; 1 bytes @ 0x4
   855                           
   856  0074                     ??___awmod:	
   857                           ; 1 bytes @ 0x4
   858                           
   859  0074                     ??___lwdiv:	
   860                           ; 1 bytes @ 0x4
   861                           
   862  0074                     delay@t:	
   863                           ; 1 bytes @ 0x4
   864                           
   865                           
   866                           ; 2 bytes @ 0x4
   867  0074                     	ds	1
   868  0075                     ??_celsius:
   869  0075                     ??_rankine:	
   870                           ; 1 bytes @ 0x5
   871                           
   872  0075                     ??___lmul:	
   873                           ; 1 bytes @ 0x5
   874                           
   875  0075                     dispLCD_dataReg@d:	
   876                           ; 1 bytes @ 0x5
   877                           
   878                           
   879                           ; 1 bytes @ 0x5
   880  0075                     	ds	1
   881  0076                     ??_dispLCD_init:
   882  0076                     ??_dispLCD_clr:	
   883                           ; 1 bytes @ 0x6
   884                           
   885                           
   886                           	psect	cstackBANK0
   887  0020                     __pcstackBANK0:	
   888                           ; 1 bytes @ 0x6
   889                           
   890  0020                     ??_delay:
   891  0020                     ?___awdiv:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0020                     ?___awmod:	
   895                           ; 2 bytes @ 0x0
   896                           
   897  0020                     ?___lwdiv:	
   898                           ; 2 bytes @ 0x0
   899                           
   900  0020                     dispLCD_instReg@i:	
   901                           ; 2 bytes @ 0x0
   902                           
   903  0020                     ___awdiv@divisor:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0020                     ___awmod@divisor:	
   907                           ; 2 bytes @ 0x0
   908                           
   909  0020                     ___lwdiv@divisor:	
   910                           ; 2 bytes @ 0x0
   911                           
   912                           
   913                           ; 2 bytes @ 0x0
   914  0020                     	ds	1
   915  0021                     ?_dispLCD_lincol:
   916  0021                     dispLCD_lincol@col:	
   917                           ; 1 bytes @ 0x1
   918                           
   919                           
   920                           ; 1 bytes @ 0x1
   921  0021                     	ds	1
   922  0022                     ??_dispLCD_lincol:
   923  0022                     ___awdiv@dividend:	
   924                           ; 1 bytes @ 0x2
   925                           
   926  0022                     ___awmod@dividend:	
   927                           ; 2 bytes @ 0x2
   928                           
   929  0022                     ___lwdiv@dividend:	
   930                           ; 2 bytes @ 0x2
   931                           
   932                           
   933                           ; 2 bytes @ 0x2
   934  0022                     	ds	1
   935  0023                     dispLCD_lincol@lin:
   936                           
   937                           ; 1 bytes @ 0x3
   938  0023                     	ds	1
   939  0024                     ?_dispLCDstr:
   940  0024                     dispLCDstr@str:	
   941                           ; 1 bytes @ 0x4
   942                           
   943  0024                     ___awdiv@counter:	
   944                           ; 1 bytes @ 0x4
   945                           
   946  0024                     ___awmod@counter:	
   947                           ; 1 bytes @ 0x4
   948                           
   949  0024                     ___lwdiv@counter:	
   950                           ; 1 bytes @ 0x4
   951                           
   952                           
   953                           ; 1 bytes @ 0x4
   954  0024                     	ds	1
   955  0025                     ??_dispLCDstr:
   956  0025                     ___awdiv@sign:	
   957                           ; 1 bytes @ 0x5
   958                           
   959  0025                     ___awmod@sign:	
   960                           ; 1 bytes @ 0x5
   961                           
   962  0025                     ___lwdiv@quotient:	
   963                           ; 1 bytes @ 0x5
   964                           
   965                           
   966                           ; 2 bytes @ 0x5
   967  0025                     	ds	1
   968  0026                     ___awdiv@quotient:
   969                           
   970                           ; 2 bytes @ 0x6
   971  0026                     	ds	1
   972  0027                     ?_celsius:
   973                           
   974                           ; 4 bytes @ 0x7
   975  0027                     	ds	4
   976  002B                     ?_kelvin:
   977  002B                     ?_rankine:	
   978                           ; 4 bytes @ 0xB
   979                           
   980  002B                     ?___lmul:	
   981                           ; 4 bytes @ 0xB
   982                           
   983  002B                     ___lmul@multiplier:	
   984                           ; 4 bytes @ 0xB
   985                           
   986                           
   987                           ; 4 bytes @ 0xB
   988  002B                     	ds	4
   989  002F                     ??_kelvin:
   990  002F                     ___lmul@multiplicand:	
   991                           ; 1 bytes @ 0xF
   992                           
   993                           
   994                           ; 4 bytes @ 0xF
   995  002F                     	ds	4
   996  0033                     ___lmul@product:
   997                           
   998                           ; 4 bytes @ 0x13
   999  0033                     	ds	4
  1000  0037                     ?___aldiv:
  1001  0037                     ___aldiv@divisor:	
  1002                           ; 4 bytes @ 0x17
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x17
  1006  0037                     	ds	4
  1007  003B                     ___aldiv@dividend:
  1008                           
  1009                           ; 4 bytes @ 0x1B
  1010  003B                     	ds	4
  1011  003F                     ??___aldiv:
  1012                           
  1013                           ; 1 bytes @ 0x1F
  1014  003F                     	ds	1
  1015  0040                     ___aldiv@counter:
  1016                           
  1017                           ; 1 bytes @ 0x20
  1018  0040                     	ds	1
  1019  0041                     ___aldiv@sign:
  1020                           
  1021                           ; 1 bytes @ 0x21
  1022  0041                     	ds	1
  1023  0042                     ___aldiv@quotient:
  1024                           
  1025                           ; 4 bytes @ 0x22
  1026  0042                     	ds	4
  1027  0046                     ?_fahrenheit:
  1028  0046                     ?_reaumur:	
  1029                           ; 4 bytes @ 0x26
  1030                           
  1031                           
  1032                           ; 4 bytes @ 0x26
  1033  0046                     	ds	4
  1034  004A                     ??_fahrenheit:
  1035  004A                     ??_reaumur:	
  1036                           ; 1 bytes @ 0x2A
  1037                           
  1038                           
  1039                           ; 1 bytes @ 0x2A
  1040  004A                     	ds	4
  1041  004E                     ?_dispLCD_num:
  1042  004E                     dispLCD_num@lin:	
  1043                           ; 1 bytes @ 0x2E
  1044                           
  1045                           
  1046                           ; 1 bytes @ 0x2E
  1047  004E                     	ds	1
  1048  004F                     dispLCD_num@col:
  1049                           
  1050                           ; 1 bytes @ 0x2F
  1051  004F                     	ds	1
  1052  0050                     dispLCD_num@num:
  1053                           
  1054                           ; 2 bytes @ 0x30
  1055  0050                     	ds	2
  1056  0052                     dispLCD_num@tam:
  1057                           
  1058                           ; 1 bytes @ 0x32
  1059  0052                     	ds	1
  1060  0053                     ??_dispLCD_num:
  1061                           
  1062                           ; 1 bytes @ 0x33
  1063  0053                     	ds	3
  1064  0056                     dispLCD_num@size:
  1065                           
  1066                           ; 1 bytes @ 0x36
  1067  0056                     	ds	1
  1068  0057                     dispLCD_num@sinal:
  1069                           
  1070                           ; 1 bytes @ 0x37
  1071  0057                     	ds	1
  1072  0058                     dispLCD_num@div:
  1073                           
  1074                           ; 2 bytes @ 0x38
  1075  0058                     	ds	2
  1076  005A                     ??_main:
  1077                           
  1078                           ; 1 bytes @ 0x3A
  1079  005A                     	ds	2
  1080                           
  1081                           	psect	maintext
  1082  00FC                     __pmaintext:	
  1083 ;;
  1084 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1085 ;;
  1086 ;; *************** function _main *****************
  1087 ;; Defined at:
  1088 ;;		line 16 in file "main.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : B00/0
  1099 ;;		On exit  : 300/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0
  1104 ;;      Temps:          0       2       0       0       0
  1105 ;;      Totals:         0       2       0       0       0
  1106 ;;Total ram usage:        2 bytes
  1107 ;; Hardware stack levels required when called: 5
  1108 ;; This function calls:
  1109 ;;		_ADC_init
  1110 ;;		_celsius
  1111 ;;		_delay
  1112 ;;		_dispLCD_clr
  1113 ;;		_dispLCD_init
  1114 ;;		_dispLCD_num
  1115 ;;		_dispLCDstr
  1116 ;;		_fahrenheit
  1117 ;;		_kelvin
  1118 ;;		_rankine
  1119 ;;		_reaumur
  1120 ;; This function is called by:
  1121 ;;		Startup code after reset
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           
  1126                           ;psect for function _main
  1127  00FC                     _main:
  1128                           
  1129                           ;main.c: 18: IHM.init( );
  1130                           
  1131                           ;incstack = 0
  1132                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1133  00FC  085C               	movf	_IHM,w
  1134  00FD  120A  118A  2027  120A  118A  	fcall	fptable
  1135                           
  1136                           ;main.c: 19: ADC_init( );
  1137  0102  120A  118A  2567  120A  118A  	fcall	_ADC_init
  1138  0107                     l1936:
  1139                           
  1140                           ;main.c: 22: {;main.c: 23: IHM.print( "C:   F:   K:    " );
  1141  0107  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1142  0108  00DA               	movwf	??_main
  1143  0109  085A               	movf	??_main,w
  1144  010A  00A4               	movwf	dispLCDstr@str
  1145  010B  085D               	movf	low ((_IHM| 0+1)),w
  1146  010C  120A  118A  2027  120A  118A  	fcall	fptable
  1147                           
  1148                           ;main.c: 24: IHM.printv( 1, 1, (long)celsius( ), 3 );
  1149  0111  01CE               	clrf	dispLCD_num@lin
  1150  0112  0ACE               	incf	dispLCD_num@lin,f
  1151  0113  01CF               	clrf	dispLCD_num@col
  1152  0114  0ACF               	incf	dispLCD_num@col,f
  1153  0115  120A  118A  259D  120A  118A  	fcall	_celsius
  1154  011A  0828               	movf	?_celsius+1,w
  1155  011B  00D1               	movwf	dispLCD_num@num+1
  1156  011C  0827               	movf	?_celsius,w
  1157  011D  00D0               	movwf	dispLCD_num@num
  1158  011E  3003               	movlw	3
  1159  011F  00DA               	movwf	??_main
  1160  0120  085A               	movf	??_main,w
  1161  0121  00D2               	movwf	dispLCD_num@tam
  1162  0122  085F               	movf	low ((_IHM| 0+3)),w
  1163  0123  120A  118A  2027  120A  118A  	fcall	fptable
  1164                           
  1165                           ;main.c: 25: IHM.printv( 1, 6, fahrenheit( ), 3 );
  1166  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1168  012A  01CE               	clrf	dispLCD_num@lin
  1169  012B  0ACE               	incf	dispLCD_num@lin,f
  1170  012C  3006               	movlw	6
  1171  012D  00DA               	movwf	??_main
  1172  012E  085A               	movf	??_main,w
  1173  012F  00CF               	movwf	dispLCD_num@col
  1174  0130  120A  118A  2309  120A  118A  	fcall	_fahrenheit
  1175  0135  0847               	movf	?_fahrenheit+1,w
  1176  0136  00D1               	movwf	dispLCD_num@num+1
  1177  0137  0846               	movf	?_fahrenheit,w
  1178  0138  00D0               	movwf	dispLCD_num@num
  1179  0139  3003               	movlw	3
  1180  013A  00DB               	movwf	??_main+1
  1181  013B  085B               	movf	??_main+1,w
  1182  013C  00D2               	movwf	dispLCD_num@tam
  1183  013D  085F               	movf	low ((_IHM| 0+3)),w
  1184  013E  120A  118A  2027  120A  118A  	fcall	fptable
  1185                           
  1186                           ;main.c: 26: IHM.printv( 1, 11, kelvin( ), 3 );
  1187  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0145  01CE               	clrf	dispLCD_num@lin
  1190  0146  0ACE               	incf	dispLCD_num@lin,f
  1191  0147  300B               	movlw	11
  1192  0148  00DA               	movwf	??_main
  1193  0149  085A               	movf	??_main,w
  1194  014A  00CF               	movwf	dispLCD_num@col
  1195  014B  120A  118A  253F  120A  118A  	fcall	_kelvin
  1196  0150  082C               	movf	?_kelvin+1,w
  1197  0151  00D1               	movwf	dispLCD_num@num+1
  1198  0152  082B               	movf	?_kelvin,w
  1199  0153  00D0               	movwf	dispLCD_num@num
  1200  0154  3003               	movlw	3
  1201  0155  00DB               	movwf	??_main+1
  1202  0156  085B               	movf	??_main+1,w
  1203  0157  00D2               	movwf	dispLCD_num@tam
  1204  0158  085F               	movf	low ((_IHM| 0+3)),w
  1205  0159  120A  118A  2027  120A  118A  	fcall	fptable
  1206                           
  1207                           ;main.c: 27: delay( 5000 );
  1208  015E  3088               	movlw	136
  1209  015F  00F4               	movwf	delay@t
  1210  0160  3013               	movlw	19
  1211  0161  00F5               	movwf	delay@t+1
  1212  0162  120A  118A  25B3  120A  118A  	fcall	_delay
  1213                           
  1214                           ;main.c: 28: dispLCD_clr();
  1215  0167  120A  118A  2624  120A  118A  	fcall	_dispLCD_clr
  1216                           
  1217                           ;main.c: 29: IHM.print( "Re:     Ra:     " );
  1218  016C  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1219  016D  00DA               	movwf	??_main
  1220  016E  085A               	movf	??_main,w
  1221  016F  00A4               	movwf	dispLCDstr@str
  1222  0170  085D               	movf	low ((_IHM| 0+1)),w
  1223  0171  120A  118A  2027  120A  118A  	fcall	fptable
  1224                           
  1225                           ;main.c: 30: IHM.printv( 1, 3, reaumur( ) , 3 );
  1226  0176  01CE               	clrf	dispLCD_num@lin
  1227  0177  0ACE               	incf	dispLCD_num@lin,f
  1228  0178  3003               	movlw	3
  1229  0179  00DA               	movwf	??_main
  1230  017A  085A               	movf	??_main,w
  1231  017B  00CF               	movwf	dispLCD_num@col
  1232  017C  120A  118A  2493  120A  118A  	fcall	_reaumur
  1233  0181  0847               	movf	?_reaumur+1,w
  1234  0182  00D1               	movwf	dispLCD_num@num+1
  1235  0183  0846               	movf	?_reaumur,w
  1236  0184  00D0               	movwf	dispLCD_num@num
  1237  0185  3003               	movlw	3
  1238  0186  00DB               	movwf	??_main+1
  1239  0187  085B               	movf	??_main+1,w
  1240  0188  00D2               	movwf	dispLCD_num@tam
  1241  0189  085F               	movf	low ((_IHM| 0+3)),w
  1242  018A  120A  118A  2027  120A  118A  	fcall	fptable
  1243                           
  1244                           ;main.c: 31: IHM.printv( 1, 10, rankine( ), 3 );
  1245  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0191  01CE               	clrf	dispLCD_num@lin
  1248  0192  0ACE               	incf	dispLCD_num@lin,f
  1249  0193  300A               	movlw	10
  1250  0194  00DA               	movwf	??_main
  1251  0195  085A               	movf	??_main,w
  1252  0196  00CF               	movwf	dispLCD_num@col
  1253  0197  120A  118A  2606  120A  118A  	fcall	_rankine
  1254  019C  082C               	movf	?_rankine+1,w
  1255  019D  00D1               	movwf	dispLCD_num@num+1
  1256  019E  082B               	movf	?_rankine,w
  1257  019F  00D0               	movwf	dispLCD_num@num
  1258  01A0  3003               	movlw	3
  1259  01A1  00DB               	movwf	??_main+1
  1260  01A2  085B               	movf	??_main+1,w
  1261  01A3  00D2               	movwf	dispLCD_num@tam
  1262  01A4  085F               	movf	low ((_IHM| 0+3)),w
  1263  01A5  120A  118A  2027  120A  118A  	fcall	fptable
  1264                           
  1265                           ;main.c: 32: delay( 5000 );
  1266  01AA  3088               	movlw	136
  1267  01AB  00F4               	movwf	delay@t
  1268  01AC  3013               	movlw	19
  1269  01AD  00F5               	movwf	delay@t+1
  1270  01AE  120A  118A  25B3  120A  118A  	fcall	_delay
  1271                           
  1272                           ;main.c: 33: dispLCD_clr();
  1273  01B3  120A  118A  2624  120A  118A  	fcall	_dispLCD_clr
  1274  01B8  2907               	goto	l1936
  1275  01B9                     __end_of_main:
  1276                           
  1277                           	psect	text1
  1278  0493                     __ptext1:	
  1279 ;; *************** function _reaumur *****************
  1280 ;; Defined at:
  1281 ;;		line 59 in file "adc.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  4   38[BANK0 ] long 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, pclath, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 300/0
  1292 ;;		On exit  : 300/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         0       4       0       0       0
  1296 ;;      Locals:         0       0       0       0       0
  1297 ;;      Temps:          0       4       0       0       0
  1298 ;;      Totals:         0       8       0       0       0
  1299 ;;Total ram usage:        8 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; Hardware stack levels required when called: 4
  1302 ;; This function calls:
  1303 ;;		___aldiv
  1304 ;;		_celsius
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _reaumur
  1312  0493                     _reaumur:
  1313                           
  1314                           ;adc.c: 61: return (( ( celsius() *4 ) / 5 ));
  1315                           
  1316                           ;incstack = 0
  1317                           ; Regs used in _reaumur: [wreg+status,2+status,0+pclath+cstack]
  1318  0493  3000               	movlw	0
  1319  0494  00BA               	movwf	___aldiv@divisor+3
  1320  0495  3000               	movlw	0
  1321  0496  00B9               	movwf	___aldiv@divisor+2
  1322  0497  3000               	movlw	0
  1323  0498  00B8               	movwf	___aldiv@divisor+1
  1324  0499  3005               	movlw	5
  1325  049A  00B7               	movwf	___aldiv@divisor
  1326  049B  120A  118A  259D  120A  118A  	fcall	_celsius
  1327  04A0  0827               	movf	?_celsius,w
  1328  04A1  00CA               	movwf	??_reaumur
  1329  04A2  0828               	movf	?_celsius+1,w
  1330  04A3  00CB               	movwf	??_reaumur+1
  1331  04A4  0829               	movf	?_celsius+2,w
  1332  04A5  00CC               	movwf	??_reaumur+2
  1333  04A6  082A               	movf	?_celsius+3,w
  1334  04A7  00CD               	movwf	??_reaumur+3
  1335  04A8  3002               	movlw	2
  1336  04A9                     u1845:
  1337  04A9  1003               	clrc
  1338  04AA  0DCA               	rlf	??_reaumur,f
  1339  04AB  0DCB               	rlf	??_reaumur+1,f
  1340  04AC  0DCC               	rlf	??_reaumur+2,f
  1341  04AD  0DCD               	rlf	??_reaumur+3,f
  1342  04AE  3EFF               	addlw	-1
  1343  04AF  1D03               	skipz
  1344  04B0  2CA9               	goto	u1845
  1345  04B1  084D               	movf	??_reaumur+3,w
  1346  04B2  00BE               	movwf	___aldiv@dividend+3
  1347  04B3  084C               	movf	??_reaumur+2,w
  1348  04B4  00BD               	movwf	___aldiv@dividend+2
  1349  04B5  084B               	movf	??_reaumur+1,w
  1350  04B6  00BC               	movwf	___aldiv@dividend+1
  1351  04B7  084A               	movf	??_reaumur,w
  1352  04B8  00BB               	movwf	___aldiv@dividend
  1353  04B9  120A  118A  21B9   	fcall	___aldiv
  1354  04BC  083A               	movf	?___aldiv+3,w
  1355  04BD  00C9               	movwf	?_reaumur+3
  1356  04BE  0839               	movf	?___aldiv+2,w
  1357  04BF  00C8               	movwf	?_reaumur+2
  1358  04C0  0838               	movf	?___aldiv+1,w
  1359  04C1  00C7               	movwf	?_reaumur+1
  1360  04C2  0837               	movf	?___aldiv,w
  1361  04C3  00C6               	movwf	?_reaumur
  1362  04C4  0008               	return
  1363  04C5                     __end_of_reaumur:
  1364                           
  1365                           	psect	text2
  1366  0606                     __ptext2:	
  1367 ;; *************** function _rankine *****************
  1368 ;; Defined at:
  1369 ;;		line 64 in file "adc.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  4   11[BANK0 ] long 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0, pclath, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 300/0
  1380 ;;		On exit  : 300/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       4       0       0       0
  1384 ;;      Locals:         0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0
  1386 ;;      Totals:         0       4       0       0       0
  1387 ;;Total ram usage:        4 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 4
  1390 ;; This function calls:
  1391 ;;		_celsius
  1392 ;; This function is called by:
  1393 ;;		_main
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function _rankine
  1399  0606                     _rankine:
  1400                           
  1401                           ;adc.c: 66: return ((( ( celsius() * 9) / 5) + 491,67 ));
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _rankine: [wreg+status,2+status,0+pclath+cstack]
  1405  0606  120A  118A  259D   	fcall	_celsius
  1406  0609  3000               	movlw	0
  1407  060A  00AE               	movwf	?_rankine+3
  1408  060B  3000               	movlw	0
  1409  060C  00AD               	movwf	?_rankine+2
  1410  060D  3000               	movlw	0
  1411  060E  00AC               	movwf	?_rankine+1
  1412  060F  3043               	movlw	67
  1413  0610  00AB               	movwf	?_rankine
  1414  0611  0008               	return
  1415  0612                     __end_of_rankine:
  1416                           
  1417                           	psect	text3
  1418  053F                     __ptext3:	
  1419 ;; *************** function _kelvin *****************
  1420 ;; Defined at:
  1421 ;;		line 54 in file "adc.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  4   11[BANK0 ] long 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, pclath, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 300/0
  1432 ;;		On exit  : 300/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       4       0       0       0
  1436 ;;      Locals:         0       0       0       0       0
  1437 ;;      Temps:          0       4       0       0       0
  1438 ;;      Totals:         0       8       0       0       0
  1439 ;;Total ram usage:        8 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 4
  1442 ;; This function calls:
  1443 ;;		_celsius
  1444 ;; This function is called by:
  1445 ;;		_main
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           
  1450                           ;psect for function _kelvin
  1451  053F                     _kelvin:
  1452                           
  1453                           ;adc.c: 56: return ( ( celsius() + 273 ));
  1454                           
  1455                           ;incstack = 0
  1456                           ; Regs used in _kelvin: [wreg+status,2+status,0+pclath+cstack]
  1457  053F  3011               	movlw	17
  1458  0540  00AF               	movwf	??_kelvin
  1459  0541  3001               	movlw	1
  1460  0542  00B0               	movwf	??_kelvin+1
  1461  0543  3000               	movlw	0
  1462  0544  00B1               	movwf	??_kelvin+2
  1463  0545  3000               	movlw	0
  1464  0546  00B2               	movwf	??_kelvin+3
  1465  0547  120A  118A  259D  120A  118A  	fcall	_celsius
  1466  054C  0827               	movf	?_celsius,w
  1467  054D  07AF               	addwf	??_kelvin,f
  1468  054E  0828               	movf	?_celsius+1,w
  1469  054F  1803               	skipnc
  1470  0550  0F28               	incfsz	?_celsius+1,w
  1471  0551  2D53               	goto	u1830
  1472  0552  2D54               	goto	u1831
  1473  0553                     u1830:
  1474  0553  07B0               	addwf	??_kelvin+1,f
  1475  0554                     u1831:
  1476  0554  0829               	movf	?_celsius+2,w
  1477  0555  1803               	skipnc
  1478  0556  0F29               	incfsz	?_celsius+2,w
  1479  0557  2D59               	goto	u1832
  1480  0558  2D5A               	goto	u1833
  1481  0559                     u1832:
  1482  0559  07B1               	addwf	??_kelvin+2,f
  1483  055A                     u1833:
  1484  055A  082A               	movf	?_celsius+3,w
  1485  055B  1803               	skipnc
  1486  055C  0A2A               	incf	?_celsius+3,w
  1487  055D  07B2               	addwf	??_kelvin+3,f
  1488  055E  0832               	movf	??_kelvin+3,w
  1489  055F  00AE               	movwf	?_kelvin+3
  1490  0560  0831               	movf	??_kelvin+2,w
  1491  0561  00AD               	movwf	?_kelvin+2
  1492  0562  0830               	movf	??_kelvin+1,w
  1493  0563  00AC               	movwf	?_kelvin+1
  1494  0564  082F               	movf	??_kelvin,w
  1495  0565  00AB               	movwf	?_kelvin
  1496  0566  0008               	return
  1497  0567                     __end_of_kelvin:
  1498                           
  1499                           	psect	text4
  1500  0309                     __ptext4:	
  1501 ;; *************** function _fahrenheit *****************
  1502 ;; Defined at:
  1503 ;;		line 49 in file "adc.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  4   38[BANK0 ] long 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 300/0
  1514 ;;		On exit  : 300/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         0       4       0       0       0
  1518 ;;      Locals:         0       0       0       0       0
  1519 ;;      Temps:          0       4       0       0       0
  1520 ;;      Totals:         0       8       0       0       0
  1521 ;;Total ram usage:        8 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 4
  1524 ;; This function calls:
  1525 ;;		___aldiv
  1526 ;;		___lmul
  1527 ;;		_celsius
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _fahrenheit
  1535  0309                     _fahrenheit:
  1536                           
  1537                           ;adc.c: 51: return( ( ( ( celsius() * 9 ) /5 ) +32 ));
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _fahrenheit: [wreg+status,2+status,0+pclath+cstack]
  1541  0309  3020               	movlw	32
  1542  030A  00CA               	movwf	??_fahrenheit
  1543  030B  3000               	movlw	0
  1544  030C  00CB               	movwf	??_fahrenheit+1
  1545  030D  3000               	movlw	0
  1546  030E  00CC               	movwf	??_fahrenheit+2
  1547  030F  3000               	movlw	0
  1548  0310  00CD               	movwf	??_fahrenheit+3
  1549  0311  3000               	movlw	0
  1550  0312  00BA               	movwf	___aldiv@divisor+3
  1551  0313  3000               	movlw	0
  1552  0314  00B9               	movwf	___aldiv@divisor+2
  1553  0315  3000               	movlw	0
  1554  0316  00B8               	movwf	___aldiv@divisor+1
  1555  0317  3005               	movlw	5
  1556  0318  00B7               	movwf	___aldiv@divisor
  1557  0319  120A  118A  259D  120A  118A  	fcall	_celsius
  1558  031E  082A               	movf	?_celsius+3,w
  1559  031F  00AE               	movwf	___lmul@multiplier+3
  1560  0320  0829               	movf	?_celsius+2,w
  1561  0321  00AD               	movwf	___lmul@multiplier+2
  1562  0322  0828               	movf	?_celsius+1,w
  1563  0323  00AC               	movwf	___lmul@multiplier+1
  1564  0324  0827               	movf	?_celsius,w
  1565  0325  00AB               	movwf	___lmul@multiplier
  1566  0326  3000               	movlw	0
  1567  0327  00B2               	movwf	___lmul@multiplicand+3
  1568  0328  3000               	movlw	0
  1569  0329  00B1               	movwf	___lmul@multiplicand+2
  1570  032A  3000               	movlw	0
  1571  032B  00B0               	movwf	___lmul@multiplicand+1
  1572  032C  3009               	movlw	9
  1573  032D  00AF               	movwf	___lmul@multiplicand
  1574  032E  120A  118A  23A6  120A  118A  	fcall	___lmul
  1575  0333  082E               	movf	?___lmul+3,w
  1576  0334  00BE               	movwf	___aldiv@dividend+3
  1577  0335  082D               	movf	?___lmul+2,w
  1578  0336  00BD               	movwf	___aldiv@dividend+2
  1579  0337  082C               	movf	?___lmul+1,w
  1580  0338  00BC               	movwf	___aldiv@dividend+1
  1581  0339  082B               	movf	?___lmul,w
  1582  033A  00BB               	movwf	___aldiv@dividend
  1583  033B  120A  118A  21B9  120A  118A  	fcall	___aldiv
  1584  0340  0837               	movf	?___aldiv,w
  1585  0341  07CA               	addwf	??_fahrenheit,f
  1586  0342  0838               	movf	?___aldiv+1,w
  1587  0343  1803               	skipnc
  1588  0344  0F38               	incfsz	?___aldiv+1,w
  1589  0345  2B47               	goto	u1820
  1590  0346  2B48               	goto	u1821
  1591  0347                     u1820:
  1592  0347  07CB               	addwf	??_fahrenheit+1,f
  1593  0348                     u1821:
  1594  0348  0839               	movf	?___aldiv+2,w
  1595  0349  1803               	skipnc
  1596  034A  0F39               	incfsz	?___aldiv+2,w
  1597  034B  2B4D               	goto	u1822
  1598  034C  2B4E               	goto	u1823
  1599  034D                     u1822:
  1600  034D  07CC               	addwf	??_fahrenheit+2,f
  1601  034E                     u1823:
  1602  034E  083A               	movf	?___aldiv+3,w
  1603  034F  1803               	skipnc
  1604  0350  0A3A               	incf	?___aldiv+3,w
  1605  0351  07CD               	addwf	??_fahrenheit+3,f
  1606  0352  084D               	movf	??_fahrenheit+3,w
  1607  0353  00C9               	movwf	?_fahrenheit+3
  1608  0354  084C               	movf	??_fahrenheit+2,w
  1609  0355  00C8               	movwf	?_fahrenheit+2
  1610  0356  084B               	movf	??_fahrenheit+1,w
  1611  0357  00C7               	movwf	?_fahrenheit+1
  1612  0358  084A               	movf	??_fahrenheit,w
  1613  0359  00C6               	movwf	?_fahrenheit
  1614  035A  0008               	return
  1615  035B                     __end_of_fahrenheit:
  1616                           
  1617                           	psect	text5
  1618  059D                     __ptext5:	
  1619 ;; *************** function _celsius *****************
  1620 ;; Defined at:
  1621 ;;		line 44 in file "adc.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  4    7[BANK0 ] long 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 300/0
  1632 ;;		On exit  : 300/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       4       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          0       0       0       0       0
  1638 ;;      Totals:         0       4       0       0       0
  1639 ;;Total ram usage:        4 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 3
  1642 ;; This function calls:
  1643 ;;		___lwdiv
  1644 ;; This function is called by:
  1645 ;;		_fahrenheit
  1646 ;;		_kelvin
  1647 ;;		_reaumur
  1648 ;;		_rankine
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _celsius
  1655  059D                     _celsius:
  1656                           
  1657                           ;adc.c: 46: return( ( ( ADC_value / 10) -51 ));
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in _celsius: [wreg+status,2+status,0+pclath+cstack]
  1661  059D  300A               	movlw	10
  1662  059E  00A0               	movwf	___lwdiv@divisor
  1663  059F  3000               	movlw	0
  1664  05A0  00A1               	movwf	___lwdiv@divisor+1
  1665  05A1  0866               	movf	_ADC_value+1,w
  1666  05A2  00A3               	movwf	___lwdiv@dividend+1
  1667  05A3  0865               	movf	_ADC_value,w
  1668  05A4  00A2               	movwf	___lwdiv@dividend
  1669  05A5  120A  118A  2424   	fcall	___lwdiv
  1670  05A8  0820               	movf	?___lwdiv,w
  1671  05A9  3ECD               	addlw	205
  1672  05AA  00A7               	movwf	?_celsius
  1673  05AB  0821               	movf	?___lwdiv+1,w
  1674  05AC  1803               	skipnc
  1675  05AD  3E01               	addlw	1
  1676  05AE  3EFF               	addlw	255
  1677  05AF  00A8               	movwf	?_celsius+1
  1678  05B0  01A9               	clrf	?_celsius+2
  1679  05B1  01AA               	clrf	?_celsius+3
  1680  05B2  0008               	return
  1681  05B3                     __end_of_celsius:
  1682                           
  1683                           	psect	text6
  1684  0424                     __ptext6:	
  1685 ;; *************** function ___lwdiv *****************
  1686 ;; Defined at:
  1687 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  divisor         2    0[BANK0 ] unsigned int 
  1690 ;;  dividend        2    2[BANK0 ] unsigned int 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  quotient        2    5[BANK0 ] unsigned int 
  1693 ;;  counter         1    4[BANK0 ] unsigned char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  2    0[BANK0 ] unsigned int 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0
  1698 ;; Tracked objects:
  1699 ;;		On entry : 300/0
  1700 ;;		On exit  : 300/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         0       4       0       0       0
  1704 ;;      Locals:         0       3       0       0       0
  1705 ;;      Temps:          1       0       0       0       0
  1706 ;;      Totals:         1       7       0       0       0
  1707 ;;Total ram usage:        8 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 2
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_celsius
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function ___lwdiv
  1719  0424                     ___lwdiv:
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1723  0424  01A5               	clrf	___lwdiv@quotient
  1724  0425  01A6               	clrf	___lwdiv@quotient+1
  1725  0426  0820               	movf	___lwdiv@divisor,w
  1726  0427  0421               	iorwf	___lwdiv@divisor+1,w
  1727  0428  1903               	btfsc	3,2
  1728  0429  2C5B               	goto	l1742
  1729  042A  01A4               	clrf	___lwdiv@counter
  1730  042B  0AA4               	incf	___lwdiv@counter,f
  1731  042C                     l1730:
  1732  042C  1BA1               	btfsc	___lwdiv@divisor+1,7
  1733  042D  2C3A               	goto	l1732
  1734  042E  3001               	movlw	1
  1735  042F                     u1555:
  1736  042F  1003               	clrc
  1737  0430  0DA0               	rlf	___lwdiv@divisor,f
  1738  0431  0DA1               	rlf	___lwdiv@divisor+1,f
  1739  0432  3EFF               	addlw	-1
  1740  0433  1D03               	skipz
  1741  0434  2C2F               	goto	u1555
  1742  0435  3001               	movlw	1
  1743  0436  00F4               	movwf	??___lwdiv
  1744  0437  0874               	movf	??___lwdiv,w
  1745  0438  07A4               	addwf	___lwdiv@counter,f
  1746  0439  2C2C               	goto	l1730
  1747  043A                     l1732:
  1748  043A  3001               	movlw	1
  1749  043B                     u1575:
  1750  043B  1003               	clrc
  1751  043C  0DA5               	rlf	___lwdiv@quotient,f
  1752  043D  0DA6               	rlf	___lwdiv@quotient+1,f
  1753  043E  3EFF               	addlw	-1
  1754  043F  1D03               	skipz
  1755  0440  2C3B               	goto	u1575
  1756  0441  0821               	movf	___lwdiv@divisor+1,w
  1757  0442  0223               	subwf	___lwdiv@dividend+1,w
  1758  0443  1D03               	skipz
  1759  0444  2C47               	goto	u1585
  1760  0445  0820               	movf	___lwdiv@divisor,w
  1761  0446  0222               	subwf	___lwdiv@dividend,w
  1762  0447                     u1585:
  1763  0447  1C03               	skipc
  1764  0448  2C50               	goto	l1738
  1765  0449  0820               	movf	___lwdiv@divisor,w
  1766  044A  02A2               	subwf	___lwdiv@dividend,f
  1767  044B  0821               	movf	___lwdiv@divisor+1,w
  1768  044C  1C03               	skipc
  1769  044D  03A3               	decf	___lwdiv@dividend+1,f
  1770  044E  02A3               	subwf	___lwdiv@dividend+1,f
  1771  044F  1425               	bsf	___lwdiv@quotient,0
  1772  0450                     l1738:
  1773  0450  3001               	movlw	1
  1774  0451                     u1595:
  1775  0451  1003               	clrc
  1776  0452  0CA1               	rrf	___lwdiv@divisor+1,f
  1777  0453  0CA0               	rrf	___lwdiv@divisor,f
  1778  0454  3EFF               	addlw	-1
  1779  0455  1D03               	skipz
  1780  0456  2C51               	goto	u1595
  1781  0457  3001               	movlw	1
  1782  0458  02A4               	subwf	___lwdiv@counter,f
  1783  0459  1D03               	btfss	3,2
  1784  045A  2C3A               	goto	l1732
  1785  045B                     l1742:
  1786  045B  0826               	movf	___lwdiv@quotient+1,w
  1787  045C  00A1               	movwf	?___lwdiv+1
  1788  045D  0825               	movf	___lwdiv@quotient,w
  1789  045E  00A0               	movwf	?___lwdiv
  1790  045F  0008               	return
  1791  0460                     __end_of___lwdiv:
  1792                           
  1793                           	psect	text7
  1794  03A6                     __ptext7:	
  1795 ;; *************** function ___lmul *****************
  1796 ;; Defined at:
  1797 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  multiplier      4   11[BANK0 ] unsigned long 
  1800 ;;  multiplicand    4   15[BANK0 ] unsigned long 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  product         4   19[BANK0 ] unsigned long 
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  4   11[BANK0 ] unsigned long 
  1805 ;; Registers used:
  1806 ;;		wreg, status,2, status,0
  1807 ;; Tracked objects:
  1808 ;;		On entry : 300/0
  1809 ;;		On exit  : 300/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1812 ;;      Params:         0       8       0       0       0
  1813 ;;      Locals:         0       4       0       0       0
  1814 ;;      Temps:          1       0       0       0       0
  1815 ;;      Totals:         1      12       0       0       0
  1816 ;;Total ram usage:       13 bytes
  1817 ;; Hardware stack levels used: 1
  1818 ;; Hardware stack levels required when called: 2
  1819 ;; This function calls:
  1820 ;;		Nothing
  1821 ;; This function is called by:
  1822 ;;		_fahrenheit
  1823 ;; This function uses a non-reentrant model
  1824 ;;
  1825                           
  1826                           
  1827                           ;psect for function ___lmul
  1828  03A6                     ___lmul:
  1829                           
  1830                           ;incstack = 0
  1831                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1832  03A6  3000               	movlw	0
  1833  03A7  00B6               	movwf	___lmul@product+3
  1834  03A8  3000               	movlw	0
  1835  03A9  00B5               	movwf	___lmul@product+2
  1836  03AA  3000               	movlw	0
  1837  03AB  00B4               	movwf	___lmul@product+1
  1838  03AC  3000               	movlw	0
  1839  03AD  00B3               	movwf	___lmul@product
  1840  03AE                     l1374:
  1841  03AE  1C2B               	btfss	___lmul@multiplier,0
  1842  03AF  2BC4               	goto	l1378
  1843  03B0  082F               	movf	___lmul@multiplicand,w
  1844  03B1  07B3               	addwf	___lmul@product,f
  1845  03B2  0830               	movf	___lmul@multiplicand+1,w
  1846  03B3  1103               	clrz
  1847  03B4  1803               	skipnc
  1848  03B5  3E01               	addlw	1
  1849  03B6  1D03               	btfss	3,2
  1850  03B7  07B4               	addwf	___lmul@product+1,f
  1851  03B8  0831               	movf	___lmul@multiplicand+2,w
  1852  03B9  1103               	clrz
  1853  03BA  1803               	skipnc
  1854  03BB  3E01               	addlw	1
  1855  03BC  1D03               	btfss	3,2
  1856  03BD  07B5               	addwf	___lmul@product+2,f
  1857  03BE  0832               	movf	___lmul@multiplicand+3,w
  1858  03BF  1103               	clrz
  1859  03C0  1803               	skipnc
  1860  03C1  3E01               	addlw	1
  1861  03C2  1D03               	btfss	3,2
  1862  03C3  07B6               	addwf	___lmul@product+3,f
  1863  03C4                     l1378:
  1864  03C4  3001               	movlw	1
  1865  03C5  00F5               	movwf	??___lmul
  1866  03C6                     u945:
  1867  03C6  1003               	clrc
  1868  03C7  0DAF               	rlf	___lmul@multiplicand,f
  1869  03C8  0DB0               	rlf	___lmul@multiplicand+1,f
  1870  03C9  0DB1               	rlf	___lmul@multiplicand+2,f
  1871  03CA  0DB2               	rlf	___lmul@multiplicand+3,f
  1872  03CB  0BF5               	decfsz	??___lmul,f
  1873  03CC  2BC6               	goto	u945
  1874  03CD  3001               	movlw	1
  1875  03CE                     u955:
  1876  03CE  1003               	clrc
  1877  03CF  0CAE               	rrf	___lmul@multiplier+3,f
  1878  03D0  0CAD               	rrf	___lmul@multiplier+2,f
  1879  03D1  0CAC               	rrf	___lmul@multiplier+1,f
  1880  03D2  0CAB               	rrf	___lmul@multiplier,f
  1881  03D3  3EFF               	addlw	-1
  1882  03D4  1D03               	skipz
  1883  03D5  2BCE               	goto	u955
  1884  03D6  082E               	movf	___lmul@multiplier+3,w
  1885  03D7  042D               	iorwf	___lmul@multiplier+2,w
  1886  03D8  042C               	iorwf	___lmul@multiplier+1,w
  1887  03D9  042B               	iorwf	___lmul@multiplier,w
  1888  03DA  1D03               	skipz
  1889  03DB  2BAE               	goto	l1374
  1890  03DC  0836               	movf	___lmul@product+3,w
  1891  03DD  00AE               	movwf	?___lmul+3
  1892  03DE  0835               	movf	___lmul@product+2,w
  1893  03DF  00AD               	movwf	?___lmul+2
  1894  03E0  0834               	movf	___lmul@product+1,w
  1895  03E1  00AC               	movwf	?___lmul+1
  1896  03E2  0833               	movf	___lmul@product,w
  1897  03E3  00AB               	movwf	?___lmul
  1898  03E4  0008               	return
  1899  03E5                     __end_of___lmul:
  1900                           
  1901                           	psect	text8
  1902  01B9                     __ptext8:	
  1903 ;; *************** function ___aldiv *****************
  1904 ;; Defined at:
  1905 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  divisor         4   23[BANK0 ] long 
  1908 ;;  dividend        4   27[BANK0 ] long 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  quotient        4   34[BANK0 ] long 
  1911 ;;  sign            1   33[BANK0 ] unsigned char 
  1912 ;;  counter         1   32[BANK0 ] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  4   23[BANK0 ] long 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0
  1917 ;; Tracked objects:
  1918 ;;		On entry : 300/0
  1919 ;;		On exit  : 300/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       8       0       0       0
  1923 ;;      Locals:         0       6       0       0       0
  1924 ;;      Temps:          0       1       0       0       0
  1925 ;;      Totals:         0      15       0       0       0
  1926 ;;Total ram usage:       15 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 2
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_fahrenheit
  1933 ;;		_reaumur
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function ___aldiv
  1939  01B9                     ___aldiv:
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1943  01B9  01C1               	clrf	___aldiv@sign
  1944  01BA  1FBA               	btfss	___aldiv@divisor+3,7
  1945  01BB  29C9               	goto	l409
  1946  01BC  09B7               	comf	___aldiv@divisor,f
  1947  01BD  09B8               	comf	___aldiv@divisor+1,f
  1948  01BE  09B9               	comf	___aldiv@divisor+2,f
  1949  01BF  09BA               	comf	___aldiv@divisor+3,f
  1950  01C0  0AB7               	incf	___aldiv@divisor,f
  1951  01C1  1903               	skipnz
  1952  01C2  0AB8               	incf	___aldiv@divisor+1,f
  1953  01C3  1903               	skipnz
  1954  01C4  0AB9               	incf	___aldiv@divisor+2,f
  1955  01C5  1903               	skipnz
  1956  01C6  0ABA               	incf	___aldiv@divisor+3,f
  1957  01C7  01C1               	clrf	___aldiv@sign
  1958  01C8  0AC1               	incf	___aldiv@sign,f
  1959  01C9                     l409:
  1960  01C9  1FBE               	btfss	___aldiv@dividend+3,7
  1961  01CA  29DA               	goto	l1396
  1962  01CB  09BB               	comf	___aldiv@dividend,f
  1963  01CC  09BC               	comf	___aldiv@dividend+1,f
  1964  01CD  09BD               	comf	___aldiv@dividend+2,f
  1965  01CE  09BE               	comf	___aldiv@dividend+3,f
  1966  01CF  0ABB               	incf	___aldiv@dividend,f
  1967  01D0  1903               	skipnz
  1968  01D1  0ABC               	incf	___aldiv@dividend+1,f
  1969  01D2  1903               	skipnz
  1970  01D3  0ABD               	incf	___aldiv@dividend+2,f
  1971  01D4  1903               	skipnz
  1972  01D5  0ABE               	incf	___aldiv@dividend+3,f
  1973  01D6  3001               	movlw	1
  1974  01D7  00BF               	movwf	??___aldiv
  1975  01D8  083F               	movf	??___aldiv,w
  1976  01D9  06C1               	xorwf	___aldiv@sign,f
  1977  01DA                     l1396:
  1978  01DA  3000               	movlw	0
  1979  01DB  00C5               	movwf	___aldiv@quotient+3
  1980  01DC  3000               	movlw	0
  1981  01DD  00C4               	movwf	___aldiv@quotient+2
  1982  01DE  3000               	movlw	0
  1983  01DF  00C3               	movwf	___aldiv@quotient+1
  1984  01E0  3000               	movlw	0
  1985  01E1  00C2               	movwf	___aldiv@quotient
  1986  01E2  083A               	movf	___aldiv@divisor+3,w
  1987  01E3  0439               	iorwf	___aldiv@divisor+2,w
  1988  01E4  0438               	iorwf	___aldiv@divisor+1,w
  1989  01E5  0437               	iorwf	___aldiv@divisor,w
  1990  01E6  1903               	skipnz
  1991  01E7  2A2F               	goto	l1418
  1992  01E8  01C0               	clrf	___aldiv@counter
  1993  01E9  0AC0               	incf	___aldiv@counter,f
  1994  01EA                     l1404:
  1995  01EA  1BBA               	btfsc	___aldiv@divisor+3,7
  1996  01EB  29FA               	goto	l1406
  1997  01EC  3001               	movlw	1
  1998  01ED  00BF               	movwf	??___aldiv
  1999  01EE                     u1005:
  2000  01EE  1003               	clrc
  2001  01EF  0DB7               	rlf	___aldiv@divisor,f
  2002  01F0  0DB8               	rlf	___aldiv@divisor+1,f
  2003  01F1  0DB9               	rlf	___aldiv@divisor+2,f
  2004  01F2  0DBA               	rlf	___aldiv@divisor+3,f
  2005  01F3  0BBF               	decfsz	??___aldiv,f
  2006  01F4  29EE               	goto	u1005
  2007  01F5  3001               	movlw	1
  2008  01F6  00BF               	movwf	??___aldiv
  2009  01F7  083F               	movf	??___aldiv,w
  2010  01F8  07C0               	addwf	___aldiv@counter,f
  2011  01F9  29EA               	goto	l1404
  2012  01FA                     l1406:
  2013  01FA  3001               	movlw	1
  2014  01FB  00BF               	movwf	??___aldiv
  2015  01FC                     u1025:
  2016  01FC  1003               	clrc
  2017  01FD  0DC2               	rlf	___aldiv@quotient,f
  2018  01FE  0DC3               	rlf	___aldiv@quotient+1,f
  2019  01FF  0DC4               	rlf	___aldiv@quotient+2,f
  2020  0200  0DC5               	rlf	___aldiv@quotient+3,f
  2021  0201  0BBF               	decfsz	??___aldiv,f
  2022  0202  29FC               	goto	u1025
  2023  0203  083A               	movf	___aldiv@divisor+3,w
  2024  0204  023E               	subwf	___aldiv@dividend+3,w
  2025  0205  1D03               	skipz
  2026  0206  2A11               	goto	u1035
  2027  0207  0839               	movf	___aldiv@divisor+2,w
  2028  0208  023D               	subwf	___aldiv@dividend+2,w
  2029  0209  1D03               	skipz
  2030  020A  2A11               	goto	u1035
  2031  020B  0838               	movf	___aldiv@divisor+1,w
  2032  020C  023C               	subwf	___aldiv@dividend+1,w
  2033  020D  1D03               	skipz
  2034  020E  2A11               	goto	u1035
  2035  020F  0837               	movf	___aldiv@divisor,w
  2036  0210  023B               	subwf	___aldiv@dividend,w
  2037  0211                     u1035:
  2038  0211  1C03               	skipc
  2039  0212  2A22               	goto	l1414
  2040  0213  0837               	movf	___aldiv@divisor,w
  2041  0214  02BB               	subwf	___aldiv@dividend,f
  2042  0215  0838               	movf	___aldiv@divisor+1,w
  2043  0216  1C03               	skipc
  2044  0217  0F38               	incfsz	___aldiv@divisor+1,w
  2045  0218  02BC               	subwf	___aldiv@dividend+1,f
  2046  0219  0839               	movf	___aldiv@divisor+2,w
  2047  021A  1C03               	skipc
  2048  021B  0F39               	incfsz	___aldiv@divisor+2,w
  2049  021C  02BD               	subwf	___aldiv@dividend+2,f
  2050  021D  083A               	movf	___aldiv@divisor+3,w
  2051  021E  1C03               	skipc
  2052  021F  0F3A               	incfsz	___aldiv@divisor+3,w
  2053  0220  02BE               	subwf	___aldiv@dividend+3,f
  2054  0221  1442               	bsf	___aldiv@quotient,0
  2055  0222                     l1414:
  2056  0222  3001               	movlw	1
  2057  0223                     u1045:
  2058  0223  1003               	clrc
  2059  0224  0CBA               	rrf	___aldiv@divisor+3,f
  2060  0225  0CB9               	rrf	___aldiv@divisor+2,f
  2061  0226  0CB8               	rrf	___aldiv@divisor+1,f
  2062  0227  0CB7               	rrf	___aldiv@divisor,f
  2063  0228  3EFF               	addlw	-1
  2064  0229  1D03               	skipz
  2065  022A  2A23               	goto	u1045
  2066  022B  3001               	movlw	1
  2067  022C  02C0               	subwf	___aldiv@counter,f
  2068  022D  1D03               	btfss	3,2
  2069  022E  29FA               	goto	l1406
  2070  022F                     l1418:
  2071  022F  0841               	movf	___aldiv@sign,w
  2072  0230  1903               	btfsc	3,2
  2073  0231  2A3D               	goto	l1422
  2074  0232  09C2               	comf	___aldiv@quotient,f
  2075  0233  09C3               	comf	___aldiv@quotient+1,f
  2076  0234  09C4               	comf	___aldiv@quotient+2,f
  2077  0235  09C5               	comf	___aldiv@quotient+3,f
  2078  0236  0AC2               	incf	___aldiv@quotient,f
  2079  0237  1903               	skipnz
  2080  0238  0AC3               	incf	___aldiv@quotient+1,f
  2081  0239  1903               	skipnz
  2082  023A  0AC4               	incf	___aldiv@quotient+2,f
  2083  023B  1903               	skipnz
  2084  023C  0AC5               	incf	___aldiv@quotient+3,f
  2085  023D                     l1422:
  2086  023D  0845               	movf	___aldiv@quotient+3,w
  2087  023E  00BA               	movwf	?___aldiv+3
  2088  023F  0844               	movf	___aldiv@quotient+2,w
  2089  0240  00B9               	movwf	?___aldiv+2
  2090  0241  0843               	movf	___aldiv@quotient+1,w
  2091  0242  00B8               	movwf	?___aldiv+1
  2092  0243  0842               	movf	___aldiv@quotient,w
  2093  0244  00B7               	movwf	?___aldiv
  2094  0245  0008               	return
  2095  0246                     __end_of___aldiv:
  2096                           
  2097                           	psect	text9
  2098  0460                     __ptext9:	
  2099 ;; *************** function _dispLCDstr *****************
  2100 ;; Defined at:
  2101 ;;		line 164 in file "lcd.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  str             1    4[BANK0 ] PTR const unsigned char 
  2104 ;;		 -> STR_2(17), STR_1(17), 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 300/0
  2113 ;;		On exit  : 300/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         0       1       0       0       0
  2117 ;;      Locals:         0       0       0       0       0
  2118 ;;      Temps:          0       1       0       0       0
  2119 ;;      Totals:         0       2       0       0       0
  2120 ;;Total ram usage:        2 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 4
  2123 ;; This function calls:
  2124 ;;		_dispLCD_dataReg
  2125 ;;		_dispLCD_lincol
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _dispLCDstr
  2133  0460                     _dispLCDstr:
  2134                           
  2135                           ;lcd.c: 166: dispLCD_lincol( 0, 0 );
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _dispLCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2139  0460  01A1               	clrf	dispLCD_lincol@col
  2140  0461  3000               	movlw	0
  2141  0462  120A  118A  25D7  120A  118A  	fcall	_dispLCD_lincol
  2142  0467                     l1888:	
  2143                           ;lcd.c: 168: while( *str )
  2144                           
  2145  0467  0824               	movf	dispLCDstr@str,w
  2146  0468  0084               	movwf	4
  2147  0469  120A  118A  2517  120A  118A  	fcall	stringdir
  2148  046E  3A00               	xorlw	0
  2149  046F  1903               	btfsc	3,2
  2150  0470  0008               	return
  2151                           
  2152                           ;lcd.c: 169: {;lcd.c: 170: if( *str == '\n' )
  2153  0471  0824               	movf	dispLCDstr@str,w
  2154  0472  0084               	movwf	4
  2155  0473  120A  118A  2517  120A  118A  	fcall	stringdir
  2156  0478  3A0A               	xorlw	10
  2157  0479  1D03               	skipz
  2158  047A  2C82               	goto	l1884
  2159                           
  2160                           ;lcd.c: 171: {;lcd.c: 172: dispLCD_lincol(1,0);
  2161  047B  01A1               	clrf	dispLCD_lincol@col
  2162  047C  3001               	movlw	1
  2163  047D  120A  118A  25D7  120A  118A  	fcall	_dispLCD_lincol
  2164  0482                     l1884:
  2165                           
  2166                           ;lcd.c: 173: };lcd.c: 174: dispLCD_dataReg( *str );
  2167  0482  0824               	movf	dispLCDstr@str,w
  2168  0483  0084               	movwf	4
  2169  0484  120A  118A  2517  120A  118A  	fcall	stringdir
  2170  0489  120A  118A  24C5  120A  118A  	fcall	_dispLCD_dataReg
  2171                           
  2172                           ;lcd.c: 175: ++str;
  2173  048E  3001               	movlw	1
  2174  048F  00A5               	movwf	??_dispLCDstr
  2175  0490  0825               	movf	??_dispLCDstr,w
  2176  0491  07A4               	addwf	dispLCDstr@str,f
  2177  0492  2C67               	goto	l1888
  2178  0493                     __end_of_dispLCDstr:
  2179                           
  2180                           	psect	text10
  2181  0039                     __ptext10:	
  2182 ;; *************** function _dispLCD_num *****************
  2183 ;; Defined at:
  2184 ;;		line 180 in file "lcd.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  lin             1   46[BANK0 ] unsigned char 
  2187 ;;  col             1   47[BANK0 ] unsigned char 
  2188 ;;  num             2   48[BANK0 ] int 
  2189 ;;  tam             1   50[BANK0 ] unsigned char 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  div             2   56[BANK0 ] int 
  2192 ;;  sinal           1   55[BANK0 ] unsigned char 
  2193 ;;  size            1   54[BANK0 ] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      void 
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 300/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       5       0       0       0
  2204 ;;      Locals:         0       4       0       0       0
  2205 ;;      Temps:          0       3       0       0       0
  2206 ;;      Totals:         0      12       0       0       0
  2207 ;;Total ram usage:       12 bytes
  2208 ;; Hardware stack levels used: 1
  2209 ;; Hardware stack levels required when called: 4
  2210 ;; This function calls:
  2211 ;;		___awdiv
  2212 ;;		___awmod
  2213 ;;		_dispLCD_dataReg
  2214 ;;		_dispLCD_lincol
  2215 ;; This function is called by:
  2216 ;;		_main
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _dispLCD_num
  2222  0039                     _dispLCD_num:
  2223                           
  2224                           ;lcd.c: 183: int div;;lcd.c: 184: unsigned char size;;lcd.c: 185: char sinal;;lcd.c: 187
      +                          : sinal = num < 0;
  2225                           
  2226                           ;incstack = 0
  2227                           ; Regs used in _dispLCD_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2228  0039  1FD1               	btfss	dispLCD_num@num+1,7
  2229  003A  283D               	goto	u1870
  2230  003B  3001               	movlw	1
  2231  003C  283E               	goto	u1880
  2232  003D                     u1870:
  2233  003D  3000               	movlw	0
  2234  003E                     u1880:
  2235  003E  00D3               	movwf	??_dispLCD_num
  2236  003F  0853               	movf	??_dispLCD_num,w
  2237  0040  00D7               	movwf	dispLCD_num@sinal
  2238                           
  2239                           ;lcd.c: 188: if( sinal )
  2240  0041  0857               	movf	dispLCD_num@sinal,w
  2241  0042  1903               	btfsc	3,2
  2242  0043  2849               	goto	l1896
  2243                           
  2244                           ;lcd.c: 189: num = (~num) + 1;
  2245  0044  09D0               	comf	dispLCD_num@num,f
  2246  0045  09D1               	comf	dispLCD_num@num+1,f
  2247  0046  0AD0               	incf	dispLCD_num@num,f
  2248  0047  1903               	skipnz
  2249  0048  0AD1               	incf	dispLCD_num@num+1,f
  2250  0049                     l1896:
  2251                           
  2252                           ;lcd.c: 191: dispLCD_lincol(lin, col);
  2253  0049  084F               	movf	dispLCD_num@col,w
  2254  004A  00D3               	movwf	??_dispLCD_num
  2255  004B  0853               	movf	??_dispLCD_num,w
  2256  004C  00A1               	movwf	dispLCD_lincol@col
  2257  004D  084E               	movf	dispLCD_num@lin,w
  2258  004E  120A  118A  25D7  120A  118A  	fcall	_dispLCD_lincol
  2259                           
  2260                           ;lcd.c: 193: div=10000;
  2261  0053  3010               	movlw	16
  2262  0054  00D8               	movwf	dispLCD_num@div
  2263  0055  3027               	movlw	39
  2264  0056  00D9               	movwf	dispLCD_num@div+1
  2265                           
  2266                           ;lcd.c: 194: size = 5;
  2267  0057  3005               	movlw	5
  2268  0058  00D3               	movwf	??_dispLCD_num
  2269  0059  0853               	movf	??_dispLCD_num,w
  2270  005A  00D6               	movwf	dispLCD_num@size
  2271  005B                     l1908:	
  2272                           ;lcd.c: 195: while( div >= 1 )
  2273                           
  2274  005B  0859               	movf	dispLCD_num@div+1,w
  2275  005C  3A80               	xorlw	128
  2276  005D  00FF               	movwf	127
  2277  005E  3080               	movlw	128
  2278  005F  027F               	subwf	127,w
  2279  0060  1D03               	skipz
  2280  0061  2864               	goto	u1915
  2281  0062  3001               	movlw	1
  2282  0063  0258               	subwf	dispLCD_num@div,w
  2283  0064                     u1915:
  2284  0064  1C03               	btfss	3,0
  2285  0065  289B               	goto	l1914
  2286                           
  2287                           ;lcd.c: 196: {;lcd.c: 197: if( num/div == 0 )
  2288  0066  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0067  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0068  0859               	movf	dispLCD_num@div+1,w
  2291  0069  00A1               	movwf	___awdiv@divisor+1
  2292  006A  0858               	movf	dispLCD_num@div,w
  2293  006B  00A0               	movwf	___awdiv@divisor
  2294  006C  0851               	movf	dispLCD_num@num+1,w
  2295  006D  00A3               	movwf	___awdiv@dividend+1
  2296  006E  0850               	movf	dispLCD_num@num,w
  2297  006F  00A2               	movwf	___awdiv@dividend
  2298  0070  120A  118A  22B0  120A  118A  	fcall	___awdiv
  2299  0075  0820               	movf	?___awdiv,w
  2300  0076  0421               	iorwf	?___awdiv+1,w
  2301  0077  1D03               	btfss	3,2
  2302  0078  289B               	goto	l1914
  2303                           
  2304                           ;lcd.c: 198: --size;
  2305  0079  3001               	movlw	1
  2306  007A  02D6               	subwf	dispLCD_num@size,f
  2307                           
  2308                           ;lcd.c: 201: div/=10;
  2309  007B  300A               	movlw	10
  2310  007C  00A0               	movwf	___awdiv@divisor
  2311  007D  3000               	movlw	0
  2312  007E  00A1               	movwf	___awdiv@divisor+1
  2313  007F  0859               	movf	dispLCD_num@div+1,w
  2314  0080  00A3               	movwf	___awdiv@dividend+1
  2315  0081  0858               	movf	dispLCD_num@div,w
  2316  0082  00A2               	movwf	___awdiv@dividend
  2317  0083  120A  118A  22B0  120A  118A  	fcall	___awdiv
  2318  0088  0821               	movf	?___awdiv+1,w
  2319  0089  00D9               	movwf	dispLCD_num@div+1
  2320  008A  0820               	movf	?___awdiv,w
  2321  008B  00D8               	movwf	dispLCD_num@div
  2322  008C  285B               	goto	l1908
  2323  008D                     l1916:
  2324  008D  3002               	movlw	2
  2325  008E  1283               	bcf	3,5	;RP0=0, select bank0
  2326  008F  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0090  0252               	subwf	dispLCD_num@tam,w
  2328  0091  1C03               	btfss	3,0
  2329  0092  28AD               	goto	l1918
  2330                           
  2331                           ;lcd.c: 205: {;lcd.c: 206: dispLCD_dataReg(' ');
  2332  0093  3020               	movlw	32
  2333  0094  120A  118A  24C5  120A  118A  	fcall	_dispLCD_dataReg
  2334                           
  2335                           ;lcd.c: 207: --tam;
  2336  0099  3001               	movlw	1
  2337  009A  02D2               	subwf	dispLCD_num@tam,f
  2338  009B                     l1914:
  2339  009B  1283               	bcf	3,5	;RP0=0, select bank0
  2340  009C  1303               	bcf	3,6	;RP1=0, select bank0
  2341  009D  0856               	movf	dispLCD_num@size,w
  2342  009E  0757               	addwf	dispLCD_num@sinal,w
  2343  009F  00D3               	movwf	??_dispLCD_num
  2344  00A0  01D4               	clrf	??_dispLCD_num+1
  2345  00A1  0DD4               	rlf	??_dispLCD_num+1,f
  2346  00A2  0854               	movf	??_dispLCD_num+1,w
  2347  00A3  3A80               	xorlw	128
  2348  00A4  00D5               	movwf	??_dispLCD_num+2
  2349  00A5  3080               	movlw	128
  2350  00A6  0255               	subwf	??_dispLCD_num+2,w
  2351  00A7  1D03               	skipz
  2352  00A8  28AB               	goto	u1925
  2353  00A9  0852               	movf	dispLCD_num@tam,w
  2354  00AA  0253               	subwf	??_dispLCD_num,w
  2355  00AB                     u1925:
  2356  00AB  1C03               	btfss	3,0
  2357  00AC  288D               	goto	l1916
  2358  00AD                     l1918:
  2359                           
  2360                           ;lcd.c: 208: };lcd.c: 210: if( sinal )
  2361  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  2362  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  2363  00AF  0857               	movf	dispLCD_num@sinal,w
  2364  00B0  1903               	btfsc	3,2
  2365  00B1  28B8               	goto	l126
  2366                           
  2367                           ;lcd.c: 211: dispLCD_dataReg('-');
  2368  00B2  302D               	movlw	45
  2369  00B3  120A  118A  24C5  120A  118A  	fcall	_dispLCD_dataReg
  2370  00B8                     l126:	
  2371                           ;lcd.c: 213: do
  2372                           
  2373                           
  2374                           ;lcd.c: 214: {;lcd.c: 215: dispLCD_dataReg( (unsigned char)(num / div) + '0' );
  2375  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2376  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  2377  00BA  0859               	movf	dispLCD_num@div+1,w
  2378  00BB  00A1               	movwf	___awdiv@divisor+1
  2379  00BC  0858               	movf	dispLCD_num@div,w
  2380  00BD  00A0               	movwf	___awdiv@divisor
  2381  00BE  0851               	movf	dispLCD_num@num+1,w
  2382  00BF  00A3               	movwf	___awdiv@dividend+1
  2383  00C0  0850               	movf	dispLCD_num@num,w
  2384  00C1  00A2               	movwf	___awdiv@dividend
  2385  00C2  120A  118A  22B0  120A  118A  	fcall	___awdiv
  2386  00C7  0820               	movf	?___awdiv,w
  2387  00C8  3E30               	addlw	48
  2388  00C9  120A  118A  24C5  120A  118A  	fcall	_dispLCD_dataReg
  2389                           
  2390                           ;lcd.c: 216: num = num % div;
  2391  00CE  0859               	movf	dispLCD_num@div+1,w
  2392  00CF  00A1               	movwf	___awmod@divisor+1
  2393  00D0  0858               	movf	dispLCD_num@div,w
  2394  00D1  00A0               	movwf	___awmod@divisor
  2395  00D2  0851               	movf	dispLCD_num@num+1,w
  2396  00D3  00A3               	movwf	___awmod@dividend+1
  2397  00D4  0850               	movf	dispLCD_num@num,w
  2398  00D5  00A2               	movwf	___awmod@dividend
  2399  00D6  120A  118A  235B  120A  118A  	fcall	___awmod
  2400  00DB  0821               	movf	?___awmod+1,w
  2401  00DC  00D1               	movwf	dispLCD_num@num+1
  2402  00DD  0820               	movf	?___awmod,w
  2403  00DE  00D0               	movwf	dispLCD_num@num
  2404                           
  2405                           ;lcd.c: 217: div/=10;
  2406  00DF  300A               	movlw	10
  2407  00E0  00A0               	movwf	___awdiv@divisor
  2408  00E1  3000               	movlw	0
  2409  00E2  00A1               	movwf	___awdiv@divisor+1
  2410  00E3  0859               	movf	dispLCD_num@div+1,w
  2411  00E4  00A3               	movwf	___awdiv@dividend+1
  2412  00E5  0858               	movf	dispLCD_num@div,w
  2413  00E6  00A2               	movwf	___awdiv@dividend
  2414  00E7  120A  118A  22B0  120A  118A  	fcall	___awdiv
  2415  00EC  0821               	movf	?___awdiv+1,w
  2416  00ED  00D9               	movwf	dispLCD_num@div+1
  2417  00EE  0820               	movf	?___awdiv,w
  2418  00EF  00D8               	movwf	dispLCD_num@div
  2419                           
  2420                           ;lcd.c: 218: };lcd.c: 219: while( div >= 1 );
  2421  00F0  0859               	movf	dispLCD_num@div+1,w
  2422  00F1  3A80               	xorlw	128
  2423  00F2  00FF               	movwf	127
  2424  00F3  3080               	movlw	128
  2425  00F4  027F               	subwf	127,w
  2426  00F5  1D03               	skipz
  2427  00F6  28F9               	goto	u1955
  2428  00F7  3001               	movlw	1
  2429  00F8  0258               	subwf	dispLCD_num@div,w
  2430  00F9                     u1955:
  2431  00F9  1C03               	btfss	3,0
  2432  00FA  0008               	return
  2433  00FB  28B8               	goto	l126
  2434  00FC                     __end_of_dispLCD_num:
  2435                           
  2436                           	psect	text11
  2437  05D7                     __ptext11:	
  2438 ;; *************** function _dispLCD_lincol *****************
  2439 ;; Defined at:
  2440 ;;		line 126 in file "lcd.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  lin             1    wreg     unsigned char 
  2443 ;;  col             1    1[BANK0 ] unsigned char 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  lin             1    3[BANK0 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, pclath, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 300/0
  2452 ;;		On exit  : 300/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       1       0       0       0
  2456 ;;      Locals:         0       1       0       0       0
  2457 ;;      Temps:          0       1       0       0       0
  2458 ;;      Totals:         0       3       0       0       0
  2459 ;;Total ram usage:        3 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 3
  2462 ;; This function calls:
  2463 ;;		_dispLCD_instReg
  2464 ;; This function is called by:
  2465 ;;		_dispLCDstr
  2466 ;;		_dispLCD_num
  2467 ;;		_dispLCD
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function _dispLCD_lincol
  2473  05D7                     _dispLCD_lincol:
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  2477                           ;dispLCD_lincol@lin stored from wreg
  2478  05D7  00A3               	movwf	dispLCD_lincol@lin
  2479                           
  2480                           ;lcd.c: 128: dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  2481  05D8  0823               	movf	dispLCD_lincol@lin,w
  2482  05D9  00A2               	movwf	??_dispLCD_lincol
  2483  05DA  3006               	movlw	6
  2484  05DB                     u1625:
  2485  05DB  1003               	clrc
  2486  05DC  0DA2               	rlf	??_dispLCD_lincol,f
  2487  05DD  3EFF               	addlw	-1
  2488  05DE  1D03               	skipz
  2489  05DF  2DDB               	goto	u1625
  2490  05E0  0821               	movf	dispLCD_lincol@col,w
  2491  05E1  0722               	addwf	??_dispLCD_lincol,w
  2492  05E2  397F               	andlw	127
  2493  05E3  3E80               	addlw	128
  2494  05E4  120A  118A  2246   	fcall	_dispLCD_instReg
  2495  05E7  0008               	return
  2496  05E8                     __end_of_dispLCD_lincol:
  2497                           
  2498                           	psect	text12
  2499  04C5                     __ptext12:	
  2500 ;; *************** function _dispLCD_dataReg *****************
  2501 ;; Defined at:
  2502 ;;		line 110 in file "lcd.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  d               1    wreg     unsigned char 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  d               1    5[COMMON] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 300/0
  2513 ;;		On exit  : 300/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2516 ;;      Params:         0       0       0       0       0
  2517 ;;      Locals:         1       0       0       0       0
  2518 ;;      Temps:          1       0       0       0       0
  2519 ;;      Totals:         2       0       0       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 2
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_dispLCDstr
  2527 ;;		_dispLCD_num
  2528 ;;		_dispLCD
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _dispLCD_dataReg
  2534  04C5                     _dispLCD_dataReg:
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  2538                           ;dispLCD_dataReg@d stored from wreg
  2539  04C5  00F5               	movwf	dispLCD_dataReg@d
  2540                           
  2541                           ;lcd.c: 112: LCDbits.RS = 1;
  2542  04C6  1608               	bsf	8,4	;volatile
  2543                           
  2544                           ;lcd.c: 113: LCDbits.BUS = d >> 4;
  2545  04C7  0875               	movf	dispLCD_dataReg@d,w
  2546  04C8  00F4               	movwf	??_dispLCD_dataReg
  2547  04C9  3004               	movlw	4
  2548  04CA                     u905:
  2549  04CA  1003               	clrc
  2550  04CB  0CF4               	rrf	??_dispLCD_dataReg,f
  2551  04CC  3EFF               	addlw	-1
  2552  04CD  1D03               	skipz
  2553  04CE  2CCA               	goto	u905
  2554  04CF  0808               	movf	8,w	;volatile
  2555  04D0  0674               	xorwf	??_dispLCD_dataReg,w
  2556  04D1  39F0               	andlw	-16
  2557  04D2  0674               	xorwf	??_dispLCD_dataReg,w
  2558  04D3  0088               	movwf	8	;volatile
  2559                           
  2560                           ;lcd.c: 114: LCDbits.EN = 0;
  2561  04D4  1288               	bcf	8,5	;volatile
  2562                           
  2563                           ;lcd.c: 115: _delay((unsigned long)((40)*(4000000/4000000.0)));
  2564  04D5  300D               	movlw	13
  2565  04D6  00F4               	movwf	??_dispLCD_dataReg
  2566  04D7                     u1977:
  2567  04D7  0BF4               	decfsz	??_dispLCD_dataReg,f
  2568  04D8  2CD7               	goto	u1977
  2569                           
  2570                           ;lcd.c: 116: LCDbits.EN = 1;
  2571  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2572  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2573  04DB  1688               	bsf	8,5	;volatile
  2574                           
  2575                           ;lcd.c: 118: LCDbits.RS = 1;
  2576  04DC  1608               	bsf	8,4	;volatile
  2577                           
  2578                           ;lcd.c: 119: LCDbits.BUS = d & 0x0F;
  2579  04DD  300F               	movlw	15
  2580  04DE  0575               	andwf	dispLCD_dataReg@d,w
  2581  04DF  00F4               	movwf	??_dispLCD_dataReg
  2582  04E0  0808               	movf	8,w	;volatile
  2583  04E1  0674               	xorwf	??_dispLCD_dataReg,w
  2584  04E2  39F0               	andlw	-16
  2585  04E3  0674               	xorwf	??_dispLCD_dataReg,w
  2586  04E4  0088               	movwf	8	;volatile
  2587                           
  2588                           ;lcd.c: 120: LCDbits.EN = 0;
  2589  04E5  1288               	bcf	8,5	;volatile
  2590                           
  2591                           ;lcd.c: 121: _delay((unsigned long)((40)*(4000000/4000000.0)));
  2592  04E6  300D               	movlw	13
  2593  04E7  00F4               	movwf	??_dispLCD_dataReg
  2594  04E8                     u1987:
  2595  04E8  0BF4               	decfsz	??_dispLCD_dataReg,f
  2596  04E9  2CE8               	goto	u1987
  2597                           
  2598                           ;lcd.c: 122: LCDbits.EN = 1;
  2599  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2600  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2601  04EC  1688               	bsf	8,5	;volatile
  2602  04ED  0008               	return
  2603  04EE                     __end_of_dispLCD_dataReg:
  2604                           
  2605                           	psect	text13
  2606  035B                     __ptext13:	
  2607 ;; *************** function ___awmod *****************
  2608 ;; Defined at:
  2609 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  divisor         2    0[BANK0 ] int 
  2612 ;;  dividend        2    2[BANK0 ] int 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  sign            1    5[BANK0 ] unsigned char 
  2615 ;;  counter         1    4[BANK0 ] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  2    0[BANK0 ] int 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 300/0
  2622 ;;		On exit  : 300/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       4       0       0       0
  2626 ;;      Locals:         0       2       0       0       0
  2627 ;;      Temps:          1       0       0       0       0
  2628 ;;      Totals:         1       6       0       0       0
  2629 ;;Total ram usage:        7 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; Hardware stack levels required when called: 2
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_dispLCD_num
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           
  2640                           ;psect for function ___awmod
  2641  035B                     ___awmod:
  2642                           
  2643                           ;incstack = 0
  2644                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2645  035B  01A5               	clrf	___awmod@sign
  2646  035C  1FA3               	btfss	___awmod@dividend+1,7
  2647  035D  2B65               	goto	l1810
  2648  035E  09A2               	comf	___awmod@dividend,f
  2649  035F  09A3               	comf	___awmod@dividend+1,f
  2650  0360  0AA2               	incf	___awmod@dividend,f
  2651  0361  1903               	skipnz
  2652  0362  0AA3               	incf	___awmod@dividend+1,f
  2653  0363  01A5               	clrf	___awmod@sign
  2654  0364  0AA5               	incf	___awmod@sign,f
  2655  0365                     l1810:
  2656  0365  1FA1               	btfss	___awmod@divisor+1,7
  2657  0366  2B6C               	goto	l1814
  2658  0367  09A0               	comf	___awmod@divisor,f
  2659  0368  09A1               	comf	___awmod@divisor+1,f
  2660  0369  0AA0               	incf	___awmod@divisor,f
  2661  036A  1903               	skipnz
  2662  036B  0AA1               	incf	___awmod@divisor+1,f
  2663  036C                     l1814:
  2664  036C  0820               	movf	___awmod@divisor,w
  2665  036D  0421               	iorwf	___awmod@divisor+1,w
  2666  036E  1903               	btfsc	3,2
  2667  036F  2B99               	goto	l1832
  2668  0370  01A4               	clrf	___awmod@counter
  2669  0371  0AA4               	incf	___awmod@counter,f
  2670  0372                     l1822:
  2671  0372  1BA1               	btfsc	___awmod@divisor+1,7
  2672  0373  2B80               	goto	l1824
  2673  0374  3001               	movlw	1
  2674  0375                     u1765:
  2675  0375  1003               	clrc
  2676  0376  0DA0               	rlf	___awmod@divisor,f
  2677  0377  0DA1               	rlf	___awmod@divisor+1,f
  2678  0378  3EFF               	addlw	-1
  2679  0379  1D03               	skipz
  2680  037A  2B75               	goto	u1765
  2681  037B  3001               	movlw	1
  2682  037C  00F4               	movwf	??___awmod
  2683  037D  0874               	movf	??___awmod,w
  2684  037E  07A4               	addwf	___awmod@counter,f
  2685  037F  2B72               	goto	l1822
  2686  0380                     l1824:
  2687  0380  0821               	movf	___awmod@divisor+1,w
  2688  0381  0223               	subwf	___awmod@dividend+1,w
  2689  0382  1D03               	skipz
  2690  0383  2B86               	goto	u1785
  2691  0384  0820               	movf	___awmod@divisor,w
  2692  0385  0222               	subwf	___awmod@dividend,w
  2693  0386                     u1785:
  2694  0386  1C03               	skipc
  2695  0387  2B8E               	goto	l1828
  2696  0388  0820               	movf	___awmod@divisor,w
  2697  0389  02A2               	subwf	___awmod@dividend,f
  2698  038A  0821               	movf	___awmod@divisor+1,w
  2699  038B  1C03               	skipc
  2700  038C  03A3               	decf	___awmod@dividend+1,f
  2701  038D  02A3               	subwf	___awmod@dividend+1,f
  2702  038E                     l1828:
  2703  038E  3001               	movlw	1
  2704  038F                     u1795:
  2705  038F  1003               	clrc
  2706  0390  0CA1               	rrf	___awmod@divisor+1,f
  2707  0391  0CA0               	rrf	___awmod@divisor,f
  2708  0392  3EFF               	addlw	-1
  2709  0393  1D03               	skipz
  2710  0394  2B8F               	goto	u1795
  2711  0395  3001               	movlw	1
  2712  0396  02A4               	subwf	___awmod@counter,f
  2713  0397  1D03               	btfss	3,2
  2714  0398  2B80               	goto	l1824
  2715  0399                     l1832:
  2716  0399  0825               	movf	___awmod@sign,w
  2717  039A  1903               	btfsc	3,2
  2718  039B  2BA1               	goto	l1836
  2719  039C  09A2               	comf	___awmod@dividend,f
  2720  039D  09A3               	comf	___awmod@dividend+1,f
  2721  039E  0AA2               	incf	___awmod@dividend,f
  2722  039F  1903               	skipnz
  2723  03A0  0AA3               	incf	___awmod@dividend+1,f
  2724  03A1                     l1836:
  2725  03A1  0823               	movf	___awmod@dividend+1,w
  2726  03A2  00A1               	movwf	?___awmod+1
  2727  03A3  0822               	movf	___awmod@dividend,w
  2728  03A4  00A0               	movwf	?___awmod
  2729  03A5  0008               	return
  2730  03A6                     __end_of___awmod:
  2731                           
  2732                           	psect	text14
  2733  02B0                     __ptext14:	
  2734 ;; *************** function ___awdiv *****************
  2735 ;; Defined at:
  2736 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  divisor         2    0[BANK0 ] int 
  2739 ;;  dividend        2    2[BANK0 ] int 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  quotient        2    6[BANK0 ] int 
  2742 ;;  sign            1    5[BANK0 ] unsigned char 
  2743 ;;  counter         1    4[BANK0 ] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2    0[BANK0 ] int 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 300/0
  2750 ;;		On exit  : 300/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         0       4       0       0       0
  2754 ;;      Locals:         0       4       0       0       0
  2755 ;;      Temps:          1       0       0       0       0
  2756 ;;      Totals:         1       8       0       0       0
  2757 ;;Total ram usage:        9 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 2
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_dispLCD_num
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function ___awdiv
  2769  02B0                     ___awdiv:
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2773  02B0  01A5               	clrf	___awdiv@sign
  2774  02B1  1FA1               	btfss	___awdiv@divisor+1,7
  2775  02B2  2ABA               	goto	l1766
  2776  02B3  09A0               	comf	___awdiv@divisor,f
  2777  02B4  09A1               	comf	___awdiv@divisor+1,f
  2778  02B5  0AA0               	incf	___awdiv@divisor,f
  2779  02B6  1903               	skipnz
  2780  02B7  0AA1               	incf	___awdiv@divisor+1,f
  2781  02B8  01A5               	clrf	___awdiv@sign
  2782  02B9  0AA5               	incf	___awdiv@sign,f
  2783  02BA                     l1766:
  2784  02BA  1FA3               	btfss	___awdiv@dividend+1,7
  2785  02BB  2AC5               	goto	l1772
  2786  02BC  09A2               	comf	___awdiv@dividend,f
  2787  02BD  09A3               	comf	___awdiv@dividend+1,f
  2788  02BE  0AA2               	incf	___awdiv@dividend,f
  2789  02BF  1903               	skipnz
  2790  02C0  0AA3               	incf	___awdiv@dividend+1,f
  2791  02C1  3001               	movlw	1
  2792  02C2  00F4               	movwf	??___awdiv
  2793  02C3  0874               	movf	??___awdiv,w
  2794  02C4  06A5               	xorwf	___awdiv@sign,f
  2795  02C5                     l1772:
  2796  02C5  01A6               	clrf	___awdiv@quotient
  2797  02C6  01A7               	clrf	___awdiv@quotient+1
  2798  02C7  0820               	movf	___awdiv@divisor,w
  2799  02C8  0421               	iorwf	___awdiv@divisor+1,w
  2800  02C9  1903               	btfsc	3,2
  2801  02CA  2AFC               	goto	l1794
  2802  02CB  01A4               	clrf	___awdiv@counter
  2803  02CC  0AA4               	incf	___awdiv@counter,f
  2804  02CD                     l1782:
  2805  02CD  1BA1               	btfsc	___awdiv@divisor+1,7
  2806  02CE  2ADB               	goto	l1784
  2807  02CF  3001               	movlw	1
  2808  02D0                     u1665:
  2809  02D0  1003               	clrc
  2810  02D1  0DA0               	rlf	___awdiv@divisor,f
  2811  02D2  0DA1               	rlf	___awdiv@divisor+1,f
  2812  02D3  3EFF               	addlw	-1
  2813  02D4  1D03               	skipz
  2814  02D5  2AD0               	goto	u1665
  2815  02D6  3001               	movlw	1
  2816  02D7  00F4               	movwf	??___awdiv
  2817  02D8  0874               	movf	??___awdiv,w
  2818  02D9  07A4               	addwf	___awdiv@counter,f
  2819  02DA  2ACD               	goto	l1782
  2820  02DB                     l1784:
  2821  02DB  3001               	movlw	1
  2822  02DC                     u1685:
  2823  02DC  1003               	clrc
  2824  02DD  0DA6               	rlf	___awdiv@quotient,f
  2825  02DE  0DA7               	rlf	___awdiv@quotient+1,f
  2826  02DF  3EFF               	addlw	-1
  2827  02E0  1D03               	skipz
  2828  02E1  2ADC               	goto	u1685
  2829  02E2  0821               	movf	___awdiv@divisor+1,w
  2830  02E3  0223               	subwf	___awdiv@dividend+1,w
  2831  02E4  1D03               	skipz
  2832  02E5  2AE8               	goto	u1695
  2833  02E6  0820               	movf	___awdiv@divisor,w
  2834  02E7  0222               	subwf	___awdiv@dividend,w
  2835  02E8                     u1695:
  2836  02E8  1C03               	skipc
  2837  02E9  2AF1               	goto	l1790
  2838  02EA  0820               	movf	___awdiv@divisor,w
  2839  02EB  02A2               	subwf	___awdiv@dividend,f
  2840  02EC  0821               	movf	___awdiv@divisor+1,w
  2841  02ED  1C03               	skipc
  2842  02EE  03A3               	decf	___awdiv@dividend+1,f
  2843  02EF  02A3               	subwf	___awdiv@dividend+1,f
  2844  02F0  1426               	bsf	___awdiv@quotient,0
  2845  02F1                     l1790:
  2846  02F1  3001               	movlw	1
  2847  02F2                     u1705:
  2848  02F2  1003               	clrc
  2849  02F3  0CA1               	rrf	___awdiv@divisor+1,f
  2850  02F4  0CA0               	rrf	___awdiv@divisor,f
  2851  02F5  3EFF               	addlw	-1
  2852  02F6  1D03               	skipz
  2853  02F7  2AF2               	goto	u1705
  2854  02F8  3001               	movlw	1
  2855  02F9  02A4               	subwf	___awdiv@counter,f
  2856  02FA  1D03               	btfss	3,2
  2857  02FB  2ADB               	goto	l1784
  2858  02FC                     l1794:
  2859  02FC  0825               	movf	___awdiv@sign,w
  2860  02FD  1903               	btfsc	3,2
  2861  02FE  2B04               	goto	l1798
  2862  02FF  09A6               	comf	___awdiv@quotient,f
  2863  0300  09A7               	comf	___awdiv@quotient+1,f
  2864  0301  0AA6               	incf	___awdiv@quotient,f
  2865  0302  1903               	skipnz
  2866  0303  0AA7               	incf	___awdiv@quotient+1,f
  2867  0304                     l1798:
  2868  0304  0827               	movf	___awdiv@quotient+1,w
  2869  0305  00A1               	movwf	?___awdiv+1
  2870  0306  0826               	movf	___awdiv@quotient,w
  2871  0307  00A0               	movwf	?___awdiv
  2872  0308  0008               	return
  2873  0309                     __end_of___awdiv:
  2874                           
  2875                           	psect	text15
  2876  03E5                     __ptext15:	
  2877 ;; *************** function _dispLCD_init *****************
  2878 ;; Defined at:
  2879 ;;		line 132 in file "lcd.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0, pclath, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : B00/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2893 ;;      Params:         0       0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0
  2896 ;;      Totals:         0       0       0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 3
  2900 ;; This function calls:
  2901 ;;		_delay
  2902 ;;		_dispLCD_instReg
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function _dispLCD_init
  2910  03E5                     _dispLCD_init:
  2911                           
  2912                           ;lcd.c: 134: delay(100);
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  2916  03E5  3064               	movlw	100
  2917  03E6  00F4               	movwf	delay@t
  2918  03E7  3000               	movlw	0
  2919  03E8  00F5               	movwf	delay@t+1
  2920  03E9  120A  118A  25B3  120A  118A  	fcall	_delay
  2921                           
  2922                           ;lcd.c: 135: TRISDbits.TRISD0 = 0;
  2923  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2924  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2925  03F0  1008               	bcf	8,0	;volatile
  2926                           
  2927                           ;lcd.c: 136: TRISDbits.TRISD1 = 0;
  2928  03F1  1088               	bcf	8,1	;volatile
  2929                           
  2930                           ;lcd.c: 137: TRISDbits.TRISD2 = 0;
  2931  03F2  1108               	bcf	8,2	;volatile
  2932                           
  2933                           ;lcd.c: 138: TRISDbits.TRISD3 = 0;
  2934  03F3  1188               	bcf	8,3	;volatile
  2935                           
  2936                           ;lcd.c: 139: TRISDbits.TRISD4 = 0;
  2937  03F4  1208               	bcf	8,4	;volatile
  2938                           
  2939                           ;lcd.c: 140: TRISDbits.TRISD5 = 0;
  2940  03F5  1288               	bcf	8,5	;volatile
  2941                           
  2942                           ;lcd.c: 141: TRISDbits.TRISD6 = 1;
  2943  03F6  1708               	bsf	8,6	;volatile
  2944                           
  2945                           ;lcd.c: 142: TRISDbits.TRISD7 = 1;
  2946  03F7  1788               	bsf	8,7	;volatile
  2947                           
  2948                           ;lcd.c: 143: delay(100);
  2949  03F8  3064               	movlw	100
  2950  03F9  00F4               	movwf	delay@t
  2951  03FA  3000               	movlw	0
  2952  03FB  00F5               	movwf	delay@t+1
  2953  03FC  120A  118A  25B3  120A  118A  	fcall	_delay
  2954                           
  2955                           ;lcd.c: 144: LCDbits.EN = 1;
  2956  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2957  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2958  0403  1688               	bsf	8,5	;volatile
  2959                           
  2960                           ;lcd.c: 145: dispLCD_instReg( 0x20|0x00|0x08);
  2961  0404  3028               	movlw	40
  2962  0405  120A  118A  2246  120A  118A  	fcall	_dispLCD_instReg
  2963                           
  2964                           ;lcd.c: 146: dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  2965  040A  300C               	movlw	12
  2966  040B  120A  118A  2246  120A  118A  	fcall	_dispLCD_instReg
  2967                           
  2968                           ;lcd.c: 147: dispLCD_instReg( 0x01 );
  2969  0410  3001               	movlw	1
  2970  0411  120A  118A  2246  120A  118A  	fcall	_dispLCD_instReg
  2971                           
  2972                           ;lcd.c: 148: dispLCD_instReg( 0x02 );
  2973  0416  3002               	movlw	2
  2974  0417  120A  118A  2246  120A  118A  	fcall	_dispLCD_instReg
  2975                           
  2976                           ;lcd.c: 149: delay(100);
  2977  041C  3064               	movlw	100
  2978  041D  00F4               	movwf	delay@t
  2979  041E  3000               	movlw	0
  2980  041F  00F5               	movwf	delay@t+1
  2981  0420  120A  118A  25B3   	fcall	_delay
  2982  0423  0008               	return
  2983  0424                     __end_of_dispLCD_init:
  2984                           
  2985                           	psect	text16
  2986  05B3                     __ptext16:	
  2987 ;; *************** function _delay *****************
  2988 ;; Defined at:
  2989 ;;		line 12 in file "delay.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  t               2    4[COMMON] unsigned int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         2       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       1       0       0       0
  3006 ;;      Totals:         2       1       0       0       0
  3007 ;;Total ram usage:        3 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 2
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_dispLCD_init
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           
  3019                           ;psect for function _delay
  3020  05B3                     _delay:
  3021  05B3                     l1754:	
  3022                           ;delay.c: 14: while( t )
  3023                           
  3024                           ;incstack = 0
  3025                           ; Regs used in _delay: [wreg+status,2+status,0]
  3026                           
  3027  05B3  0874               	movf	delay@t,w
  3028  05B4  0475               	iorwf	delay@t+1,w
  3029  05B5  1903               	btfsc	3,2
  3030  05B6  0008               	return
  3031                           
  3032                           ;delay.c: 15: {;delay.c: 16: _delay((unsigned long)((1)*(4000000/4000.0)));
  3033  05B7  30C7               	movlw	199
  3034  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3035  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3036  05BA  00A0               	movwf	??_delay
  3037  05BB                     u1997:
  3038  05BB  2DBC               	nop2
  3039  05BC  0BA0               	decfsz	??_delay,f
  3040  05BD  2DBB               	goto	u1997
  3041  05BE  2DBF               	nop2
  3042                           
  3043                           ;delay.c: 17: --t;
  3044  05BF  3001               	movlw	1
  3045  05C0  02F4               	subwf	delay@t,f
  3046  05C1  3000               	movlw	0
  3047  05C2  1C03               	skipc
  3048  05C3  03F5               	decf	delay@t+1,f
  3049  05C4  02F5               	subwf	delay@t+1,f
  3050  05C5  2DB3               	goto	l1754
  3051  05C6                     __end_of_delay:
  3052                           
  3053                           	psect	text17
  3054  0624                     __ptext17:	
  3055 ;; *************** function _dispLCD_clr *****************
  3056 ;; Defined at:
  3057 ;;		line 223 in file "lcd.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0, pclath, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 300/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3071 ;;      Params:         0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0
  3074 ;;      Totals:         0       0       0       0       0
  3075 ;;Total ram usage:        0 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; Hardware stack levels required when called: 3
  3078 ;; This function calls:
  3079 ;;		_dispLCD_instReg
  3080 ;; This function is called by:
  3081 ;;		_main
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           
  3086                           ;psect for function _dispLCD_clr
  3087  0624                     _dispLCD_clr:
  3088                           
  3089                           ;lcd.c: 225: dispLCD_instReg(0x01);
  3090                           
  3091                           ;incstack = 0
  3092                           ; Regs used in _dispLCD_clr: [wreg+status,2+status,0+pclath+cstack]
  3093  0624  3001               	movlw	1
  3094  0625  120A  118A  2246   	fcall	_dispLCD_instReg
  3095  0628  0008               	return
  3096  0629                     __end_of_dispLCD_clr:
  3097                           
  3098                           	psect	text18
  3099  0246                     __ptext18:	
  3100 ;; *************** function _dispLCD_instReg *****************
  3101 ;; Defined at:
  3102 ;;		line 77 in file "lcd.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;  i               1    wreg     unsigned char 
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;  i               1    0[BANK0 ] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 300/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3116 ;;      Params:         0       0       0       0       0
  3117 ;;      Locals:         0       1       0       0       0
  3118 ;;      Temps:          2       0       0       0       0
  3119 ;;      Totals:         2       1       0       0       0
  3120 ;;Total ram usage:        3 bytes
  3121 ;; Hardware stack levels used: 1
  3122 ;; Hardware stack levels required when called: 2
  3123 ;; This function calls:
  3124 ;;		Nothing
  3125 ;; This function is called by:
  3126 ;;		_dispLCD_lincol
  3127 ;;		_dispLCD_init
  3128 ;;		_dispLCD_clr
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function _dispLCD_instReg
  3134  0246                     _dispLCD_instReg:
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  3138                           ;dispLCD_instReg@i stored from wreg
  3139  0246  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0247  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0248  00A0               	movwf	dispLCD_instReg@i
  3142                           
  3143                           ;lcd.c: 79: LCDbits.RS = 0;
  3144  0249  1208               	bcf	8,4	;volatile
  3145                           
  3146                           ;lcd.c: 80: LCDbits.BUS = (i>>4);
  3147  024A  0820               	movf	dispLCD_instReg@i,w
  3148  024B  00F4               	movwf	??_dispLCD_instReg
  3149  024C  3004               	movlw	4
  3150  024D                     u1475:
  3151  024D  1003               	clrc
  3152  024E  0CF4               	rrf	??_dispLCD_instReg,f
  3153  024F  3EFF               	addlw	-1
  3154  0250  1D03               	skipz
  3155  0251  2A4D               	goto	u1475
  3156  0252  0808               	movf	8,w	;volatile
  3157  0253  0674               	xorwf	??_dispLCD_instReg,w
  3158  0254  39F0               	andlw	-16
  3159  0255  0674               	xorwf	??_dispLCD_instReg,w
  3160  0256  0088               	movwf	8	;volatile
  3161                           
  3162                           ;lcd.c: 82: LCDbits.EN = 0;
  3163  0257  1288               	bcf	8,5	;volatile
  3164                           
  3165                           ;lcd.c: 83: if( i == 0x01 || i == 0x02 )
  3166  0258  0320               	decf	dispLCD_instReg@i,w
  3167  0259  1903               	btfsc	3,2
  3168  025A  2A5F               	goto	l1686
  3169  025B  3002               	movlw	2
  3170  025C  0620               	xorwf	dispLCD_instReg@i,w
  3171  025D  1D03               	btfss	3,2
  3172  025E  2A69               	goto	l1688
  3173  025F                     l1686:
  3174                           
  3175                           ;lcd.c: 84: _delay((unsigned long)((2)*(4000000/4000.0)));
  3176  025F  3003               	movlw	3
  3177  0260  00F5               	movwf	??_dispLCD_instReg+1
  3178  0261  3097               	movlw	151
  3179  0262  00F4               	movwf	??_dispLCD_instReg
  3180  0263                     u2007:
  3181  0263  0BF4               	decfsz	??_dispLCD_instReg,f
  3182  0264  2A63               	goto	u2007
  3183  0265  0BF5               	decfsz	??_dispLCD_instReg+1,f
  3184  0266  2A63               	goto	u2007
  3185  0267  2A68               	nop2
  3186  0268  2A6D               	goto	l1690
  3187  0269                     l1688:
  3188                           
  3189                           ;lcd.c: 85: else;lcd.c: 86: _delay((unsigned long)((40)*(4000000/4000000.0)));
  3190  0269  300D               	movlw	13
  3191  026A  00F4               	movwf	??_dispLCD_instReg
  3192  026B                     u2017:
  3193  026B  0BF4               	decfsz	??_dispLCD_instReg,f
  3194  026C  2A6B               	goto	u2017
  3195  026D                     l1690:
  3196                           
  3197                           ;lcd.c: 87: LCDbits.EN = 1;
  3198  026D  1283               	bcf	3,5	;RP0=0, select bank0
  3199  026E  1303               	bcf	3,6	;RP1=0, select bank0
  3200  026F  1688               	bsf	8,5	;volatile
  3201                           
  3202                           ;lcd.c: 90: if( (i & 0xF0) == (0x20 | 0x00) )
  3203  0270  30F0               	movlw	240
  3204  0271  0520               	andwf	dispLCD_instReg@i,w
  3205  0272  00F4               	movwf	??_dispLCD_instReg
  3206  0273  3020               	movlw	32
  3207  0274  0674               	xorwf	??_dispLCD_instReg,w
  3208  0275  1D03               	btfss	3,2
  3209  0276  2A8D               	goto	l1704
  3210                           
  3211                           ;lcd.c: 91: {;lcd.c: 92: LCDbits.RS = 0;
  3212  0277  1208               	bcf	8,4	;volatile
  3213                           
  3214                           ;lcd.c: 93: LCDbits.BUS = i>>4;
  3215  0278  0820               	movf	dispLCD_instReg@i,w
  3216  0279  00F4               	movwf	??_dispLCD_instReg
  3217  027A  3004               	movlw	4
  3218  027B                     u1515:
  3219  027B  1003               	clrc
  3220  027C  0CF4               	rrf	??_dispLCD_instReg,f
  3221  027D  3EFF               	addlw	-1
  3222  027E  1D03               	skipz
  3223  027F  2A7B               	goto	u1515
  3224  0280  0808               	movf	8,w	;volatile
  3225  0281  0674               	xorwf	??_dispLCD_instReg,w
  3226  0282  39F0               	andlw	-16
  3227  0283  0674               	xorwf	??_dispLCD_instReg,w
  3228  0284  0088               	movwf	8	;volatile
  3229                           
  3230                           ;lcd.c: 94: LCDbits.EN = 0;
  3231  0285  1288               	bcf	8,5	;volatile
  3232                           
  3233                           ;lcd.c: 95: _delay((unsigned long)((40)*(4000000/4000000.0)));
  3234  0286  300D               	movlw	13
  3235  0287  00F4               	movwf	??_dispLCD_instReg
  3236  0288                     u2027:
  3237  0288  0BF4               	decfsz	??_dispLCD_instReg,f
  3238  0289  2A88               	goto	u2027
  3239                           
  3240                           ;lcd.c: 96: LCDbits.EN = 1;
  3241  028A  1283               	bcf	3,5	;RP0=0, select bank0
  3242  028B  1303               	bcf	3,6	;RP1=0, select bank0
  3243  028C  1688               	bsf	8,5	;volatile
  3244  028D                     l1704:
  3245                           
  3246                           ;lcd.c: 97: };lcd.c: 99: LCDbits.RS = 0;
  3247  028D  1208               	bcf	8,4	;volatile
  3248                           
  3249                           ;lcd.c: 100: LCDbits.BUS = i & 0x0F;
  3250  028E  300F               	movlw	15
  3251  028F  0520               	andwf	dispLCD_instReg@i,w
  3252  0290  00F4               	movwf	??_dispLCD_instReg
  3253  0291  0808               	movf	8,w	;volatile
  3254  0292  0674               	xorwf	??_dispLCD_instReg,w
  3255  0293  39F0               	andlw	-16
  3256  0294  0674               	xorwf	??_dispLCD_instReg,w
  3257  0295  0088               	movwf	8	;volatile
  3258                           
  3259                           ;lcd.c: 101: LCDbits.EN = 0;
  3260  0296  1288               	bcf	8,5	;volatile
  3261                           
  3262                           ;lcd.c: 102: if( i == 0x01 || i == 0x02 )
  3263  0297  0320               	decf	dispLCD_instReg@i,w
  3264  0298  1903               	btfsc	3,2
  3265  0299  2A9E               	goto	l1714
  3266  029A  3002               	movlw	2
  3267  029B  0620               	xorwf	dispLCD_instReg@i,w
  3268  029C  1D03               	btfss	3,2
  3269  029D  2AA8               	goto	l1716
  3270  029E                     l1714:
  3271                           
  3272                           ;lcd.c: 103: _delay((unsigned long)((2)*(4000000/4000.0)));
  3273  029E  3003               	movlw	3
  3274  029F  00F5               	movwf	??_dispLCD_instReg+1
  3275  02A0  3097               	movlw	151
  3276  02A1  00F4               	movwf	??_dispLCD_instReg
  3277  02A2                     u2037:
  3278  02A2  0BF4               	decfsz	??_dispLCD_instReg,f
  3279  02A3  2AA2               	goto	u2037
  3280  02A4  0BF5               	decfsz	??_dispLCD_instReg+1,f
  3281  02A5  2AA2               	goto	u2037
  3282  02A6  2AA7               	nop2
  3283  02A7  2AAC               	goto	l1718
  3284  02A8                     l1716:
  3285                           
  3286                           ;lcd.c: 104: else;lcd.c: 105: _delay((unsigned long)((40)*(4000000/4000000.0)));
  3287  02A8  300D               	movlw	13
  3288  02A9  00F4               	movwf	??_dispLCD_instReg
  3289  02AA                     u2047:
  3290  02AA  0BF4               	decfsz	??_dispLCD_instReg,f
  3291  02AB  2AAA               	goto	u2047
  3292  02AC                     l1718:
  3293                           
  3294                           ;lcd.c: 106: LCDbits.EN = 1;
  3295  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  3296  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  3297  02AE  1688               	bsf	8,5	;volatile
  3298  02AF  0008               	return
  3299  02B0                     __end_of_dispLCD_instReg:
  3300                           
  3301                           	psect	text19
  3302  0567                     __ptext19:	
  3303 ;; *************** function _ADC_init *****************
  3304 ;; Defined at:
  3305 ;;		line 12 in file "adc.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 300/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         0       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0
  3322 ;;      Totals:         0       0       0       0       0
  3323 ;;Total ram usage:        0 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 2
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _ADC_init
  3335  0567                     _ADC_init:
  3336                           
  3337                           ;adc.c: 14: INTCONbits.GIE = 0;
  3338                           
  3339                           ;incstack = 0
  3340                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
  3341  0567  138B               	bcf	11,7	;volatile
  3342                           
  3343                           ;adc.c: 16: ANSELbits.ANS0 = 1;
  3344  0568  1683               	bsf	3,5	;RP0=1, select bank3
  3345  0569  1703               	bsf	3,6	;RP1=1, select bank3
  3346  056A  1408               	bsf	8,0	;volatile
  3347                           
  3348                           ;adc.c: 17: ADCON0bits.ADCS = 0x2;
  3349  056B  1283               	bcf	3,5	;RP0=0, select bank0
  3350  056C  1303               	bcf	3,6	;RP1=0, select bank0
  3351  056D  081F               	movf	31,w	;volatile
  3352  056E  393F               	andlw	-193
  3353  056F  3880               	iorlw	128
  3354  0570  009F               	movwf	31	;volatile
  3355                           
  3356                           ;adc.c: 18: ADCON1bits.VCFG0 = 0;
  3357  0571  1683               	bsf	3,5	;RP0=1, select bank1
  3358  0572  121F               	bcf	31,4	;volatile
  3359                           
  3360                           ;adc.c: 19: ADCON1bits.VCFG1 = 0;
  3361  0573  129F               	bcf	31,5	;volatile
  3362                           
  3363                           ;adc.c: 20: ADCON0bits.CHS = 0x0;
  3364  0574  30C3               	movlw	-61
  3365  0575  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0576  059F               	andwf	31,f	;volatile
  3367                           
  3368                           ;adc.c: 21: ADCON1bits.ADFM = 1;
  3369  0577  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0578  179F               	bsf	31,7	;volatile
  3371                           
  3372                           ;adc.c: 22: ADCON0bits.ADON = 1;
  3373  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3374  057A  141F               	bsf	31,0	;volatile
  3375                           
  3376                           ;adc.c: 24: INTCONbits.PEIE = 1;
  3377  057B  170B               	bsf	11,6	;volatile
  3378                           
  3379                           ;adc.c: 25: PIE1bits.ADIE = 1;
  3380  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3381  057D  170C               	bsf	12,6	;volatile
  3382                           
  3383                           ;adc.c: 26: INTCONbits.GIE = 1;
  3384  057E  178B               	bsf	11,7	;volatile
  3385                           
  3386                           ;adc.c: 27: ADCON0bits.GO = 1;
  3387  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0580  149F               	bsf	31,1	;volatile
  3389  0581  0008               	return
  3390  0582                     __end_of_ADC_init:
  3391                           
  3392                           	psect	text20
  3393  04EE                     __ptext20:	
  3394 ;; *************** function _isr *****************
  3395 ;; Defined at:
  3396 ;;		line 14 in file "interrupt.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;		None
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;		None
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0, pclath, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 300/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3410 ;;      Params:         0       0       0       0       0
  3411 ;;      Locals:         0       0       0       0       0
  3412 ;;      Temps:          2       0       0       0       0
  3413 ;;      Totals:         2       0       0       0       0
  3414 ;;Total ram usage:        2 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; Hardware stack levels required when called: 1
  3417 ;; This function calls:
  3418 ;;		_ADC_int
  3419 ;;		_T0_int
  3420 ;;		_T1_int
  3421 ;;		_T2_int
  3422 ;; This function is called by:
  3423 ;;		Interrupt level 1
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           
  3428                           ;psect for function _isr
  3429  04EE                     _isr:
  3430                           
  3431                           ;interrupt.c: 16: if( INTCONbits.T0IF )
  3432  04EE  1D0B               	btfss	11,2	;volatile
  3433  04EF  2CF6               	goto	i1l1628
  3434                           
  3435                           ;interrupt.c: 17: {;interrupt.c: 18: INTCONbits.T0IF = 0;
  3436  04F0  110B               	bcf	11,2	;volatile
  3437                           
  3438                           ;interrupt.c: 19: T0_int();
  3439  04F1  120A  118A  25F7  120A  118A  	fcall	_T0_int
  3440  04F6                     i1l1628:
  3441                           
  3442                           ;interrupt.c: 20: };interrupt.c: 21: if( PIR1bits.TMR1IF )
  3443  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  3444  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  3445  04F8  1C0C               	btfss	12,0	;volatile
  3446  04F9  2D00               	goto	i1l1634
  3447                           
  3448                           ;interrupt.c: 22: {;interrupt.c: 23: PIR1bits.TMR1IF = 0;
  3449  04FA  100C               	bcf	12,0	;volatile
  3450                           
  3451                           ;interrupt.c: 24: T1_int();
  3452  04FB  120A  118A  25E8  120A  118A  	fcall	_T1_int
  3453  0500                     i1l1634:
  3454                           
  3455                           ;interrupt.c: 25: };interrupt.c: 26: if( PIR1bits.TMR2IF )
  3456  0500  1C8C               	btfss	12,1	;volatile
  3457  0501  2D08               	goto	i1l1640
  3458                           
  3459                           ;interrupt.c: 27: {;interrupt.c: 28: PIR1bits.TMR2IF = 0;
  3460  0502  108C               	bcf	12,1	;volatile
  3461                           
  3462                           ;interrupt.c: 29: T2_int();
  3463  0503  120A  118A  2612  120A  118A  	fcall	_T2_int
  3464  0508                     i1l1640:
  3465                           
  3466                           ;interrupt.c: 30: };interrupt.c: 31: if( PIR1bits.ADIF )
  3467  0508  1F0C               	btfss	12,6	;volatile
  3468  0509  2D10               	goto	i1l69
  3469                           
  3470                           ;interrupt.c: 32: {;interrupt.c: 33: PIR1bits.ADIF = 0;
  3471  050A  130C               	bcf	12,6	;volatile
  3472                           
  3473                           ;interrupt.c: 34: ADC_int();
  3474  050B  120A  118A  2582  120A  118A  	fcall	_ADC_int
  3475  0510                     i1l69:
  3476  0510  0873               	movf	??_isr+1,w
  3477  0511  008A               	movwf	10
  3478  0512  0E72               	swapf	??_isr,w
  3479  0513  0083               	movwf	3
  3480  0514  0EFE               	swapf	126,f
  3481  0515  0E7E               	swapf	126,w
  3482  0516  0009               	retfie
  3483  0517                     __end_of_isr:
  3484                           
  3485                           	psect	intentry
  3486  0004                     __pintentry:	
  3487                           ;incstack = 0
  3488                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3489                           
  3490  0004                     interrupt_function:
  3491  007E                     saved_w	set	btemp
  3492  0004  00FE               	movwf	btemp
  3493  0005  0E03               	swapf	3,w
  3494  0006  00F2               	movwf	??_isr
  3495  0007  080A               	movf	10,w
  3496  0008  00F3               	movwf	??_isr+1
  3497  0009  120A  118A  2CEE   	ljmp	_isr
  3498                           
  3499                           	psect	text21
  3500  0612                     __ptext21:	
  3501 ;; *************** function _T2_int *****************
  3502 ;; Defined at:
  3503 ;;		line 132 in file "timers.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;		None
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, status,2, status,0
  3512 ;; Tracked objects:
  3513 ;;		On entry : 300/0
  3514 ;;		On exit  : 300/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3517 ;;      Params:         0       0       0       0       0
  3518 ;;      Locals:         0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0
  3520 ;;      Totals:         0       0       0       0       0
  3521 ;;Total ram usage:        0 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_isr
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function _T2_int
  3532  0612                     _T2_int:
  3533                           
  3534                           ;timers.c: 134: if( T2count )
  3535                           
  3536                           ;incstack = 0
  3537                           ; Regs used in _T2_int: [wreg+status,2+status,0]
  3538  0612  0863               	movf	_T2count,w
  3539  0613  0464               	iorwf	_T2count+1,w
  3540  0614  1903               	btfsc	3,2
  3541  0615  0008               	return
  3542                           
  3543                           ;timers.c: 135: {;timers.c: 136: --T2count;
  3544  0616  3001               	movlw	1
  3545  0617  02E3               	subwf	_T2count,f
  3546  0618  3000               	movlw	0
  3547  0619  1C03               	skipc
  3548  061A  03E4               	decf	_T2count+1,f
  3549  061B  02E4               	subwf	_T2count+1,f
  3550  061C  0008               	return
  3551  061D                     __end_of_T2_int:
  3552                           
  3553                           	psect	text22
  3554  05E8                     __ptext22:	
  3555 ;; *************** function _T1_int *****************
  3556 ;; Defined at:
  3557 ;;		line 80 in file "timers.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;		None
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;		None
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  1    wreg      void 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0
  3566 ;; Tracked objects:
  3567 ;;		On entry : 300/0
  3568 ;;		On exit  : 300/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3571 ;;      Params:         0       0       0       0       0
  3572 ;;      Locals:         0       0       0       0       0
  3573 ;;      Temps:          0       0       0       0       0
  3574 ;;      Totals:         0       0       0       0       0
  3575 ;;Total ram usage:        0 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_isr
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           
  3585                           ;psect for function _T1_int
  3586  05E8                     _T1_int:
  3587                           
  3588                           ;timers.c: 82: TMR1H = ((0xFFFF-1000+1) >> 8) & 0x00FF;
  3589                           
  3590                           ;incstack = 0
  3591                           ; Regs used in _T1_int: [wreg+status,2+status,0]
  3592  05E8  30FC               	movlw	252
  3593  05E9  008F               	movwf	15	;volatile
  3594                           
  3595                           ;timers.c: 83: TMR1L = ((0xFFFF-1000+1) >> 0) & 0x00FF;
  3596  05EA  3018               	movlw	24
  3597  05EB  008E               	movwf	14	;volatile
  3598                           
  3599                           ;timers.c: 84: if( T1count )
  3600  05EC  0876               	movf	_T1count,w
  3601  05ED  0477               	iorwf	_T1count+1,w
  3602  05EE  1903               	btfsc	3,2
  3603  05EF  0008               	return
  3604                           
  3605                           ;timers.c: 85: {;timers.c: 86: --T1count;
  3606  05F0  3001               	movlw	1
  3607  05F1  02F6               	subwf	_T1count,f
  3608  05F2  3000               	movlw	0
  3609  05F3  1C03               	skipc
  3610  05F4  03F7               	decf	_T1count+1,f
  3611  05F5  02F7               	subwf	_T1count+1,f
  3612  05F6  0008               	return
  3613  05F7                     __end_of_T1_int:
  3614                           
  3615                           	psect	text23
  3616  05F7                     __ptext23:	
  3617 ;; *************** function _T0_int *****************
  3618 ;; Defined at:
  3619 ;;		line 33 in file "timers.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 300/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3633 ;;      Params:         0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_isr
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function _T0_int
  3648  05F7                     _T0_int:
  3649                           
  3650                           ;timers.c: 35: TMR0 = (256-250);
  3651                           
  3652                           ;incstack = 0
  3653                           ; Regs used in _T0_int: [wreg+status,2+status,0]
  3654  05F7  3006               	movlw	6
  3655  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3656  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3657  05FA  0081               	movwf	1	;volatile
  3658                           
  3659                           ;timers.c: 36: if( T0count )
  3660  05FB  0878               	movf	_T0count,w
  3661  05FC  0479               	iorwf	_T0count+1,w
  3662  05FD  1903               	btfsc	3,2
  3663  05FE  0008               	return
  3664                           
  3665                           ;timers.c: 37: {;timers.c: 38: --T0count;
  3666  05FF  3001               	movlw	1
  3667  0600  02F8               	subwf	_T0count,f
  3668  0601  3000               	movlw	0
  3669  0602  1C03               	skipc
  3670  0603  03F9               	decf	_T0count+1,f
  3671  0604  02F9               	subwf	_T0count+1,f
  3672  0605  0008               	return
  3673  0606                     __end_of_T0_int:
  3674                           
  3675                           	psect	text24
  3676  0582                     __ptext24:	
  3677 ;; *************** function _ADC_int *****************
  3678 ;; Defined at:
  3679 ;;		line 31 in file "adc.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg
  3688 ;; Tracked objects:
  3689 ;;		On entry : 300/0
  3690 ;;		On exit  : 300/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0
  3695 ;;      Temps:          2       0       0       0       0
  3696 ;;      Totals:         2       0       0       0       0
  3697 ;;Total ram usage:        2 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_isr
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _ADC_int
  3708  0582                     _ADC_int:
  3709                           
  3710                           ;adc.c: 33: ADC_value = ADRESH;
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _ADC_int: [wreg]
  3714  0582  081E               	movf	30,w	;volatile
  3715  0583  00F0               	movwf	??_ADC_int
  3716  0584  01F1               	clrf	??_ADC_int+1
  3717  0585  0870               	movf	??_ADC_int,w
  3718  0586  00E5               	movwf	_ADC_value
  3719  0587  0871               	movf	??_ADC_int+1,w
  3720  0588  00E6               	movwf	_ADC_value+1
  3721                           
  3722                           ;adc.c: 34: ADC_value <<= 8;
  3723  0589  3008               	movlw	8
  3724  058A                     u126_25:
  3725  058A  1003               	clrc
  3726  058B  0DE5               	rlf	_ADC_value,f
  3727  058C  0DE6               	rlf	_ADC_value+1,f
  3728  058D  3EFF               	addlw	-1
  3729  058E  1D03               	skipz
  3730  058F  2D8A               	goto	u126_25
  3731                           
  3732                           ;adc.c: 35: ADC_value += ADRESL;
  3733  0590  1683               	bsf	3,5	;RP0=1, select bank1
  3734  0591  081E               	movf	30,w	;volatile
  3735  0592  00F0               	movwf	??_ADC_int
  3736  0593  01F1               	clrf	??_ADC_int+1
  3737  0594  0870               	movf	??_ADC_int,w
  3738  0595  1283               	bcf	3,5	;RP0=0, select bank0
  3739  0596  07E5               	addwf	_ADC_value,f
  3740  0597  1803               	skipnc
  3741  0598  0AE6               	incf	_ADC_value+1,f
  3742  0599  0871               	movf	??_ADC_int+1,w
  3743  059A  07E6               	addwf	_ADC_value+1,f
  3744                           
  3745                           ;adc.c: 36: ADCON0bits.GO = 1;
  3746  059B  149F               	bsf	31,1	;volatile
  3747  059C  0008               	return
  3748  059D                     __end_of_ADC_int:
  3749  0008                     
  3750                           	psect	functab
  3751  0027                     __pfunctab:
  3752  0027                     __fptable:
  3753  0027                     fptable:
  3754  0027  00FF               	movwf	(btemp+1)& (0+127)
  3755  0028  3000               	movlw	high fptable
  3756  0029  008A               	movwf	10
  3757  002A  087F               	movf	(btemp+1)& (0+127),w
  3758  002B  0782               	addwf	2,f
  3759  002C                     fpbase:
  3760  002C  282C               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3761  002D                     fp__dispLCD_clr:
  3762  002D                     entry__dispLCD_clr:
  3763  002D  120A  118A  2E24   	ljmp	_dispLCD_clr
  3764  0030                     fp__dispLCD_init:
  3765  0030  120A  118A  2BE5   	ljmp	_dispLCD_init
  3766  0033                     fp__dispLCD_num:
  3767  0033  120A  118A  2839   	ljmp	_dispLCD_num
  3768  0036                     fp__dispLCDstr:
  3769  0036  120A  118A  2C60   	ljmp	_dispLCDstr
  3770  0039                     __end_of__fptable:
  3771  007E                     btemp	set	126	;btemp
  3772  007E                     wtemp0	set	126
  3773                           
  3774                           	psect	config
  3775                           
  3776                           ;Config register CONFIG1 @ 0x2007
  3777                           ;	Oscillator Selection bits
  3778                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3779                           ;	Watchdog Timer Enable bit
  3780                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3781                           ;	Power-up Timer Enable bit
  3782                           ;	PWRTE = OFF, PWRT disabled
  3783                           ;	RE3/MCLR pin function select bit
  3784                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3785                           ;	Code Protection bit
  3786                           ;	CP = OFF, Program memory code protection is disabled
  3787                           ;	Data Code Protection bit
  3788                           ;	CPD = OFF, Data memory code protection is disabled
  3789                           ;	Brown Out Reset Selection bits
  3790                           ;	BOREN = OFF, BOR disabled
  3791                           ;	Internal External Switchover bit
  3792                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3793                           ;	Fail-Safe Clock Monitor Enabled bit
  3794                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3795                           ;	Low Voltage Programming Enable bit
  3796                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3797                           ;	In-Circuit Debugger Mode bit
  3798                           ;	DEBUG = 0x1, unprogrammed default
  3799  2007                     	org	8199
  3800  2007  20D4               	dw	8404
  3801                           
  3802                           ;Config register CONFIG2 @ 0x2008
  3803                           ;	Brown-out Reset Selection bit
  3804                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3805                           ;	Flash Program Memory Self Write Enable bits
  3806                           ;	WRT = OFF, Write protection off
  3807  2008                     	org	8200
  3808  2008  3FFF               	dw	16383

Data Sizes:
    Strings     34
    Constant    0
    Data        7
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     60      71
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S366$2$2	PTR const unsigned char  size(1) Largest target is 0

    S366$1$0	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    S366$B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    IHM.B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    S366$B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    IHM.B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    S366$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    IHM.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S366$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    S366$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    S366$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    S366$init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    IHM.init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_delay
    _fahrenheit->___lmul
    _celsius->___lwdiv
    ___aldiv->___lmul
    _dispLCDstr->_dispLCD_dataReg
    _dispLCD_num->_dispLCD_dataReg
    _dispLCD_lincol->_dispLCD_instReg
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg
    _dispLCD_clr->_dispLCD_instReg

Critical Paths under _isr in COMMON

    _isr->_ADC_int

Critical Paths under _main in BANK0

    _main->_dispLCD_num
    _reaumur->___aldiv
    _rankine->_celsius
    _kelvin->_celsius
    _fahrenheit->___aldiv
    _celsius->___lwdiv
    ___lmul->_celsius
    ___aldiv->___lmul
    _dispLCDstr->_dispLCD_lincol
    _dispLCD_num->_fahrenheit
    _dispLCD_num->_reaumur
    _dispLCD_lincol->_dispLCD_instReg
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg
    _dispLCD_clr->_dispLCD_instReg

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10400
                                             58 BANK0      2     2      0
                           _ADC_init
                            _celsius
                              _delay
                        _dispLCD_clr
                       _dispLCD_init *
                        _dispLCD_num *
                         _dispLCDstr *
                         _fahrenheit
                             _kelvin
                            _rankine
                            _reaumur
 ---------------------------------------------------------------------------------
 (1) _reaumur                                              8     4      4    1025
                                             38 BANK0      8     4      4
                            ___aldiv
                            _celsius
 ---------------------------------------------------------------------------------
 (1) _rankine                                              4     0      4     421
                                             11 BANK0      4     0      4
                            _celsius
 ---------------------------------------------------------------------------------
 (1) _kelvin                                               8     4      4     421
                                             11 BANK0      8     4      4
                            _celsius
 ---------------------------------------------------------------------------------
 (1) _fahrenheit                                           8     4      4    1269
                                             38 BANK0      8     4      4
                            ___aldiv
                             ___lmul
                            _celsius
 ---------------------------------------------------------------------------------
 (2) _celsius                                              4     0      4     421
                                              7 BANK0      4     0      4
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              5 COMMON     1     1      0
                                             11 BANK0     12     4      8
                            _celsius (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                             23 BANK0     15     7      8
                             ___lmul (ARG)
                            _celsius (ARG)
 ---------------------------------------------------------------------------------
 (1) _dispLCDstr                                           2     1      1     940
                                              4 BANK0      2     1      1
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _dispLCD_num                                         12     7      5    4439
                                             46 BANK0     12     7      5
                            ___awdiv
                            ___awmod
                            _celsius (ARG)
                    _dispLCD_dataReg
                     _dispLCD_lincol
                         _fahrenheit (ARG)
                             _kelvin (ARG)
                            _rankine (ARG)
                            _reaumur (ARG)
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     670
                                              1 BANK0      3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     732
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     484
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_clr                                          0     0      0     248
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     248
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              2 COMMON     2     2      0
                            _ADC_int
                             _T0_int
                             _T1_int
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T1_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T0_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_int                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _celsius
     ___lwdiv
   _delay
   _dispLCD_clr
     _dispLCD_instReg
   _dispLCD_init *
     _delay
     _dispLCD_instReg
   _dispLCD_num *
     ___awdiv
     ___awmod
     _celsius (ARG)
     _dispLCD_dataReg (ARG)
     _dispLCD_lincol (ARG)
       _dispLCD_instReg
     _fahrenheit (ARG)
       ___aldiv
         ___lmul (ARG)
           _celsius (ARG)
         _celsius (ARG)
       ___lmul
       _celsius
     _kelvin (ARG)
       _celsius
     _rankine (ARG)
       _celsius
     _reaumur (ARG)
       ___aldiv
       _celsius
   _dispLCDstr *
     _dispLCD_dataReg
     _dispLCD_lincol
   _fahrenheit *
   _kelvin *
   _rankine *
   _reaumur *

 _isr (ROOT)
   _ADC_int
   _T0_int
   _T1_int
   _T2_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3C      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      51      12        0.0%
ABS                  0      0      51       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 26 01:05:45 2021

                       pc 0002              ___awdiv@sign 0025   __end_of_dispLCD_dataReg 04EE  
                      fsr 0004                       l126 00B8                       l409 01C9  
                     _IHM 005C                       u905 04CA                       u945 03C6  
                     u955 03CE                       _isr 04EE                       fsr0 0004  
                     indf 0000   __end_of_dispLCD_instReg 02B0              ___awmod@sign 0025  
         __end_of_ADC_int 059D                      l1404 01EA                      l1422 023D  
                    l1414 0222                      l1406 01FA                      l1418 022F  
                    l1374 03AE                      l1704 028D                      l1714 029E  
                    l1810 0365                      l1378 03C4                      l1730 042C  
                    l1716 02A8                      l1396 01DA                      l1732 043A  
                    l1718 02AC                      l1822 0372                      l1814 036C  
                    l1742 045B                      l1824 0380                      l1832 0399  
                    l1690 026D                      l1754 05B3                      l1914 009B  
                    l1738 0450                      l1772 02C5                      l1836 03A1  
                    l1828 038E                      l1916 008D                      l1908 005B  
                    l1686 025F                      l1790 02F1                      l1782 02CD  
                    l1766 02BA                      l1918 00AD                      l1688 0269  
                    l1784 02DB                      l1936 0107                      l1794 02FC  
                    l1884 0482                      l1798 0304                      l1896 0049  
                    l1888 0467                      ?_isr 0070                      STR_1 052E  
                    STR_2 051D                      u1005 01EE                      u1025 01FC  
                    u1035 0211                      u1045 0223                      u2007 0263  
                    u2017 026B                      u2027 0288                      u2037 02A2  
                    u2047 02AA                      u1515 027B                      u1705 02F2  
                    u1625 05DB                      u1475 024D                      u1555 042F  
                    u1820 0347                      u1821 0348                      u1822 034D  
                    u1830 0553                      u1575 043B                      u1823 034E  
                    u1831 0554                      u1832 0559                      u1665 02D0  
                    u1585 0447                      u1833 055A                      u1915 0064  
                    u1595 0451                      u1685 02DC                      u1765 0375  
                    u1925 00AB                      u1845 04A9                      u1870 003D  
                    u1695 02E8                      u1880 003E                      u1785 0386  
                    u1795 038F                      u1955 00F9                      u1977 04D7  
                    u1987 04E8                      u1997 05BB                      i1l69 0510  
                    _TMR0 0001                      _main 00FC                      btemp 007E  
                    start 000C          __end_of_ADC_init 0582                     ??_isr 0072  
         __end_of___aldiv 0246                     ?_main 0070           __end_of___awdiv 0309  
         __end_of___awmod 03A6           ___awdiv@divisor 0020           __end_of___lwdiv 0460  
         ___awdiv@counter 0024                     _TMR1H 000F                     _TMR1L 000E  
     ___lmul@multiplicand 002F           __end_of_celsius 05B3                     _delay 05B3  
                   fpbase 002C           __end_of_rankine 0612           __end_of_reaumur 04C5  
                   pclath 000A                     status 0003                     wtemp0 007E  
    __end_of_dispLCD_init 0424           __initialization 000F              __end_of_main 01B9  
        ?_dispLCD_dataReg 0070                 ??_ADC_int 0070                    ??_main 005A  
    __size_of_dispLCD_clr 0005      __size_of_dispLCD_num 00C3          ?_dispLCD_instReg 0070  
                  ?_delay 0074                    _ADRESH 001E                    _ADRESL 009E  
        ___awdiv@dividend 0022                    i1l1640 0508                    i1l1634 0500  
                  i1l1628 04F6                    u126_25 058A                    _T0_int 05F7  
                  _T1_int 05E8                    _T2_int 0612          __end_of__fptable 0039  
                  ___lmul 03A6                 ??___aldiv 003F                 ??___awdiv 0074  
               ??___awmod 0074                 ??___lwdiv 0074                    _kelvin 053F  
                  delay@t 0074          ___awdiv@quotient 0026           ___awmod@divisor 0020  
               ??_celsius 0075           ___awmod@counter 0024         entry__dispLCD_clr 002D  
                  fptable 0027                    fptotal 0008                 ??_rankine 0075  
               ??_reaumur 004A                    saved_w 007E                 ?_ADC_init 0070  
 __end_of__initialization 0023   __size_of_dispLCD_lincol 0011            __pcstackCOMMON 0070  
            __pidataBANK0 061D             __end_of_delay 05C6                ??_ADC_init 0074  
                 ??_delay 0020                __pbssBANK0 0063     __size_of_dispLCD_init 003F  
                 ?_T0_int 0070                   ?_T1_int 0070                   ?_T2_int 0070  
              _fahrenheit 0309                __pmaintext 00FC                   ?___lmul 002B  
              _dispLCD_B0 0000                _dispLCD_B1 0000                __pintentry 0004  
              _dispLCDstr 0460                   ?_kelvin 002B            ___lmul@product 0033  
                 _ADC_int 0582                   _LCDbits 0008              _dispLCD_init 03E5  
                 _T0count 0078                   _T1count 0076                   _T2count 0063  
              __stringtab 0517           __size_of_T0_int 000F           __size_of_T1_int 000F  
         __size_of_T2_int 000B                 _ADC_value 0065                   ___aldiv 01B9  
                 ___awdiv 02B0           __size_of___lmul 003F                   ___awmod 035B  
                 ___lwdiv 0424           __size_of_kelvin 0028                 _ANSELbits 0188  
                 _celsius 059D                   _dispLCD 0000                   __ptext1 0493  
                 __ptext2 0606                   __ptext3 053F                   __ptext4 0309  
                 __ptext5 059D                   __ptext6 0424                   __ptext7 03A6  
                 __ptext8 01B9                   __ptext9 0460              __size_of_isr 0029  
        ___awmod@dividend 0022                   _rankine 0606          ___aldiv@dividend 003B  
                 _reaumur 0493      end_of_initialization 0023            dispLCD_num@col 004F  
          dispLCD_num@div 0058            dispLCD_num@lin 004E            dispLCD_num@tam 0052  
          dispLCD_num@num 0050            _dispLCD_lincol 05D7               ?_fahrenheit 0046  
        ___aldiv@quotient 0042               ?_dispLCDstr 0024             ??_dispLCD_clr 0076  
           ??_dispLCD_num 0053                 _TRISDbits 0088  __size_of_dispLCD_dataReg 0029  
       __size_of_ADC_init 001B    __end_of_dispLCD_lincol 05E8  __size_of_dispLCD_instReg 006A  
          __end_of_T0_int 0606            __end_of_T1_int 05F7            __end_of_T2_int 061D  
          __end_of___lmul 03E5            __end_of_kelvin 0567       start_initialization 000F  
     __end_of_dispLCD_clr 0629       __end_of_dispLCD_num 00FC               __end_of_isr 0517  
     __size_of_fahrenheit 0052       __size_of_dispLCDstr 0033           ?_dispLCD_lincol 0021  
                ??_T0_int 0070                  ??_T1_int 0070                  ??_T2_int 0070  
       dispLCD_lincol@col 0021         dispLCD_lincol@lin 0023                  ??___lmul 0075  
              init_fetch0 05C6               __pdataBANK0 005C                  ??_kelvin 002F  
                ?_ADC_int 0070               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of__fptable 0012         ??_dispLCD_dataReg 0074  
        ___lwdiv@dividend 0022         ??_dispLCD_instReg 0074                 __pfunctab 0027  
                ?___aldiv 0037                  ?___awdiv 0020                  ?___awmod 0020  
                ?___lwdiv 0020               _dispLCD_clr 0624               _dispLCD_num 0039  
                ?_celsius 0027                 __pstrings 0517                  ?_rankine 002B  
                ?_reaumur 0046                  _ADC_init 0567          ___lwdiv@quotient 0025  
          __size_of_delay 0013           ___aldiv@divisor 0037         interrupt_function 0004  
         ___aldiv@counter 0040                  _PIE1bits 008C              ??_fahrenheit 004A  
                _PIR1bits 000C              ??_dispLCDstr 0025          dispLCD_dataReg@d 0075  
           dispLCDstr@str 0024                _ADCON0bits 001F               __stringbase 051C  
              _ADCON1bits 009F          __size_of_ADC_int 001B        __end_of_fahrenheit 035B  
       ___lmul@multiplier 002B        __end_of_dispLCDstr 0493          dispLCD_instReg@i 0020  
        __size_of___aldiv 008D          __size_of___awdiv 0059          __size_of___awmod 004B  
        __size_of___lwdiv 003C           fp__dispLCD_init 0030          dispLCD_num@sinal 0057  
      __end_of__stringtab 051D          __size_of_celsius 0016                  __fptable 0027  
        ??_dispLCD_lincol 0022           ___lwdiv@divisor 0020          __size_of_rankine 000C  
        __size_of_reaumur 0032           ___lwdiv@counter 0024                  __ptext10 0039  
                __ptext11 05D7                  __ptext20 04EE                  __ptext12 04C5  
                __ptext21 0612                  __ptext13 035B                  __ptext22 05E8  
                __ptext14 02B0                  __ptext23 05F7                  __ptext15 03E5  
                __ptext24 0582                  __ptext16 05B3                  __ptext17 0624  
                __ptext18 0246                  __ptext19 0567             __size_of_main 00BD  
              _INTCONbits 000B             ?_dispLCD_init 0070           _dispLCD_dataReg 04C5  
                init_ram0 05CA            fp__dispLCD_clr 002D            fp__dispLCD_num 0033  
         dispLCD_num@size 0056           _dispLCD_instReg 0246                  intlevel1 0027  
               stringcode 0517              ?_dispLCD_clr 0070              ?_dispLCD_num 004E  
           fp__dispLCDstr 0036            ??_dispLCD_init 0076                  stringdir 0517  
                stringtab 0517              ___aldiv@sign 0041  
