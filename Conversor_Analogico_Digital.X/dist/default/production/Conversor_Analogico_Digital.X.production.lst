

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jun 24 16:41:23 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D  ;; Function _dispLCD is unused but had its address taken
  1180                           global _dispLCD
  1181                           _dispLCD equ 0
  1182  0000  ;; Function _dispLCD_clr is unused but had its address taken
  1183                           global _dispLCD_clr
  1184                           _dispLCD_clr equ 0
  1185  0000  ;; Function _dispLCD_B0 is unused but had its address taken
  1186                           global _dispLCD_B0
  1187                           _dispLCD_B0 equ 0
  1188  0000  ;; Function _dispLCD_B1 is unused but had its address taken
  1189                           global _dispLCD_B1
  1190                           _dispLCD_B1 equ 0
  1191  0000                     	FNCALL	_main,_ADC_init
  1192                           	FNCALL	_main,_celsius
  1193                           	FNCALL	_main,_dispLCD_init
  1194                           	FNCALL	_main,_dispLCD_num
  1195                           	FNCALL	_main,_dispLCDstr
  1196                           	FNCALL	_main,_fahrenheit
  1197                           	FNCALL	_main,_kelvin
  1198                           	FNCALL	_kelvin,_celsius
  1199                           	FNCALL	_fahrenheit,___aldiv
  1200                           	FNCALL	_fahrenheit,___lmul
  1201                           	FNCALL	_fahrenheit,_celsius
  1202                           	FNCALL	_celsius,___lwdiv
  1203                           	FNCALL	_dispLCDstr,_dispLCD_dataReg
  1204                           	FNCALL	_dispLCDstr,_dispLCD_lincol
  1205                           	FNCALL	_dispLCD_num,___awdiv
  1206                           	FNCALL	_dispLCD_num,___awmod
  1207                           	FNCALL	_dispLCD_num,_dispLCD_dataReg
  1208                           	FNCALL	_dispLCD_num,_dispLCD_lincol
  1209                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  1210                           	FNCALL	_dispLCD_init,_delay
  1211                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  1212                           	FNROOT	_main
  1213                           	FNCALL	_isr,_ADC_int
  1214                           	FNCALL	_isr,_T0_int
  1215                           	FNCALL	_isr,_T1_int
  1216                           	FNCALL	_isr,_T2_int
  1217                           	FNCALL	intlevel1,_isr
  1218                           	global	intlevel1
  1219                           	FNROOT	intlevel1
  1220                           	global	_IHM
  1221                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1222                           global __pidataBANK0
  1223                           __pidataBANK0:
  1224  0686                     	file	"./ihm.h"
  1225                           	line	15
  1226                           
  1227                           ;initializer for _IHM
  1228                           	retlw	low((fp__dispLCD_init-fpbase))
  1229  0686  3401               	retlw	low((fp__dispLCDstr-fpbase))
  1230  0687  3407               	retlw	low(0)
  1231  0688  3400               	retlw	low((fp__dispLCD_num-fpbase))
  1232  0689  3404               	retlw	low(0)
  1233  068A  3400               	retlw	low(0)
  1234  068B  3400               	retlw	low(0)
  1235  068C  3400               	global	_T1count
  1236                           	global	_T0count
  1237                           	global	_T2count
  1238                           	global	_ADC_value
  1239                           	global	_T2CONbits
  1240                           _T2CONbits	set	0x12
  1241  0012                     	global	_TMR2
  1242                           _TMR2	set	0x11
  1243  0011                     	global	_TMR1L
  1244                           _TMR1L	set	0xE
  1245  000E                     	global	_TMR1H
  1246                           _TMR1H	set	0xF
  1247  000F                     	global	_T1CONbits
  1248                           _T1CONbits	set	0x10
  1249  0010                     	global	_TMR0
  1250                           _TMR0	set	0x1
  1251  0001                     	global	_LCDbits
  1252                           _LCDbits	set	8
  1253  0008                     	global	_PIR1bits
  1254                           _PIR1bits	set	0xC
  1255  000C                     	global	_ADRESH
  1256                           _ADRESH	set	0x1E
  1257  001E                     	global	_ADCON0bits
  1258                           _ADCON0bits	set	0x1F
  1259  001F                     	global	_INTCONbits
  1260                           _INTCONbits	set	0xB
  1261  000B                     	global	_PR2
  1262                           _PR2	set	0x92
  1263  0092                     	global	_OPTION_REGbits
  1264                           _OPTION_REGbits	set	0x81
  1265  0081                     	global	_TRISDbits
  1266                           _TRISDbits	set	0x88
  1267  0088                     	global	_ADRESL
  1268                           _ADRESL	set	0x9E
  1269  009E                     	global	_PIE1bits
  1270                           _PIE1bits	set	0x8C
  1271  008C                     	global	_ADCON1bits
  1272                           _ADCON1bits	set	0x9F
  1273  009F                     	global	_ANSELbits
  1274                           _ANSELbits	set	0x188
  1275  0188                     psect	strings,class=STRING,delta=2,noexec
  1276                           global __pstrings
  1277                           __pstrings:
  1278  0612                     stringtab:
  1279  0612                     	global    __stringtab
  1280                           __stringtab:
  1281  0612                     ;	String table - string pointers are 1 byte each
  1282                           stringcode:stringdir:
  1283  0612                     movlw high(stringdir)
      + 0612                     stringdir:	
  1284  0612  3006               movwf pclath
  1285  0613  008A               movf fsr,w
  1286  0614  0804               incf fsr
  1287  0615  0A84               	addwf pc
  1288  0616  0782               	global __stringbase
  1289                           __stringbase:
  1290  0617                     	retlw	0
  1291  0617  3400               psect	strings
  1292                           	global    __end_of__stringtab
  1293                           __end_of__stringtab:
  1294  0618                     	
  1295                           STR_1:	
  1296  0618                     	retlw	67	;'C'
  1297  0618  3443               	retlw	58	;':'
  1298  0619  343A               	retlw	32	;' '
  1299  061A  3420               	retlw	32	;' '
  1300  061B  3420               	retlw	32	;' '
  1301  061C  3420               	retlw	70	;'F'
  1302  061D  3446               	retlw	58	;':'
  1303  061E  343A               	retlw	32	;' '
  1304  061F  3420               	retlw	32	;' '
  1305  0620  3420               	retlw	32	;' '
  1306  0621  3420               	retlw	75	;'K'
  1307  0622  344B               	retlw	58	;':'
  1308  0623  343A               	retlw	32	;' '
  1309  0624  3420               	retlw	32	;' '
  1310  0625  3420               	retlw	32	;' '
  1311  0626  3420               	retlw	0
  1312  0627  3400               psect	strings
  1313                           ; #config settings
  1314                           global __CFG_FOSC$INTRC_NOCLKOUT
  1315                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1316  0000                     global __CFG_WDTE$OFF
  1317                           __CFG_WDTE$OFF equ 0x0
  1318  0000                     global __CFG_PWRTE$OFF
  1319                           __CFG_PWRTE$OFF equ 0x0
  1320  0000                     global __CFG_MCLRE$OFF
  1321                           __CFG_MCLRE$OFF equ 0x0
  1322  0000                     global __CFG_CP$OFF
  1323                           __CFG_CP$OFF equ 0x0
  1324  0000                     global __CFG_CPD$OFF
  1325                           __CFG_CPD$OFF equ 0x0
  1326  0000                     global __CFG_BOREN$OFF
  1327                           __CFG_BOREN$OFF equ 0x0
  1328  0000                     global __CFG_IESO$OFF
  1329                           __CFG_IESO$OFF equ 0x0
  1330  0000                     global __CFG_FCMEN$OFF
  1331                           __CFG_FCMEN$OFF equ 0x0
  1332  0000                     global __CFG_LVP$OFF
  1333                           __CFG_LVP$OFF equ 0x0
  1334  0000                     global __CFG_BOR4V$BOR40V
  1335                           __CFG_BOR4V$BOR40V equ 0x0
  1336  0000                     global __CFG_WRT$OFF
  1337                           __CFG_WRT$OFF equ 0x0
  1338  0000                     	file	"C:\Users\21193634\AppData\Local\Temp\s3js."
  1339                           	line	#
  1340                           psect cinit,class=CODE,delta=2
  1341                           global start_initialization
  1342                           start_initialization:
  1343  000F                     
  1344                           global __initialization
  1345                           __initialization:
  1346  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1347                           global __pbssCOMMON
  1348                           __pbssCOMMON:
  1349  0076                     _T1count:
  1350  0076                            ds      2
  1351  0076                     
  1352                           _T0count:
  1353  0078                            ds      2
  1354  0078                     
  1355                           psect	bssBANK0,class=BANK0,space=1,noexec
  1356                           global __pbssBANK0
  1357                           __pbssBANK0:
  1358  0063                     _T2count:
  1359  0063                            ds      2
  1360  0063                     
  1361                           _ADC_value:
  1362  0065                            ds      2
  1363  0065                     
  1364                           psect	dataBANK0,class=BANK0,space=1,noexec
  1365                           global __pdataBANK0
  1366                           __pdataBANK0:
  1367  005C                     	file	"./ihm.h"
  1368                           	line	15
  1369                           _IHM:
  1370  005C                            ds      7
  1371  005C                     
  1372                           	file	"C:\Users\21193634\AppData\Local\Temp\s3js."
  1373                           	line	#
  1374                           global btemp
  1375                           psect inittext,class=CODE,delta=2
  1376                           global init_fetch0,btemp
  1377                           ;	Called with low address in FSR and high address in W
  1378                           init_fetch0:
  1379  0651                     	movf btemp,w
  1380  0651  087E               	movwf pclath
  1381  0652  008A               	movf btemp+1,w
  1382  0653  087F               	movwf pc
  1383  0654  0082               global init_ram0
  1384                           ;Called with:
  1385                           ;	high address of idata address in btemp 
  1386                           ;	low address of idata address in btemp+1 
  1387                           ;	low address of data in FSR
  1388                           ;	high address + 1 of data in btemp-1
  1389                           init_ram0:
  1390  0655                     	fcall init_fetch0
  1391  0655  120A  118A  2651  120A  118A  	movwf indf,f
  1392  065A  0080               	incf fsr,f
  1393  065B  0A84               	movf fsr,w
  1394  065C  0804               	xorwf btemp-1,w
  1395  065D  067D               	btfsc status,2
  1396  065E  1903               	retlw 0
  1397  065F  3400               	incf btemp+1,f
  1398  0660  0AFF               	btfsc status,2
  1399  0661  1903               	incf btemp,f
  1400  0662  0AFE               	goto init_ram0
  1401  0663  2E55               ; Initialize objects allocated to BANK0
  1402                           psect cinit,class=CODE,delta=2,merge=1
  1403                           global init_ram0, __pidataBANK0
  1404                           	bcf	status, 7	;select IRP bank0
  1405  000F  1383               	movlw low(__pdataBANK0+7)
  1406  0010  3063               	movwf btemp-1,f
  1407  0011  00FD               	movlw high(__pidataBANK0)
  1408  0012  3006               	movwf btemp,f
  1409  0013  00FE               	movlw low(__pidataBANK0)
  1410  0014  3086               	movwf btemp+1,f
  1411  0015  00FF               	movlw low(__pdataBANK0)
  1412  0016  305C               	movwf fsr,f
  1413  0017  0084               	fcall init_ram0
  1414  0018  120A  118A  2655  120A  118A  	line	#
  1415                           ; Clear objects allocated to BANK0
  1416                           psect cinit,class=CODE,delta=2,merge=1
  1417                           	clrf	((__pbssBANK0)+0)&07Fh
  1418  001D  01E3               	clrf	((__pbssBANK0)+1)&07Fh
  1419  001E  01E4               	clrf	((__pbssBANK0)+2)&07Fh
  1420  001F  01E5               	clrf	((__pbssBANK0)+3)&07Fh
  1421  0020  01E6               ; Clear objects allocated to COMMON
  1422                           psect cinit,class=CODE,delta=2,merge=1
  1423                           	clrf	((__pbssCOMMON)+0)&07Fh
  1424  0021  01F6               	clrf	((__pbssCOMMON)+1)&07Fh
  1425  0022  01F7               	clrf	((__pbssCOMMON)+2)&07Fh
  1426  0023  01F8               	clrf	((__pbssCOMMON)+3)&07Fh
  1427  0024  01F9               psect cinit,class=CODE,delta=2,merge=1
  1428                           global end_of_initialization,__end_of__initialization
  1429                           
  1430                           ;End of C runtime variable initialization code
  1431                           
  1432                           end_of_initialization:
  1433  0025                     __end_of__initialization:
  1434  0025                     clrf status
  1435  0025  0183               ljmp _main	;jump to C main() function
  1436  0026  120A  118A  2A46   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1437                           global __pcstackCOMMON
  1438                           __pcstackCOMMON:
  1439  0070                     ?_T0_int:	; 1 bytes @ 0x0
  1440  0070                     ??_T0_int:	; 1 bytes @ 0x0
  1441  0070                     ?_T1_int:	; 1 bytes @ 0x0
  1442  0070                     ??_T1_int:	; 1 bytes @ 0x0
  1443  0070                     ?_T2_int:	; 1 bytes @ 0x0
  1444  0070                     ??_T2_int:	; 1 bytes @ 0x0
  1445  0070                     ?_ADC_init:	; 1 bytes @ 0x0
  1446  0070                     ?_ADC_int:	; 1 bytes @ 0x0
  1447  0070                     ??_ADC_int:	; 1 bytes @ 0x0
  1448  0070                     ?_isr:	; 1 bytes @ 0x0
  1449  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  1450  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  1451  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
  1452  0070                     ?_main:	; 1 bytes @ 0x0
  1453  0070                     	ds	2
  1454  0070                     ??_isr:	; 1 bytes @ 0x2
  1455  0072                     	ds	2
  1456  0072                     ??_ADC_init:	; 1 bytes @ 0x4
  1457  0074                     ?_delay:	; 1 bytes @ 0x4
  1458  0074                     ??_dispLCD_instReg:	; 1 bytes @ 0x4
  1459  0074                     ??_dispLCD_dataReg:	; 1 bytes @ 0x4
  1460  0074                     ??___awdiv:	; 1 bytes @ 0x4
  1461  0074                     ??___awmod:	; 1 bytes @ 0x4
  1462  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1463  0074                     	global	delay@t
  1464                           delay@t:	; 2 bytes @ 0x4
  1465  0074                     	ds	1
  1466  0074                     ??_celsius:	; 1 bytes @ 0x5
  1467  0075                     ??___lmul:	; 1 bytes @ 0x5
  1468  0075                     	global	dispLCD_dataReg@d
  1469                           dispLCD_dataReg@d:	; 1 bytes @ 0x5
  1470  0075                     	ds	1
  1471  0075                     ??_dispLCD_init:	; 1 bytes @ 0x6
  1472  0076                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1473                           global __pcstackBANK0
  1474                           __pcstackBANK0:
  1475  0020                     ??_delay:	; 1 bytes @ 0x0
  1476  0020                     	global	?___awdiv
  1477                           ?___awdiv:	; 2 bytes @ 0x0
  1478  0020                     	global	?___awmod
  1479                           ?___awmod:	; 2 bytes @ 0x0
  1480  0020                     	global	?___lwdiv
  1481                           ?___lwdiv:	; 2 bytes @ 0x0
  1482  0020                     	global	dispLCD_instReg@i
  1483                           dispLCD_instReg@i:	; 1 bytes @ 0x0
  1484  0020                     	global	___awdiv@divisor
  1485                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1486  0020                     	global	___awmod@divisor
  1487                           ___awmod@divisor:	; 2 bytes @ 0x0
  1488  0020                     	global	___lwdiv@divisor
  1489                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1490  0020                     	ds	1
  1491  0020                     ?_dispLCD_lincol:	; 1 bytes @ 0x1
  1492  0021                     	global	dispLCD_lincol@col
  1493                           dispLCD_lincol@col:	; 1 bytes @ 0x1
  1494  0021                     	ds	1
  1495  0021                     ??_dispLCD_lincol:	; 1 bytes @ 0x2
  1496  0022                     	global	___awdiv@dividend
  1497                           ___awdiv@dividend:	; 2 bytes @ 0x2
  1498  0022                     	global	___awmod@dividend
  1499                           ___awmod@dividend:	; 2 bytes @ 0x2
  1500  0022                     	global	___lwdiv@dividend
  1501                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1502  0022                     	ds	1
  1503  0022                     	global	dispLCD_lincol@lin
  1504                           dispLCD_lincol@lin:	; 1 bytes @ 0x3
  1505  0023                     	ds	1
  1506  0023                     ?_dispLCDstr:	; 1 bytes @ 0x4
  1507  0024                     	global	dispLCDstr@str
  1508                           dispLCDstr@str:	; 1 bytes @ 0x4
  1509  0024                     	global	___awdiv@counter
  1510                           ___awdiv@counter:	; 1 bytes @ 0x4
  1511  0024                     	global	___awmod@counter
  1512                           ___awmod@counter:	; 1 bytes @ 0x4
  1513  0024                     	global	___lwdiv@counter
  1514                           ___lwdiv@counter:	; 1 bytes @ 0x4
  1515  0024                     	ds	1
  1516  0024                     ??_dispLCDstr:	; 1 bytes @ 0x5
  1517  0025                     	global	___awdiv@sign
  1518                           ___awdiv@sign:	; 1 bytes @ 0x5
  1519  0025                     	global	___awmod@sign
  1520                           ___awmod@sign:	; 1 bytes @ 0x5
  1521  0025                     	global	___lwdiv@quotient
  1522                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1523  0025                     	ds	1
  1524  0025                     	global	___awdiv@quotient
  1525                           ___awdiv@quotient:	; 2 bytes @ 0x6
  1526  0026                     	ds	1
  1527  0026                     	global	?_celsius
  1528                           ?_celsius:	; 4 bytes @ 0x7
  1529  0027                     	ds	4
  1530  0027                     	global	?_kelvin
  1531                           ?_kelvin:	; 4 bytes @ 0xB
  1532  002B                     	global	?___lmul
  1533                           ?___lmul:	; 4 bytes @ 0xB
  1534  002B                     	global	___lmul@multiplier
  1535                           ___lmul@multiplier:	; 4 bytes @ 0xB
  1536  002B                     	ds	4
  1537  002B                     ??_kelvin:	; 1 bytes @ 0xF
  1538  002F                     	global	___lmul@multiplicand
  1539                           ___lmul@multiplicand:	; 4 bytes @ 0xF
  1540  002F                     	ds	4
  1541  002F                     	global	___lmul@product
  1542                           ___lmul@product:	; 4 bytes @ 0x13
  1543  0033                     	ds	4
  1544  0033                     	global	?___aldiv
  1545                           ?___aldiv:	; 4 bytes @ 0x17
  1546  0037                     	global	___aldiv@divisor
  1547                           ___aldiv@divisor:	; 4 bytes @ 0x17
  1548  0037                     	ds	4
  1549  0037                     	global	___aldiv@dividend
  1550                           ___aldiv@dividend:	; 4 bytes @ 0x1B
  1551  003B                     	ds	4
  1552  003B                     ??___aldiv:	; 1 bytes @ 0x1F
  1553  003F                     	ds	1
  1554  003F                     	global	___aldiv@counter
  1555                           ___aldiv@counter:	; 1 bytes @ 0x20
  1556  0040                     	ds	1
  1557  0040                     	global	___aldiv@sign
  1558                           ___aldiv@sign:	; 1 bytes @ 0x21
  1559  0041                     	ds	1
  1560  0041                     	global	___aldiv@quotient
  1561                           ___aldiv@quotient:	; 4 bytes @ 0x22
  1562  0042                     	ds	4
  1563  0042                     	global	?_fahrenheit
  1564                           ?_fahrenheit:	; 4 bytes @ 0x26
  1565  0046                     	ds	4
  1566  0046                     ??_fahrenheit:	; 1 bytes @ 0x2A
  1567  004A                     	ds	4
  1568  004A                     ?_dispLCD_num:	; 1 bytes @ 0x2E
  1569  004E                     	global	dispLCD_num@lin
  1570                           dispLCD_num@lin:	; 1 bytes @ 0x2E
  1571  004E                     	ds	1
  1572  004E                     	global	dispLCD_num@col
  1573                           dispLCD_num@col:	; 1 bytes @ 0x2F
  1574  004F                     	ds	1
  1575  004F                     	global	dispLCD_num@num
  1576                           dispLCD_num@num:	; 2 bytes @ 0x30
  1577  0050                     	ds	2
  1578  0050                     	global	dispLCD_num@tam
  1579                           dispLCD_num@tam:	; 1 bytes @ 0x32
  1580  0052                     	ds	1
  1581  0052                     ??_dispLCD_num:	; 1 bytes @ 0x33
  1582  0053                     	ds	3
  1583  0053                     	global	dispLCD_num@size
  1584                           dispLCD_num@size:	; 1 bytes @ 0x36
  1585  0056                     	ds	1
  1586  0056                     	global	dispLCD_num@sinal
  1587                           dispLCD_num@sinal:	; 1 bytes @ 0x37
  1588  0057                     	ds	1
  1589  0057                     	global	dispLCD_num@div
  1590                           dispLCD_num@div:	; 2 bytes @ 0x38
  1591  0058                     	ds	2
  1592  0058                     ??_main:	; 1 bytes @ 0x3A
  1593  005A                     	ds	2
  1594  005A                     ;!
  1595                           ;!Data Sizes:
  1596                           ;!    Strings     16
  1597                           ;!    Constant    0
  1598                           ;!    Data        7
  1599                           ;!    BSS         8
  1600                           ;!    Persistent  0
  1601                           ;!    Stack       0
  1602                           ;!
  1603                           ;!Auto Spaces:
  1604                           ;!    Space          Size  Autos    Used
  1605                           ;!    COMMON           14      6      10
  1606                           ;!    BANK0            80     60      71
  1607                           ;!    BANK1            80      0       0
  1608                           ;!    BANK3            96      0       0
  1609                           ;!    BANK2            96      0       0
  1610                           
  1611                           ;!
  1612                           ;!Pointer List with Targets:
  1613                           ;!
  1614                           ;!    S364$2$2	PTR const unsigned char  size(1) Largest target is 0
  1615                           ;!
  1616                           ;!    S364$1$0	PTR const unsigned char  size(1) Largest target is 16
  1617                           ;!		 -> STR_1(CODE[16]), 
  1618                           ;!
  1619                           ;!    S364$B1	PTR FTN()unsigned char  size(1) Largest target is 1
  1620                           ;!		 -> dispLCD_B1(), 
  1621                           ;!
  1622                           ;!    IHM.B1	PTR FTN()unsigned char  size(1) Largest target is 1
  1623                           ;!		 -> dispLCD_B1(), 
  1624                           ;!
  1625                           ;!    S364$B0	PTR FTN()unsigned char  size(1) Largest target is 1
  1626                           ;!		 -> dispLCD_B0(), 
  1627                           ;!
  1628                           ;!    IHM.B0	PTR FTN()unsigned char  size(1) Largest target is 1
  1629                           ;!		 -> dispLCD_B0(), 
  1630                           ;!
  1631                           ;!    S364$clr	PTR FTN()void  size(1) Largest target is 1
  1632                           ;!		 -> dispLCD_clr(), 
  1633                           ;!
  1634                           ;!    IHM.clr	PTR FTN()void  size(1) Largest target is 1
  1635                           ;!		 -> dispLCD_clr(), 
  1636                           ;!
  1637                           ;!    S364$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(
                                 1) Largest target is 1
  1638                           ;!		 -> dispLCD_num(), 
  1639                           ;!
  1640                           ;!    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1
                                 ) Largest target is 1
  1641                           ;!		 -> dispLCD_num(), 
  1642                           ;!
  1643                           ;!    S364$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void
                                   size(1) Largest target is 1
  1644                           ;!		 -> dispLCD(), 
  1645                           ;!
  1646                           ;!    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(1) Largest target is 1
  1647                           ;!		 -> dispLCD(), 
  1648                           ;!
  1649                           ;!    S364$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  1650                           ;!		 -> dispLCDstr(), 
  1651                           ;!
  1652                           ;!    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  1653                           ;!		 -> dispLCDstr(), 
  1654                           ;!
  1655                           ;!    S364$init	PTR FTN()void  size(1) Largest target is 1
  1656                           ;!		 -> dispLCD_init(), 
  1657                           ;!
  1658                           ;!    IHM.init	PTR FTN()void  size(1) Largest target is 1
  1659                           ;!		 -> dispLCD_init(), 
  1660                           ;!
  1661                           ;!    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 16
  1662                           ;!		 -> STR_1(CODE[16]), 
  1663                           ;!
  1664                           
  1665                           
  1666                           ;!
  1667                           ;!Critical Paths under _main in COMMON
  1668                           ;!
  1669                           ;!    _fahrenheit->___lmul
  1670                           ;!    _celsius->___lwdiv
  1671                           ;!    ___aldiv->___lmul
  1672                           ;!    _dispLCDstr->_dispLCD_dataReg
  1673                           ;!    _dispLCD_num->_dispLCD_dataReg
  1674                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1675                           ;!    _dispLCD_init->_delay
  1676                           ;!    _dispLCD_init->_dispLCD_instReg
  1677                           ;!
  1678                           ;!Critical Paths under _isr in COMMON
  1679                           ;!
  1680                           ;!    _isr->_ADC_int
  1681                           ;!
  1682                           ;!Critical Paths under _main in BANK0
  1683                           ;!
  1684                           ;!    _main->_dispLCD_num
  1685                           ;!    _kelvin->_celsius
  1686                           ;!    _fahrenheit->___aldiv
  1687                           ;!    _celsius->___lwdiv
  1688                           ;!    ___lmul->_celsius
  1689                           ;!    ___aldiv->___lmul
  1690                           ;!    _dispLCDstr->_dispLCD_lincol
  1691                           ;!    _dispLCD_num->_fahrenheit
  1692                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1693                           ;!    _dispLCD_init->_delay
  1694                           ;!    _dispLCD_init->_dispLCD_instReg
  1695                           ;!
  1696                           ;!Critical Paths under _isr in BANK0
  1697                           ;!
  1698                           ;!    None.
  1699                           ;!
  1700                           ;!Critical Paths under _main in BANK1
  1701                           ;!
  1702                           ;!    None.
  1703                           ;!
  1704                           ;!Critical Paths under _isr in BANK1
  1705                           ;!
  1706                           ;!    None.
  1707                           ;!
  1708                           ;!Critical Paths under _main in BANK3
  1709                           ;!
  1710                           ;!    None.
  1711                           ;!
  1712                           ;!Critical Paths under _isr in BANK3
  1713                           ;!
  1714                           ;!    None.
  1715                           ;!
  1716                           ;!Critical Paths under _main in BANK2
  1717                           ;!
  1718                           ;!    None.
  1719                           ;!
  1720                           ;!Critical Paths under _isr in BANK2
  1721                           ;!
  1722                           ;!    None.
  1723                           
  1724 ;;
  1725 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1726 ;;
  1727                           
  1728                           ;!
  1729                           ;!Call Graph Tables:
  1730                           ;!
  1731                           ;! ---------------------------------------------------------------------------------
  1732                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1733                           ;! ---------------------------------------------------------------------------------
  1734                           ;! (0) _main                                                 2     2      0    7305
  1735                           ;!                                             58 BANK0      2     2      0
  1736                           ;!                           _ADC_init
  1737                           ;!                            _celsius
  1738                           ;!                       _dispLCD_init *
  1739                           ;!                        _dispLCD_num *
  1740                           ;!                         _dispLCDstr *
  1741                           ;!                         _fahrenheit
  1742                           ;!                             _kelvin
  1743                           ;! ---------------------------------------------------------------------------------
  1744                           ;! (1) _kelvin                                               8     4      4     421
  1745                           ;!                                             11 BANK0      8     4      4
  1746                           ;!                            _celsius
  1747                           ;! ---------------------------------------------------------------------------------
  1748                           ;! (1) _fahrenheit                                           8     4      4    1117
  1749                           ;!                                             38 BANK0      8     4      4
  1750                           ;!                            ___aldiv
  1751                           ;!                             ___lmul
  1752                           ;!                            _celsius
  1753                           ;! ---------------------------------------------------------------------------------
  1754                           ;! (2) _celsius                                              4     0      4     421
  1755                           ;!                                              7 BANK0      4     0      4
  1756                           ;!                            ___lwdiv
  1757                           ;! ---------------------------------------------------------------------------------
  1758                           ;! (3) ___lwdiv                                              8     4      4     421
  1759                           ;!                                              4 COMMON     1     1      0
  1760                           ;!                                              0 BANK0      7     3      4
  1761                           ;! ---------------------------------------------------------------------------------
  1762                           ;! (2) ___lmul                                              13     5      8     244
  1763                           ;!                                              5 COMMON     1     1      0
  1764                           ;!                                             11 BANK0     12     4      8
  1765                           ;!                            _celsius (ARG)
  1766                           ;! ---------------------------------------------------------------------------------
  1767                           ;! (2) ___aldiv                                             15     7      8     452
  1768                           ;!                                             23 BANK0     15     7      8
  1769                           ;!                             ___lmul (ARG)
  1770                           ;!                            _celsius (ARG)
  1771                           ;! ---------------------------------------------------------------------------------
  1772                           ;! (1) _dispLCDstr                                           2     1      1     875
  1773                           ;!                                              4 BANK0      2     1      1
  1774                           ;!                    _dispLCD_dataReg
  1775                           ;!                     _dispLCD_lincol
  1776                           ;! ---------------------------------------------------------------------------------
  1777                           ;! (1) _dispLCD_num                                         12     7      5    3919
  1778                           ;!                                             46 BANK0     12     7      5
  1779                           ;!                            ___awdiv
  1780                           ;!                            ___awmod
  1781                           ;!                            _celsius (ARG)
  1782                           ;!                    _dispLCD_dataReg
  1783                           ;!                     _dispLCD_lincol
  1784                           ;!                         _fahrenheit (ARG)
  1785                           ;!                             _kelvin (ARG)
  1786                           ;! ---------------------------------------------------------------------------------
  1787                           ;! (2) _dispLCD_lincol                                       3     2      1     670
  1788                           ;!                                              1 BANK0      3     2      1
  1789                           ;!                    _dispLCD_instReg
  1790                           ;! ---------------------------------------------------------------------------------
  1791                           ;! (2) _dispLCD_dataReg                                      2     2      0      44
  1792                           ;!                                              4 COMMON     2     2      0
  1793                           ;! ---------------------------------------------------------------------------------
  1794                           ;! (2) ___awmod                                              7     3      4     613
  1795                           ;!                                              4 COMMON     1     1      0
  1796                           ;!                                              0 BANK0      6     2      4
  1797                           ;! ---------------------------------------------------------------------------------
  1798                           ;! (2) ___awdiv                                              9     5      4    1165
  1799                           ;!                                              4 COMMON     1     1      0
  1800                           ;!                                              0 BANK0      8     4      4
  1801                           ;! ---------------------------------------------------------------------------------
  1802                           ;! (1) _dispLCD_init                                         0     0      0     552
  1803                           ;!                              _delay
  1804                           ;!                    _dispLCD_instReg
  1805                           ;! ---------------------------------------------------------------------------------
  1806                           ;! (3) _dispLCD_instReg                                      3     3      0     248
  1807                           ;!                                              4 COMMON     2     2      0
  1808                           ;!                                              0 BANK0      1     1      0
  1809                           ;! ---------------------------------------------------------------------------------
  1810                           ;! (2) _delay                                                3     1      2     304
  1811                           ;!                                              4 COMMON     2     0      2
  1812                           ;!                                              0 BANK0      1     1      0
  1813                           ;! ---------------------------------------------------------------------------------
  1814                           ;! (1) _ADC_init                                             0     0      0       0
  1815                           ;! ---------------------------------------------------------------------------------
  1816                           ;! Estimated maximum stack depth 3
  1817                           ;! ---------------------------------------------------------------------------------
  1818                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1819                           ;! ---------------------------------------------------------------------------------
  1820                           ;! (4) _isr                                                  2     2      0       0
  1821                           ;!                                              2 COMMON     2     2      0
  1822                           ;!                            _ADC_int
  1823                           ;!                             _T0_int
  1824                           ;!                             _T1_int
  1825                           ;!                             _T2_int
  1826                           ;! ---------------------------------------------------------------------------------
  1827                           ;! (5) _T2_int                                               0     0      0       0
  1828                           ;! ---------------------------------------------------------------------------------
  1829                           ;! (5) _T1_int                                               0     0      0       0
  1830                           ;! ---------------------------------------------------------------------------------
  1831                           ;! (5) _T0_int                                               0     0      0       0
  1832                           ;! ---------------------------------------------------------------------------------
  1833                           ;! (5) _ADC_int                                              2     2      0       0
  1834                           ;!                                              0 COMMON     2     2      0
  1835                           ;! ---------------------------------------------------------------------------------
  1836                           ;! Estimated maximum stack depth 5
  1837                           ;! ---------------------------------------------------------------------------------
  1838                           ;!
  1839                           ;! Call Graph Graphs:
  1840                           ;!
  1841                           ;! _main (ROOT)
  1842                           ;!   _ADC_init
  1843                           ;!   _celsius
  1844                           ;!     ___lwdiv
  1845                           ;!   _dispLCD_init *
  1846                           ;!     _delay
  1847                           ;!     _dispLCD_instReg
  1848                           ;!   _dispLCD_num *
  1849                           ;!     ___awdiv
  1850                           ;!     ___awmod
  1851                           ;!     _celsius (ARG)
  1852                           ;!       ___lwdiv
  1853                           ;!     _dispLCD_dataReg (ARG)
  1854                           ;!     _dispLCD_lincol (ARG)
  1855                           ;!       _dispLCD_instReg
  1856                           ;!     _fahrenheit (ARG)
  1857                           ;!       ___aldiv
  1858                           ;!         ___lmul (ARG)
  1859                           ;!           _celsius (ARG)
  1860                           ;!             ___lwdiv
  1861                           ;!         _celsius (ARG)
  1862                           ;!           ___lwdiv
  1863                           ;!       ___lmul
  1864                           ;!         _celsius (ARG)
  1865                           ;!           ___lwdiv
  1866                           ;!       _celsius
  1867                           ;!         ___lwdiv
  1868                           ;!     _kelvin (ARG)
  1869                           ;!       _celsius
  1870                           ;!         ___lwdiv
  1871                           ;!   _dispLCDstr *
  1872                           ;!     _dispLCD_dataReg
  1873                           ;!     _dispLCD_lincol
  1874                           ;!       _dispLCD_instReg
  1875                           ;!   _fahrenheit *
  1876                           ;!     ___aldiv
  1877                           ;!       ___lmul (ARG)
  1878                           ;!         _celsius (ARG)
  1879                           ;!           ___lwdiv
  1880                           ;!       _celsius (ARG)
  1881                           ;!         ___lwdiv
  1882                           ;!     ___lmul
  1883                           ;!       _celsius (ARG)
  1884                           ;!         ___lwdiv
  1885                           ;!     _celsius
  1886                           ;!       ___lwdiv
  1887                           ;!   _kelvin *
  1888                           ;!     _celsius
  1889                           ;!       ___lwdiv
  1890                           ;!
  1891                           ;! _isr (ROOT)
  1892                           ;!   _ADC_int
  1893                           ;!   _T0_int
  1894                           ;!   _T1_int
  1895                           ;!   _T2_int
  1896                           ;!
  1897                           
  1898                           ;! Address spaces:
  1899                           
  1900                           ;!Name               Size   Autos  Total    Cost      Usage
  1901                           ;!BANK3               60      0       0       9        0.0%
  1902                           ;!BITBANK3            60      0       0       8        0.0%
  1903                           ;!SFR3                 0      0       0       4        0.0%
  1904                           ;!BITSFR3              0      0       0       4        0.0%
  1905                           ;!BANK2               60      0       0      11        0.0%
  1906                           ;!BITBANK2            60      0       0      10        0.0%
  1907                           ;!SFR2                 0      0       0       5        0.0%
  1908                           ;!BITSFR2              0      0       0       5        0.0%
  1909                           ;!BANK1               50      0       0       7        0.0%
  1910                           ;!BITBANK1            50      0       0       6        0.0%
  1911                           ;!SFR1                 0      0       0       2        0.0%
  1912                           ;!BITSFR1              0      0       0       2        0.0%
  1913                           ;!BANK0               50     3C      47       5       88.8%
  1914                           ;!BITBANK0            50      0       0       4        0.0%
  1915                           ;!SFR0                 0      0       0       1        0.0%
  1916                           ;!BITSFR0              0      0       0       1        0.0%
  1917                           ;!COMMON               E      6       A       1       71.4%
  1918                           ;!BITCOMMON            E      0       0       0        0.0%
  1919                           ;!CODE                 0      0       0       0        0.0%
  1920                           ;!DATA                 0      0      51      12        0.0%
  1921                           ;!ABS                  0      0      51       3        0.0%
  1922                           ;!NULL                 0      0       0       0        0.0%
  1923                           ;!STACK                0      0       0       2        0.0%
  1924                           ;!EEDATA             100      0       0       0        0.0%
  1925                           
  1926                           	global	_main
  1927                           
  1928 ;; *************** function _main *****************
  1929 ;; Defined at:
  1930 ;;		line 16 in file "main.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : B00/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0
  1946 ;;      Temps:          0       2       0       0       0
  1947 ;;      Totals:         0       2       0       0       0
  1948 ;;Total ram usage:        2 bytes
  1949 ;; Hardware stack levels required when called:    5
  1950 ;; This function calls:
  1951 ;;		_ADC_init
  1952 ;;		_celsius
  1953 ;;		_dispLCD_init
  1954 ;;		_dispLCD_num
  1955 ;;		_dispLCDstr
  1956 ;;		_fahrenheit
  1957 ;;		_kelvin
  1958 ;; This function is called by:
  1959 ;;		Startup code after reset
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1963                           	file	"main.c"
  1964                           	line	16
  1965                           global __pmaintext
  1966                           __pmaintext:	;psect for function _main
  1967  0246                     psect	maintext
  1968                           	file	"main.c"
  1969                           	line	16
  1970                           	global	__size_of_main
  1971                           	__size_of_main	equ	__end_of_main-_main
  1972  0074                     	
  1973                           _main:	
  1974  0246                     ;incstack = 0
  1975                           	opt	stack 3
  1976                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1977                           	line	18
  1978                           	
  1979                           l1921:	
  1980  0246                     ;main.c: 18:     IHM.init();
  1981                           	bcf	status, 5	;RP0=0, select bank0
  1982  0246  1283               	bcf	status, 6	;RP1=0, select bank0
  1983  0247  1303               	movf	(_IHM),w
  1984  0248  085C               	fcall	fptable
  1985  0249  120A  118A  2029  120A  118A  	line	19
  1986                           ;main.c: 19:     ADC_init();
  1987                           	fcall	_ADC_init
  1988  024E  120A  118A  259D  120A  118A  	line	20
  1989                           	
  1990                           l1923:	
  1991  0253                     ;main.c: 20:     IHM.print("C:   F:   K:   ");
  1992                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1993  0253  3001               	bcf	status, 5	;RP0=0, select bank0
  1994  0254  1283               	bcf	status, 6	;RP1=0, select bank0
  1995  0255  1303               	movwf	(??_main+0)+0
  1996  0256  00DA               	movf	(??_main+0)+0,w
  1997  0257  085A               	movwf	(dispLCDstr@str)
  1998  0258  00A4               	movf	(0+low(_IHM|((0x0)<<8)+01h)),w
  1999  0259  085D               	fcall	fptable
  2000  025A  120A  118A  2029  120A  118A  	goto	l1925
  2001  025F  2A60               	line	21
  2002                           ;main.c: 21:     while( 1 )
  2003                           	
  2004                           l160:	
  2005  0260                     	line	23
  2006                           	
  2007                           l1925:	
  2008  0260                     ;main.c: 22:     {;main.c: 23:         IHM.printv(1,1, (long)celsius(), 3 );
  2009                           	bcf	status, 5	;RP0=0, select bank0
  2010  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  2011  0261  1303               	clrf	(dispLCD_num@lin)
  2012  0262  01CE               	incf	(dispLCD_num@lin),f
  2013  0263  0ACE               	clrf	(dispLCD_num@col)
  2014  0264  01CF               	incf	(dispLCD_num@col),f
  2015  0265  0ACF               	fcall	_celsius
  2016  0266  120A  118A  25DD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2017  026B  1283               	bcf	status, 6	;RP1=0, select bank0
  2018  026C  1303               	movf	(1+(?_celsius)),w
  2019  026D  0828               	movwf	(dispLCD_num@num+1)
  2020  026E  00D1               	movf	(0+(?_celsius)),w
  2021  026F  0827               	movwf	(dispLCD_num@num)
  2022  0270  00D0               	movlw	low(03h)
  2023  0271  3003               	movwf	(??_main+0)+0
  2024  0272  00DA               	movf	(??_main+0)+0,w
  2025  0273  085A               	movwf	(dispLCD_num@tam)
  2026  0274  00D2               	movf	(0+low(_IHM|((0x0)<<8)+03h)),w
  2027  0275  085F               	fcall	fptable
  2028  0276  120A  118A  2029  120A  118A  	line	24
  2029                           	
  2030                           l1927:	
  2031  027B                     ;main.c: 24:         IHM.printv(1,6, fahrenheit(), 3 );
  2032                           	bcf	status, 5	;RP0=0, select bank0
  2033  027B  1283               	bcf	status, 6	;RP1=0, select bank0
  2034  027C  1303               	clrf	(dispLCD_num@lin)
  2035  027D  01CE               	incf	(dispLCD_num@lin),f
  2036  027E  0ACE               	movlw	low(06h)
  2037  027F  3006               	movwf	(??_main+0)+0
  2038  0280  00DA               	movf	(??_main+0)+0,w
  2039  0281  085A               	movwf	(dispLCD_num@col)
  2040  0282  00CF               	fcall	_fahrenheit
  2041  0283  120A  118A  2392  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2042  0288  1283               	bcf	status, 6	;RP1=0, select bank0
  2043  0289  1303               	movf	(1+(?_fahrenheit)),w
  2044  028A  0847               	movwf	(dispLCD_num@num+1)
  2045  028B  00D1               	movf	(0+(?_fahrenheit)),w
  2046  028C  0846               	movwf	(dispLCD_num@num)
  2047  028D  00D0               	movlw	low(03h)
  2048  028E  3003               	movwf	(??_main+1)+0
  2049  028F  00DB               	movf	(??_main+1)+0,w
  2050  0290  085B               	movwf	(dispLCD_num@tam)
  2051  0291  00D2               	movf	(0+low(_IHM|((0x0)<<8)+03h)),w
  2052  0292  085F               	fcall	fptable
  2053  0293  120A  118A  2029  120A  118A  	line	25
  2054                           	
  2055                           l1929:	
  2056  0298                     ;main.c: 25:         IHM.printv(1,11, kelvin(), 3 );
  2057                           	bcf	status, 5	;RP0=0, select bank0
  2058  0298  1283               	bcf	status, 6	;RP1=0, select bank0
  2059  0299  1303               	clrf	(dispLCD_num@lin)
  2060  029A  01CE               	incf	(dispLCD_num@lin),f
  2061  029B  0ACE               	movlw	low(0Bh)
  2062  029C  300B               	movwf	(??_main+0)+0
  2063  029D  00DA               	movf	(??_main+0)+0,w
  2064  029E  085A               	movwf	(dispLCD_num@col)
  2065  029F  00CF               	fcall	_kelvin
  2066  02A0  120A  118A  2545  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2067  02A5  1283               	bcf	status, 6	;RP1=0, select bank0
  2068  02A6  1303               	movf	(1+(?_kelvin)),w
  2069  02A7  082C               	movwf	(dispLCD_num@num+1)
  2070  02A8  00D1               	movf	(0+(?_kelvin)),w
  2071  02A9  082B               	movwf	(dispLCD_num@num)
  2072  02AA  00D0               	movlw	low(03h)
  2073  02AB  3003               	movwf	(??_main+1)+0
  2074  02AC  00DB               	movf	(??_main+1)+0,w
  2075  02AD  085B               	movwf	(dispLCD_num@tam)
  2076  02AE  00D2               	movf	(0+low(_IHM|((0x0)<<8)+03h)),w
  2077  02AF  085F               	fcall	fptable
  2078  02B0  120A  118A  2029  120A  118A  	goto	l1925
  2079  02B5  2A60               	line	26
  2080                           ;main.c: 26:     }
  2081                           	
  2082                           l161:	
  2083  02B6                     	goto	l1925
  2084  02B6  2A60               	
  2085                           l162:	
  2086  02B7                     	line	27
  2087                           	
  2088                           l163:	
  2089  02B7                     	global	start
  2090                           	ljmp	start
  2091  02B7  120A  118A  280C   	opt stack 0
  2092                           GLOBAL	__end_of_main
  2093                           	__end_of_main:
  2094  02BA                     	signat	_main,89
  2095                           	global	_kelvin
  2096                           
  2097 ;; *************** function _kelvin *****************
  2098 ;; Defined at:
  2099 ;;		line 54 in file "adc.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;		None
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  4   11[BANK0 ] long 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0, pclath, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2113 ;;      Params:         0       4       0       0       0
  2114 ;;      Locals:         0       0       0       0       0
  2115 ;;      Temps:          0       4       0       0       0
  2116 ;;      Totals:         0       8       0       0       0
  2117 ;;Total ram usage:        8 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		_celsius
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2127                           	file	"adc.c"
  2128                           	line	54
  2129                           global __ptext1
  2130                           __ptext1:	;psect for function _kelvin
  2131  0545                     psect	text1
  2132                           	file	"adc.c"
  2133                           	line	54
  2134                           	global	__size_of_kelvin
  2135                           	__size_of_kelvin	equ	__end_of_kelvin-_kelvin
  2136  002D                     	
  2137                           _kelvin:	
  2138  0545                     ;incstack = 0
  2139                           	opt	stack 3
  2140                           ; Regs used in _kelvin: [wreg+status,2+status,0+pclath+cstack]
  2141                           	line	56
  2142                           	
  2143                           l1841:	
  2144  0545                     ;adc.c: 56:     return ( ( celsius() + 273 ));
  2145                           	movlw	011h
  2146  0545  3011               	bcf	status, 5	;RP0=0, select bank0
  2147  0546  1283               	bcf	status, 6	;RP1=0, select bank0
  2148  0547  1303               	movwf	((??_kelvin+0)+0)
  2149  0548  00AF               	movlw	01h
  2150  0549  3001               	movwf	((??_kelvin+0)+0+1)
  2151  054A  00B0               	movlw	0
  2152  054B  3000               	movwf	((??_kelvin+0)+0+2)
  2153  054C  00B1               	movlw	0
  2154  054D  3000               	movwf	((??_kelvin+0)+0+3)
  2155  054E  00B2               	fcall	_celsius
  2156  054F  120A  118A  25DD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2157  0554  1283               	bcf	status, 6	;RP1=0, select bank0
  2158  0555  1303               	movf	(0+(?_celsius)),w
  2159  0556  0827               	addwf	(??_kelvin+0)+0,f
  2160  0557  07AF               	movf	(1+(?_celsius)),w
  2161  0558  0828               	skipnc
  2162  0559  1803               	incfsz	(1+(?_celsius)),w
  2163  055A  0F28               	goto	u1810
  2164  055B  2D5D               	goto	u1811
  2165  055C  2D5E               u1810:
  2166  055D                     	addwf	(??_kelvin+0)+1,f
  2167  055D  07B0               u1811:
  2168  055E                     	movf	(2+(?_celsius)),w
  2169  055E  0829               	skipnc
  2170  055F  1803               	incfsz	(2+(?_celsius)),w
  2171  0560  0F29               	goto	u1812
  2172  0561  2D63               	goto	u1813
  2173  0562  2D64               u1812:
  2174  0563                     	addwf	(??_kelvin+0)+2,f
  2175  0563  07B1               u1813:
  2176  0564                     	movf	(3+(?_celsius)),w
  2177  0564  082A               	skipnc
  2178  0565  1803               	incf	(3+(?_celsius)),w
  2179  0566  0A2A               	addwf	(??_kelvin+0)+3,f
  2180  0567  07B2               	movf	3+(??_kelvin+0)+0,w
  2181  0568  0832               	movwf	(?_kelvin+3)
  2182  0569  00AE               	movf	2+(??_kelvin+0)+0,w
  2183  056A  0831               	movwf	(?_kelvin+2)
  2184  056B  00AD               	movf	1+(??_kelvin+0)+0,w
  2185  056C  0830               	movwf	(?_kelvin+1)
  2186  056D  00AC               	movf	0+(??_kelvin+0)+0,w
  2187  056E  082F               	movwf	(?_kelvin)
  2188  056F  00AB               
  2189                           	goto	l34
  2190  0570  2D71               	
  2191                           l1843:	
  2192  0571                     	line	57
  2193                           	
  2194                           l34:	
  2195  0571                     	return
  2196  0571  0008               	opt stack 0
  2197                           GLOBAL	__end_of_kelvin
  2198                           	__end_of_kelvin:
  2199  0572                     	signat	_kelvin,92
  2200                           	global	_fahrenheit
  2201                           
  2202 ;; *************** function _fahrenheit *****************
  2203 ;; Defined at:
  2204 ;;		line 49 in file "adc.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;		None
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  4   38[BANK0 ] long 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       4       0       0       0
  2219 ;;      Locals:         0       0       0       0       0
  2220 ;;      Temps:          0       4       0       0       0
  2221 ;;      Totals:         0       8       0       0       0
  2222 ;;Total ram usage:        8 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    4
  2225 ;; This function calls:
  2226 ;;		___aldiv
  2227 ;;		___lmul
  2228 ;;		_celsius
  2229 ;; This function is called by:
  2230 ;;		_main
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2234                           	line	49
  2235                           global __ptext2
  2236                           __ptext2:	;psect for function _fahrenheit
  2237  0392                     psect	text2
  2238                           	file	"adc.c"
  2239                           	line	49
  2240                           	global	__size_of_fahrenheit
  2241                           	__size_of_fahrenheit	equ	__end_of_fahrenheit-_fahrenheit
  2242  005B                     	
  2243                           _fahrenheit:	
  2244  0392                     ;incstack = 0
  2245                           	opt	stack 3
  2246                           ; Regs used in _fahrenheit: [wreg+status,2+status,0+pclath+cstack]
  2247                           	line	51
  2248                           	
  2249                           l1837:	
  2250  0392                     ;adc.c: 51:     return( ( ( ( celsius() * 9 ) /5 ) +32 ));
  2251                           	movlw	020h
  2252  0392  3020               	bcf	status, 5	;RP0=0, select bank0
  2253  0393  1283               	bcf	status, 6	;RP1=0, select bank0
  2254  0394  1303               	movwf	((??_fahrenheit+0)+0)
  2255  0395  00CA               	movlw	0
  2256  0396  3000               	movwf	((??_fahrenheit+0)+0+1)
  2257  0397  00CB               	movlw	0
  2258  0398  3000               	movwf	((??_fahrenheit+0)+0+2)
  2259  0399  00CC               	movlw	0
  2260  039A  3000               	movwf	((??_fahrenheit+0)+0+3)
  2261  039B  00CD               	movlw	0
  2262  039C  3000               	movwf	(___aldiv@divisor+3)
  2263  039D  00BA               	movlw	0
  2264  039E  3000               	movwf	(___aldiv@divisor+2)
  2265  039F  00B9               	movlw	0
  2266  03A0  3000               	movwf	(___aldiv@divisor+1)
  2267  03A1  00B8               	movlw	05h
  2268  03A2  3005               	movwf	(___aldiv@divisor)
  2269  03A3  00B7               
  2270                           	fcall	_celsius
  2271  03A4  120A  118A  25DD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2272  03A9  1283               	bcf	status, 6	;RP1=0, select bank0
  2273  03AA  1303               	movf	(3+(?_celsius)),w
  2274  03AB  082A               	movwf	(___lmul@multiplier+3)
  2275  03AC  00AE               	movf	(2+(?_celsius)),w
  2276  03AD  0829               	movwf	(___lmul@multiplier+2)
  2277  03AE  00AD               	movf	(1+(?_celsius)),w
  2278  03AF  0828               	movwf	(___lmul@multiplier+1)
  2279  03B0  00AC               	movf	(0+(?_celsius)),w
  2280  03B1  0827               	movwf	(___lmul@multiplier)
  2281  03B2  00AB               
  2282                           	movlw	0
  2283  03B3  3000               	movwf	(___lmul@multiplicand+3)
  2284  03B4  00B2               	movlw	0
  2285  03B5  3000               	movwf	(___lmul@multiplicand+2)
  2286  03B6  00B1               	movlw	0
  2287  03B7  3000               	movwf	(___lmul@multiplicand+1)
  2288  03B8  00B0               	movlw	09h
  2289  03B9  3009               	movwf	(___lmul@multiplicand)
  2290  03BA  00AF               
  2291                           	fcall	___lmul
  2292  03BB  120A  118A  243A  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2293  03C0  1283               	bcf	status, 6	;RP1=0, select bank0
  2294  03C1  1303               	movf	(3+(?___lmul)),w
  2295  03C2  082E               	movwf	(___aldiv@dividend+3)
  2296  03C3  00BE               	movf	(2+(?___lmul)),w
  2297  03C4  082D               	movwf	(___aldiv@dividend+2)
  2298  03C5  00BD               	movf	(1+(?___lmul)),w
  2299  03C6  082C               	movwf	(___aldiv@dividend+1)
  2300  03C7  00BC               	movf	(0+(?___lmul)),w
  2301  03C8  082B               	movwf	(___aldiv@dividend)
  2302  03C9  00BB               
  2303                           	fcall	___aldiv
  2304  03CA  120A  118A  2127  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2305  03CF  1283               	bcf	status, 6	;RP1=0, select bank0
  2306  03D0  1303               	movf	(0+(?___aldiv)),w
  2307  03D1  0837               	addwf	(??_fahrenheit+0)+0,f
  2308  03D2  07CA               	movf	(1+(?___aldiv)),w
  2309  03D3  0838               	skipnc
  2310  03D4  1803               	incfsz	(1+(?___aldiv)),w
  2311  03D5  0F38               	goto	u1800
  2312  03D6  2BD8               	goto	u1801
  2313  03D7  2BD9               u1800:
  2314  03D8                     	addwf	(??_fahrenheit+0)+1,f
  2315  03D8  07CB               u1801:
  2316  03D9                     	movf	(2+(?___aldiv)),w
  2317  03D9  0839               	skipnc
  2318  03DA  1803               	incfsz	(2+(?___aldiv)),w
  2319  03DB  0F39               	goto	u1802
  2320  03DC  2BDE               	goto	u1803
  2321  03DD  2BDF               u1802:
  2322  03DE                     	addwf	(??_fahrenheit+0)+2,f
  2323  03DE  07CC               u1803:
  2324  03DF                     	movf	(3+(?___aldiv)),w
  2325  03DF  083A               	skipnc
  2326  03E0  1803               	incf	(3+(?___aldiv)),w
  2327  03E1  0A3A               	addwf	(??_fahrenheit+0)+3,f
  2328  03E2  07CD               	movf	3+(??_fahrenheit+0)+0,w
  2329  03E3  084D               	movwf	(?_fahrenheit+3)
  2330  03E4  00C9               	movf	2+(??_fahrenheit+0)+0,w
  2331  03E5  084C               	movwf	(?_fahrenheit+2)
  2332  03E6  00C8               	movf	1+(??_fahrenheit+0)+0,w
  2333  03E7  084B               	movwf	(?_fahrenheit+1)
  2334  03E8  00C7               	movf	0+(??_fahrenheit+0)+0,w
  2335  03E9  084A               	movwf	(?_fahrenheit)
  2336  03EA  00C6               
  2337                           	goto	l31
  2338  03EB  2BEC               	
  2339                           l1839:	
  2340  03EC                     	line	52
  2341                           	
  2342                           l31:	
  2343  03EC                     	return
  2344  03EC  0008               	opt stack 0
  2345                           GLOBAL	__end_of_fahrenheit
  2346                           	__end_of_fahrenheit:
  2347  03ED                     	signat	_fahrenheit,92
  2348                           	global	_celsius
  2349                           
  2350 ;; *************** function _celsius *****************
  2351 ;; Defined at:
  2352 ;;		line 44 in file "adc.c"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;		None
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  4    7[BANK0 ] long 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0, pclath, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2366 ;;      Params:         0       4       0       0       0
  2367 ;;      Locals:         0       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0
  2369 ;;      Totals:         0       4       0       0       0
  2370 ;;Total ram usage:        4 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    3
  2373 ;; This function calls:
  2374 ;;		___lwdiv
  2375 ;; This function is called by:
  2376 ;;		_fahrenheit
  2377 ;;		_kelvin
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2382                           	line	44
  2383                           global __ptext3
  2384                           __ptext3:	;psect for function _celsius
  2385  05DD                     psect	text3
  2386                           	file	"adc.c"
  2387                           	line	44
  2388                           	global	__size_of_celsius
  2389                           	__size_of_celsius	equ	__end_of_celsius-_celsius
  2390  001D                     	
  2391                           _celsius:	
  2392  05DD                     ;incstack = 0
  2393                           	opt	stack 3
  2394                           ; Regs used in _celsius: [wreg+status,2+status,0+pclath+cstack]
  2395                           	line	46
  2396                           	
  2397                           l1743:	
  2398  05DD                     ;adc.c: 46:     return( ( ( ADC_value / 10) -51 ));
  2399                           	movlw	0Ah
  2400  05DD  300A               	bcf	status, 5	;RP0=0, select bank0
  2401  05DE  1283               	bcf	status, 6	;RP1=0, select bank0
  2402  05DF  1303               	movwf	(___lwdiv@divisor)
  2403  05E0  00A0               	movlw	0
  2404  05E1  3000               	movwf	((___lwdiv@divisor))+1
  2405  05E2  00A1               	movf	(_ADC_value+1),w
  2406  05E3  0866               	movwf	(___lwdiv@dividend+1)
  2407  05E4  00A3               	movf	(_ADC_value),w
  2408  05E5  0865               	movwf	(___lwdiv@dividend)
  2409  05E6  00A2               	fcall	___lwdiv
  2410  05E7  120A  118A  23ED  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2411  05EC  1283               	bcf	status, 6	;RP1=0, select bank0
  2412  05ED  1303               	movf	(0+(?___lwdiv)),w
  2413  05EE  0820               	addlw	low(0FFCDh)
  2414  05EF  3ECD               	movwf	(?_celsius)
  2415  05F0  00A7               	movf	(1+(?___lwdiv)),w
  2416  05F1  0821               	skipnc
  2417  05F2  1803               	addlw	1
  2418  05F3  3E01               	addlw	high(0FFCDh)
  2419  05F4  3EFF               	movwf	1+(?_celsius)
  2420  05F5  00A8               	clrf	2+(?_celsius)
  2421  05F6  01A9               	clrf	3+(?_celsius)
  2422  05F7  01AA               	goto	l28
  2423  05F8  2DF9               	
  2424                           l1745:	
  2425  05F9                     	line	47
  2426                           	
  2427                           l28:	
  2428  05F9                     	return
  2429  05F9  0008               	opt stack 0
  2430                           GLOBAL	__end_of_celsius
  2431                           	__end_of_celsius:
  2432  05FA                     	signat	_celsius,92
  2433                           	global	___lwdiv
  2434                           
  2435 ;; *************** function ___lwdiv *****************
  2436 ;; Defined at:
  2437 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  divisor         2    0[BANK0 ] unsigned int 
  2440 ;;  dividend        2    2[BANK0 ] unsigned int 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  quotient        2    5[BANK0 ] unsigned int 
  2443 ;;  counter         1    4[BANK0 ] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  2    0[BANK0 ] unsigned int 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       4       0       0       0
  2454 ;;      Locals:         0       3       0       0       0
  2455 ;;      Temps:          1       0       0       0       0
  2456 ;;      Totals:         1       7       0       0       0
  2457 ;;Total ram usage:        8 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    2
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_celsius
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2467                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2468                           	line	5
  2469                           global __ptext4
  2470                           __ptext4:	;psect for function ___lwdiv
  2471  03ED                     psect	text4
  2472                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2473                           	line	5
  2474                           	global	__size_of___lwdiv
  2475                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2476  004D                     	
  2477                           ___lwdiv:	
  2478  03ED                     ;incstack = 0
  2479                           	opt	stack 3
  2480                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2481                           	line	13
  2482                           	
  2483                           l1717:	
  2484  03ED                     	bcf	status, 5	;RP0=0, select bank0
  2485  03ED  1283               	bcf	status, 6	;RP1=0, select bank0
  2486  03EE  1303               	clrf	(___lwdiv@quotient)
  2487  03EF  01A5               	clrf	(___lwdiv@quotient+1)
  2488  03F0  01A6               	line	14
  2489                           	
  2490                           l1719:	
  2491  03F1                     	movf	((___lwdiv@divisor)),w
  2492  03F1  0820               iorwf	((___lwdiv@divisor+1)),w
  2493  03F2  0421               	btfsc	status,2
  2494  03F3  1903               	goto	u1521
  2495  03F4  2BF6               	goto	u1520
  2496  03F5  2BF7               u1521:
  2497  03F6                     	goto	l1739
  2498  03F6  2C34               u1520:
  2499  03F7                     	line	15
  2500                           	
  2501                           l1721:	
  2502  03F7                     	clrf	(___lwdiv@counter)
  2503  03F7  01A4               	incf	(___lwdiv@counter),f
  2504  03F8  0AA4               	line	16
  2505                           	goto	l1727
  2506  03F9  2C06               	
  2507                           l599:	
  2508  03FA                     	line	17
  2509                           	
  2510                           l1723:	
  2511  03FA                     	movlw	01h
  2512  03FA  3001               	
  2513                           u1535:
  2514  03FB                     	clrc
  2515  03FB  1003               	rlf	(___lwdiv@divisor),f
  2516  03FC  0DA0               	rlf	(___lwdiv@divisor+1),f
  2517  03FD  0DA1               	addlw	-1
  2518  03FE  3EFF               	skipz
  2519  03FF  1D03               	goto	u1535
  2520  0400  2BFB               	line	18
  2521                           	
  2522                           l1725:	
  2523  0401                     	movlw	low(01h)
  2524  0401  3001               	movwf	(??___lwdiv+0)+0
  2525  0402  00F4               	movf	(??___lwdiv+0)+0,w
  2526  0403  0874               	addwf	(___lwdiv@counter),f
  2527  0404  07A4               	goto	l1727
  2528  0405  2C06               	line	19
  2529                           	
  2530                           l598:	
  2531  0406                     	line	16
  2532                           	
  2533                           l1727:	
  2534  0406                     	btfss	(___lwdiv@divisor+1),(15)&7
  2535  0406  1FA1               	goto	u1541
  2536  0407  2C09               	goto	u1540
  2537  0408  2C0A               u1541:
  2538  0409                     	goto	l1723
  2539  0409  2BFA               u1540:
  2540  040A                     	goto	l1729
  2541  040A  2C0C               	
  2542                           l600:	
  2543  040B                     	goto	l1729
  2544  040B  2C0C               	line	20
  2545                           	
  2546                           l601:	
  2547  040C                     	line	21
  2548                           	
  2549                           l1729:	
  2550  040C                     	movlw	01h
  2551  040C  3001               	
  2552                           u1555:
  2553  040D                     	clrc
  2554  040D  1003               	rlf	(___lwdiv@quotient),f
  2555  040E  0DA5               	rlf	(___lwdiv@quotient+1),f
  2556  040F  0DA6               	addlw	-1
  2557  0410  3EFF               	skipz
  2558  0411  1D03               	goto	u1555
  2559  0412  2C0D               	line	22
  2560                           	movf	(___lwdiv@divisor+1),w
  2561  0413  0821               	subwf	(___lwdiv@dividend+1),w
  2562  0414  0223               	skipz
  2563  0415  1D03               	goto	u1565
  2564  0416  2C19               	movf	(___lwdiv@divisor),w
  2565  0417  0820               	subwf	(___lwdiv@dividend),w
  2566  0418  0222               u1565:
  2567  0419                     	skipc
  2568  0419  1C03               	goto	u1561
  2569  041A  2C1C               	goto	u1560
  2570  041B  2C1D               u1561:
  2571  041C                     	goto	l1735
  2572  041C  2C25               u1560:
  2573  041D                     	line	23
  2574                           	
  2575                           l1731:	
  2576  041D                     	movf	(___lwdiv@divisor),w
  2577  041D  0820               	subwf	(___lwdiv@dividend),f
  2578  041E  02A2               	movf	(___lwdiv@divisor+1),w
  2579  041F  0821               	skipc
  2580  0420  1C03               	decf	(___lwdiv@dividend+1),f
  2581  0421  03A3               	subwf	(___lwdiv@dividend+1),f
  2582  0422  02A3               	line	24
  2583                           	
  2584                           l1733:	
  2585  0423                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  2586  0423  1425               	goto	l1735
  2587  0424  2C25               	line	25
  2588                           	
  2589                           l602:	
  2590  0425                     	line	26
  2591                           	
  2592                           l1735:	
  2593  0425                     	movlw	01h
  2594  0425  3001               	
  2595                           u1575:
  2596  0426                     	clrc
  2597  0426  1003               	rrf	(___lwdiv@divisor+1),f
  2598  0427  0CA1               	rrf	(___lwdiv@divisor),f
  2599  0428  0CA0               	addlw	-1
  2600  0429  3EFF               	skipz
  2601  042A  1D03               	goto	u1575
  2602  042B  2C26               	line	27
  2603                           	
  2604                           l1737:	
  2605  042C                     	movlw	01h
  2606  042C  3001               	subwf	(___lwdiv@counter),f
  2607  042D  02A4               	btfss	status,2
  2608  042E  1D03               	goto	u1581
  2609  042F  2C31               	goto	u1580
  2610  0430  2C32               u1581:
  2611  0431                     	goto	l1729
  2612  0431  2C0C               u1580:
  2613  0432                     	goto	l1739
  2614  0432  2C34               	
  2615                           l603:	
  2616  0433                     	goto	l1739
  2617  0433  2C34               	line	28
  2618                           	
  2619                           l597:	
  2620  0434                     	line	29
  2621                           	
  2622                           l1739:	
  2623  0434                     	movf	(___lwdiv@quotient+1),w
  2624  0434  0826               	movwf	(?___lwdiv+1)
  2625  0435  00A1               	movf	(___lwdiv@quotient),w
  2626  0436  0825               	movwf	(?___lwdiv)
  2627  0437  00A0               	goto	l604
  2628  0438  2C39               	
  2629                           l1741:	
  2630  0439                     	line	30
  2631                           	
  2632                           l604:	
  2633  0439                     	return
  2634  0439  0008               	opt stack 0
  2635                           GLOBAL	__end_of___lwdiv
  2636                           	__end_of___lwdiv:
  2637  043A                     	signat	___lwdiv,8314
  2638                           	global	___lmul
  2639                           
  2640 ;; *************** function ___lmul *****************
  2641 ;; Defined at:
  2642 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  multiplier      4   11[BANK0 ] unsigned long 
  2645 ;;  multiplicand    4   15[BANK0 ] unsigned long 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  product         4   19[BANK0 ] unsigned long 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  4   11[BANK0 ] unsigned long 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       8       0       0       0
  2658 ;;      Locals:         0       4       0       0       0
  2659 ;;      Temps:          1       0       0       0       0
  2660 ;;      Totals:         1      12       0       0       0
  2661 ;;Total ram usage:       13 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    2
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_fahrenheit
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2671                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  2672                           	line	15
  2673                           global __ptext5
  2674                           __ptext5:	;psect for function ___lmul
  2675  043A                     psect	text5
  2676                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  2677                           	line	15
  2678                           	global	__size_of___lmul
  2679                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  2680  004C                     	
  2681                           ___lmul:	
  2682  043A                     ;incstack = 0
  2683                           	opt	stack 4
  2684                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2685                           	line	119
  2686                           	
  2687                           l1389:	
  2688  043A                     	movlw	high highword(0)
  2689  043A  3000               	bcf	status, 5	;RP0=0, select bank0
  2690  043B  1283               	bcf	status, 6	;RP1=0, select bank0
  2691  043C  1303               	movwf	(___lmul@product+3)
  2692  043D  00B6               	movlw	low highword(0)
  2693  043E  3000               	movwf	(___lmul@product+2)
  2694  043F  00B5               	movlw	high(0)
  2695  0440  3000               	movwf	(___lmul@product+1)
  2696  0441  00B4               	movlw	low(0)
  2697  0442  3000               	movwf	(___lmul@product)
  2698  0443  00B3               
  2699                           	goto	l1391
  2700  0444  2C45               	line	120
  2701                           	
  2702                           l343:	
  2703  0445                     	line	121
  2704                           	
  2705                           l1391:	
  2706  0445                     	btfss	(___lmul@multiplier),(0)&7
  2707  0445  1C2B               	goto	u911
  2708  0446  2C48               	goto	u910
  2709  0447  2C49               u911:
  2710  0448                     	goto	l1395
  2711  0448  2C61               u910:
  2712  0449                     	line	122
  2713                           	
  2714                           l1393:	
  2715  0449                     	movf	(___lmul@multiplicand),w
  2716  0449  082F               	addwf	(___lmul@product),f
  2717  044A  07B3               	movf	(___lmul@multiplicand+1),w
  2718  044B  0830               	clrz
  2719  044C  1103               	skipnc
  2720  044D  1803               	addlw	1
  2721  044E  3E01               	skipnz
  2722  044F  1903               	goto	u921
  2723  0450  2C52               	addwf	(___lmul@product+1),f
  2724  0451  07B4               u921:
  2725  0452                     	movf	(___lmul@multiplicand+2),w
  2726  0452  0831               	clrz
  2727  0453  1103               	skipnc
  2728  0454  1803               	addlw	1
  2729  0455  3E01               	skipnz
  2730  0456  1903               	goto	u922
  2731  0457  2C59               	addwf	(___lmul@product+2),f
  2732  0458  07B5               u922:
  2733  0459                     	movf	(___lmul@multiplicand+3),w
  2734  0459  0832               	clrz
  2735  045A  1103               	skipnc
  2736  045B  1803               	addlw	1
  2737  045C  3E01               	skipnz
  2738  045D  1903               	goto	u923
  2739  045E  2C60               	addwf	(___lmul@product+3),f
  2740  045F  07B6               u923:
  2741  0460                     
  2742                           	goto	l1395
  2743  0460  2C61               	
  2744                           l344:	
  2745  0461                     	line	123
  2746                           	
  2747                           l1395:	
  2748  0461                     	movlw	01h
  2749  0461  3001               	movwf	(??___lmul+0)+0
  2750  0462  00F5               u935:
  2751  0463                     	clrc
  2752  0463  1003               	rlf	(___lmul@multiplicand),f
  2753  0464  0DAF               	rlf	(___lmul@multiplicand+1),f
  2754  0465  0DB0               	rlf	(___lmul@multiplicand+2),f
  2755  0466  0DB1               	rlf	(___lmul@multiplicand+3),f
  2756  0467  0DB2               	decfsz	(??___lmul+0)+0
  2757  0468  0BF5               	goto	u935
  2758  0469  2C63               	line	124
  2759                           	
  2760                           l1397:	
  2761  046A                     	movlw	01h
  2762  046A  3001               u945:
  2763  046B                     	clrc
  2764  046B  1003               	rrf	(___lmul@multiplier+3),f
  2765  046C  0CAE               	rrf	(___lmul@multiplier+2),f
  2766  046D  0CAD               	rrf	(___lmul@multiplier+1),f
  2767  046E  0CAC               	rrf	(___lmul@multiplier),f
  2768  046F  0CAB               	addlw	-1
  2769  0470  3EFF               	skipz
  2770  0471  1D03               	goto	u945
  2771  0472  2C6B               
  2772                           	line	125
  2773                           	movf	(___lmul@multiplier+3),w
  2774  0473  082E               	iorwf	(___lmul@multiplier+2),w
  2775  0474  042D               	iorwf	(___lmul@multiplier+1),w
  2776  0475  042C               	iorwf	(___lmul@multiplier),w
  2777  0476  042B               	skipz
  2778  0477  1D03               	goto	u951
  2779  0478  2C7A               	goto	u950
  2780  0479  2C7B               u951:
  2781  047A                     	goto	l1391
  2782  047A  2C45               u950:
  2783  047B                     	goto	l1399
  2784  047B  2C7C               	
  2785                           l345:	
  2786  047C                     	line	128
  2787                           	
  2788                           l1399:	
  2789  047C                     	movf	(___lmul@product+3),w
  2790  047C  0836               	movwf	(?___lmul+3)
  2791  047D  00AE               	movf	(___lmul@product+2),w
  2792  047E  0835               	movwf	(?___lmul+2)
  2793  047F  00AD               	movf	(___lmul@product+1),w
  2794  0480  0834               	movwf	(?___lmul+1)
  2795  0481  00AC               	movf	(___lmul@product),w
  2796  0482  0833               	movwf	(?___lmul)
  2797  0483  00AB               
  2798                           	goto	l346
  2799  0484  2C85               	
  2800                           l1401:	
  2801  0485                     	line	129
  2802                           	
  2803                           l346:	
  2804  0485                     	return
  2805  0485  0008               	opt stack 0
  2806                           GLOBAL	__end_of___lmul
  2807                           	__end_of___lmul:
  2808  0486                     	signat	___lmul,8316
  2809                           	global	___aldiv
  2810                           
  2811 ;; *************** function ___aldiv *****************
  2812 ;; Defined at:
  2813 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  divisor         4   23[BANK0 ] long 
  2816 ;;  dividend        4   27[BANK0 ] long 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  quotient        4   34[BANK0 ] long 
  2819 ;;  sign            1   33[BANK0 ] unsigned char 
  2820 ;;  counter         1   32[BANK0 ] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  4   23[BANK0 ] long 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         0       8       0       0       0
  2831 ;;      Locals:         0       6       0       0       0
  2832 ;;      Temps:          0       1       0       0       0
  2833 ;;      Totals:         0      15       0       0       0
  2834 ;;Total ram usage:       15 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    2
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_fahrenheit
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  2844                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2845                           	line	5
  2846                           global __ptext6
  2847                           __ptext6:	;psect for function ___aldiv
  2848  0127                     psect	text6
  2849                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2850                           	line	5
  2851                           	global	__size_of___aldiv
  2852                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  2853  00A6                     	
  2854                           ___aldiv:	
  2855  0127                     ;incstack = 0
  2856                           	opt	stack 4
  2857                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2858                           	line	13
  2859                           	
  2860                           l1403:	
  2861  0127                     	bcf	status, 5	;RP0=0, select bank0
  2862  0127  1283               	bcf	status, 6	;RP1=0, select bank0
  2863  0128  1303               	clrf	(___aldiv@sign)
  2864  0129  01C1               	line	14
  2865                           	
  2866                           l1405:	
  2867  012A                     	btfss	(___aldiv@divisor+3),7
  2868  012A  1FBA               	goto	u961
  2869  012B  292D               	goto	u960
  2870  012C  292E               u961:
  2871  012D                     	goto	l397
  2872  012D  293B               u960:
  2873  012E                     	line	15
  2874                           	
  2875                           l1407:	
  2876  012E                     	comf	(___aldiv@divisor),f
  2877  012E  09B7               	comf	(___aldiv@divisor+1),f
  2878  012F  09B8               	comf	(___aldiv@divisor+2),f
  2879  0130  09B9               	comf	(___aldiv@divisor+3),f
  2880  0131  09BA               	incf	(___aldiv@divisor),f
  2881  0132  0AB7               	skipnz
  2882  0133  1903               	incf	(___aldiv@divisor+1),f
  2883  0134  0AB8               	skipnz
  2884  0135  1903               	incf	(___aldiv@divisor+2),f
  2885  0136  0AB9               	skipnz
  2886  0137  1903               	incf	(___aldiv@divisor+3),f
  2887  0138  0ABA               	line	16
  2888                           	clrf	(___aldiv@sign)
  2889  0139  01C1               	incf	(___aldiv@sign),f
  2890  013A  0AC1               	line	17
  2891                           	
  2892                           l397:	
  2893  013B                     	line	18
  2894                           	btfss	(___aldiv@dividend+3),7
  2895  013B  1FBE               	goto	u971
  2896  013C  293E               	goto	u970
  2897  013D  293F               u971:
  2898  013E                     	goto	l1413
  2899  013E  294F               u970:
  2900  013F                     	line	19
  2901                           	
  2902                           l1409:	
  2903  013F                     	comf	(___aldiv@dividend),f
  2904  013F  09BB               	comf	(___aldiv@dividend+1),f
  2905  0140  09BC               	comf	(___aldiv@dividend+2),f
  2906  0141  09BD               	comf	(___aldiv@dividend+3),f
  2907  0142  09BE               	incf	(___aldiv@dividend),f
  2908  0143  0ABB               	skipnz
  2909  0144  1903               	incf	(___aldiv@dividend+1),f
  2910  0145  0ABC               	skipnz
  2911  0146  1903               	incf	(___aldiv@dividend+2),f
  2912  0147  0ABD               	skipnz
  2913  0148  1903               	incf	(___aldiv@dividend+3),f
  2914  0149  0ABE               	line	20
  2915                           	
  2916                           l1411:	
  2917  014A                     	movlw	low(01h)
  2918  014A  3001               	movwf	(??___aldiv+0)+0
  2919  014B  00BF               	movf	(??___aldiv+0)+0,w
  2920  014C  083F               	xorwf	(___aldiv@sign),f
  2921  014D  06C1               	goto	l1413
  2922  014E  294F               	line	21
  2923                           	
  2924                           l398:	
  2925  014F                     	line	22
  2926                           	
  2927                           l1413:	
  2928  014F                     	movlw	high highword(0)
  2929  014F  3000               	movwf	(___aldiv@quotient+3)
  2930  0150  00C5               	movlw	low highword(0)
  2931  0151  3000               	movwf	(___aldiv@quotient+2)
  2932  0152  00C4               	movlw	high(0)
  2933  0153  3000               	movwf	(___aldiv@quotient+1)
  2934  0154  00C3               	movlw	low(0)
  2935  0155  3000               	movwf	(___aldiv@quotient)
  2936  0156  00C2               
  2937                           	line	23
  2938                           	
  2939                           l1415:	
  2940  0157                     	movf	(___aldiv@divisor+3),w
  2941  0157  083A               	iorwf	(___aldiv@divisor+2),w
  2942  0158  0439               	iorwf	(___aldiv@divisor+1),w
  2943  0159  0438               	iorwf	(___aldiv@divisor),w
  2944  015A  0437               	skipnz
  2945  015B  1903               	goto	u981
  2946  015C  295E               	goto	u980
  2947  015D  295F               u981:
  2948  015E                     	goto	l1435
  2949  015E  29B2               u980:
  2950  015F                     	line	24
  2951                           	
  2952                           l1417:	
  2953  015F                     	clrf	(___aldiv@counter)
  2954  015F  01C0               	incf	(___aldiv@counter),f
  2955  0160  0AC0               	line	25
  2956                           	goto	l1421
  2957  0161  2970               	
  2958                           l401:	
  2959  0162                     	line	26
  2960                           	
  2961                           l1419:	
  2962  0162                     	movlw	01h
  2963  0162  3001               	movwf	(??___aldiv+0)+0
  2964  0163  00BF               u995:
  2965  0164                     	clrc
  2966  0164  1003               	rlf	(___aldiv@divisor),f
  2967  0165  0DB7               	rlf	(___aldiv@divisor+1),f
  2968  0166  0DB8               	rlf	(___aldiv@divisor+2),f
  2969  0167  0DB9               	rlf	(___aldiv@divisor+3),f
  2970  0168  0DBA               	decfsz	(??___aldiv+0)+0
  2971  0169  0BBF               	goto	u995
  2972  016A  2964               	line	27
  2973                           	movlw	low(01h)
  2974  016B  3001               	movwf	(??___aldiv+0)+0
  2975  016C  00BF               	movf	(??___aldiv+0)+0,w
  2976  016D  083F               	addwf	(___aldiv@counter),f
  2977  016E  07C0               	goto	l1421
  2978  016F  2970               	line	28
  2979                           	
  2980                           l400:	
  2981  0170                     	line	25
  2982                           	
  2983                           l1421:	
  2984  0170                     	btfss	(___aldiv@divisor+3),(31)&7
  2985  0170  1FBA               	goto	u1001
  2986  0171  2973               	goto	u1000
  2987  0172  2974               u1001:
  2988  0173                     	goto	l1419
  2989  0173  2962               u1000:
  2990  0174                     	goto	l1423
  2991  0174  2976               	
  2992                           l402:	
  2993  0175                     	goto	l1423
  2994  0175  2976               	line	29
  2995                           	
  2996                           l403:	
  2997  0176                     	line	30
  2998                           	
  2999                           l1423:	
  3000  0176                     	movlw	01h
  3001  0176  3001               	movwf	(??___aldiv+0)+0
  3002  0177  00BF               u1015:
  3003  0178                     	clrc
  3004  0178  1003               	rlf	(___aldiv@quotient),f
  3005  0179  0DC2               	rlf	(___aldiv@quotient+1),f
  3006  017A  0DC3               	rlf	(___aldiv@quotient+2),f
  3007  017B  0DC4               	rlf	(___aldiv@quotient+3),f
  3008  017C  0DC5               	decfsz	(??___aldiv+0)+0
  3009  017D  0BBF               	goto	u1015
  3010  017E  2978               	line	31
  3011                           	
  3012                           l1425:	
  3013  017F                     	movf	(___aldiv@divisor+3),w
  3014  017F  083A               	subwf	(___aldiv@dividend+3),w
  3015  0180  023E               	skipz
  3016  0181  1D03               	goto	u1025
  3017  0182  298D               	movf	(___aldiv@divisor+2),w
  3018  0183  0839               	subwf	(___aldiv@dividend+2),w
  3019  0184  023D               	skipz
  3020  0185  1D03               	goto	u1025
  3021  0186  298D               	movf	(___aldiv@divisor+1),w
  3022  0187  0838               	subwf	(___aldiv@dividend+1),w
  3023  0188  023C               	skipz
  3024  0189  1D03               	goto	u1025
  3025  018A  298D               	movf	(___aldiv@divisor),w
  3026  018B  0837               	subwf	(___aldiv@dividend),w
  3027  018C  023B               u1025:
  3028  018D                     	skipc
  3029  018D  1C03               	goto	u1021
  3030  018E  2990               	goto	u1020
  3031  018F  2991               u1021:
  3032  0190                     	goto	l1431
  3033  0190  29A1               u1020:
  3034  0191                     	line	32
  3035                           	
  3036                           l1427:	
  3037  0191                     	movf	(___aldiv@divisor),w
  3038  0191  0837               	subwf	(___aldiv@dividend),f
  3039  0192  02BB               	movf	(___aldiv@divisor+1),w
  3040  0193  0838               	skipc
  3041  0194  1C03               	incfsz	(___aldiv@divisor+1),w
  3042  0195  0F38               	subwf	(___aldiv@dividend+1),f
  3043  0196  02BC               	movf	(___aldiv@divisor+2),w
  3044  0197  0839               	skipc
  3045  0198  1C03               	incfsz	(___aldiv@divisor+2),w
  3046  0199  0F39               	subwf	(___aldiv@dividend+2),f
  3047  019A  02BD               	movf	(___aldiv@divisor+3),w
  3048  019B  083A               	skipc
  3049  019C  1C03               	incfsz	(___aldiv@divisor+3),w
  3050  019D  0F3A               	subwf	(___aldiv@dividend+3),f
  3051  019E  02BE               	line	33
  3052                           	
  3053                           l1429:	
  3054  019F                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  3055  019F  1442               	goto	l1431
  3056  01A0  29A1               	line	34
  3057                           	
  3058                           l404:	
  3059  01A1                     	line	35
  3060                           	
  3061                           l1431:	
  3062  01A1                     	movlw	01h
  3063  01A1  3001               u1035:
  3064  01A2                     	clrc
  3065  01A2  1003               	rrf	(___aldiv@divisor+3),f
  3066  01A3  0CBA               	rrf	(___aldiv@divisor+2),f
  3067  01A4  0CB9               	rrf	(___aldiv@divisor+1),f
  3068  01A5  0CB8               	rrf	(___aldiv@divisor),f
  3069  01A6  0CB7               	addlw	-1
  3070  01A7  3EFF               	skipz
  3071  01A8  1D03               	goto	u1035
  3072  01A9  29A2               
  3073                           	line	36
  3074                           	
  3075                           l1433:	
  3076  01AA                     	movlw	01h
  3077  01AA  3001               	subwf	(___aldiv@counter),f
  3078  01AB  02C0               	btfss	status,2
  3079  01AC  1D03               	goto	u1041
  3080  01AD  29AF               	goto	u1040
  3081  01AE  29B0               u1041:
  3082  01AF                     	goto	l1423
  3083  01AF  2976               u1040:
  3084  01B0                     	goto	l1435
  3085  01B0  29B2               	
  3086                           l405:	
  3087  01B1                     	goto	l1435
  3088  01B1  29B2               	line	37
  3089                           	
  3090                           l399:	
  3091  01B2                     	line	38
  3092                           	
  3093                           l1435:	
  3094  01B2                     	movf	((___aldiv@sign)),w
  3095  01B2  0841               	btfsc	status,2
  3096  01B3  1903               	goto	u1051
  3097  01B4  29B6               	goto	u1050
  3098  01B5  29B7               u1051:
  3099  01B6                     	goto	l1439
  3100  01B6  29C3               u1050:
  3101  01B7                     	line	39
  3102                           	
  3103                           l1437:	
  3104  01B7                     	comf	(___aldiv@quotient),f
  3105  01B7  09C2               	comf	(___aldiv@quotient+1),f
  3106  01B8  09C3               	comf	(___aldiv@quotient+2),f
  3107  01B9  09C4               	comf	(___aldiv@quotient+3),f
  3108  01BA  09C5               	incf	(___aldiv@quotient),f
  3109  01BB  0AC2               	skipnz
  3110  01BC  1903               	incf	(___aldiv@quotient+1),f
  3111  01BD  0AC3               	skipnz
  3112  01BE  1903               	incf	(___aldiv@quotient+2),f
  3113  01BF  0AC4               	skipnz
  3114  01C0  1903               	incf	(___aldiv@quotient+3),f
  3115  01C1  0AC5               	goto	l1439
  3116  01C2  29C3               	
  3117                           l406:	
  3118  01C3                     	line	40
  3119                           	
  3120                           l1439:	
  3121  01C3                     	movf	(___aldiv@quotient+3),w
  3122  01C3  0845               	movwf	(?___aldiv+3)
  3123  01C4  00BA               	movf	(___aldiv@quotient+2),w
  3124  01C5  0844               	movwf	(?___aldiv+2)
  3125  01C6  00B9               	movf	(___aldiv@quotient+1),w
  3126  01C7  0843               	movwf	(?___aldiv+1)
  3127  01C8  00B8               	movf	(___aldiv@quotient),w
  3128  01C9  0842               	movwf	(?___aldiv)
  3129  01CA  00B7               
  3130                           	goto	l407
  3131  01CB  29CC               	
  3132                           l1441:	
  3133  01CC                     	line	41
  3134                           	
  3135                           l407:	
  3136  01CC                     	return
  3137  01CC  0008               	opt stack 0
  3138                           GLOBAL	__end_of___aldiv
  3139                           	__end_of___aldiv:
  3140  01CD                     	signat	___aldiv,8316
  3141                           	global	_dispLCDstr
  3142                           
  3143 ;; *************** function _dispLCDstr *****************
  3144 ;; Defined at:
  3145 ;;		line 164 in file "lcd.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  str             1    4[BANK0 ] PTR const unsigned char 
  3148 ;;		 -> STR_1(16), 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       1       0       0       0
  3161 ;;      Locals:         0       0       0       0       0
  3162 ;;      Temps:          0       1       0       0       0
  3163 ;;      Totals:         0       2       0       0       0
  3164 ;;Total ram usage:        2 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    4
  3167 ;; This function calls:
  3168 ;;		_dispLCD_dataReg
  3169 ;;		_dispLCD_lincol
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3175                           	file	"lcd.c"
  3176                           	line	164
  3177                           global __ptext7
  3178                           __ptext7:	;psect for function _dispLCDstr
  3179  0486                     psect	text7
  3180                           	file	"lcd.c"
  3181                           	line	164
  3182                           	global	__size_of_dispLCDstr
  3183                           	__size_of_dispLCDstr	equ	__end_of_dispLCDstr-_dispLCDstr
  3184  0045                     	
  3185                           _dispLCDstr:	
  3186  0486                     ;incstack = 0
  3187                           	opt	stack 3
  3188                           ; Regs used in _dispLCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3189                           	line	166
  3190                           	
  3191                           l1865:	
  3192  0486                     ;lcd.c: 164: void dispLCDstr( const char * str );lcd.c: 165: {;lcd.c: 166:     dispLCD_l
                                 incol( 0, 0 );
  3193                           	bcf	status, 5	;RP0=0, select bank0
  3194  0486  1283               	bcf	status, 6	;RP1=0, select bank0
  3195  0487  1303               	clrf	(dispLCD_lincol@col)
  3196  0488  01A1               	movlw	low(0)
  3197  0489  3000               	fcall	_dispLCD_lincol
  3198  048A  120A  118A  2628  120A  118A  	line	168
  3199                           ;lcd.c: 168:     while( *str )
  3200                           	goto	l1875
  3201  048F  2CBB               	
  3202                           l102:	
  3203  0490                     	line	170
  3204                           	
  3205                           l1867:	
  3206  0490                     ;lcd.c: 169:     {;lcd.c: 170:         if( *str == '\n' )
  3207                           	bcf	status, 5	;RP0=0, select bank0
  3208  0490  1283               	bcf	status, 6	;RP1=0, select bank0
  3209  0491  1303               	movf	(dispLCDstr@str),w
  3210  0492  0824               	movwf	fsr0
  3211  0493  0084               	fcall	stringdir
  3212  0494  120A  118A  2612  120A  118A  	xorlw	0Ah
  3213  0499  3A0A               	skipz
  3214  049A  1D03               	goto	u1821
  3215  049B  2C9D               	goto	u1820
  3216  049C  2C9E               u1821:
  3217  049D                     	goto	l1871
  3218  049D  2CA6               u1820:
  3219  049E                     	line	172
  3220                           	
  3221                           l1869:	
  3222  049E                     ;lcd.c: 171:         {;lcd.c: 172:             dispLCD_lincol(1,0);
  3223                           	clrf	(dispLCD_lincol@col)
  3224  049E  01A1               	movlw	low(01h)
  3225  049F  3001               	fcall	_dispLCD_lincol
  3226  04A0  120A  118A  2628  120A  118A  	goto	l1871
  3227  04A5  2CA6               	line	173
  3228                           ;lcd.c: 173:         }
  3229                           	
  3230                           l103:	
  3231  04A6                     	line	174
  3232                           	
  3233                           l1871:	
  3234  04A6                     ;lcd.c: 174:         dispLCD_dataReg( *str );
  3235                           	bcf	status, 5	;RP0=0, select bank0
  3236  04A6  1283               	bcf	status, 6	;RP1=0, select bank0
  3237  04A7  1303               	movf	(dispLCDstr@str),w
  3238  04A8  0824               	movwf	fsr0
  3239  04A9  0084               	fcall	stringdir
  3240  04AA  120A  118A  2612  120A  118A  	fcall	_dispLCD_dataReg
  3241  04AF  120A  118A  2572  120A  118A  	line	175
  3242                           	
  3243                           l1873:	
  3244  04B4                     ;lcd.c: 175:         ++str;
  3245                           	movlw	low(01h)
  3246  04B4  3001               	bcf	status, 5	;RP0=0, select bank0
  3247  04B5  1283               	bcf	status, 6	;RP1=0, select bank0
  3248  04B6  1303               	movwf	(??_dispLCDstr+0)+0
  3249  04B7  00A5               	movf	(??_dispLCDstr+0)+0,w
  3250  04B8  0825               	addwf	(dispLCDstr@str),f
  3251  04B9  07A4               	goto	l1875
  3252  04BA  2CBB               	line	176
  3253                           ;lcd.c: 176:     }
  3254                           	
  3255                           l101:	
  3256  04BB                     	line	168
  3257                           	
  3258                           l1875:	
  3259  04BB                     ;lcd.c: 168:     while( *str )
  3260                           	bcf	status, 5	;RP0=0, select bank0
  3261  04BB  1283               	bcf	status, 6	;RP1=0, select bank0
  3262  04BC  1303               	movf	(dispLCDstr@str),w
  3263  04BD  0824               	movwf	fsr0
  3264  04BE  0084               	fcall	stringdir
  3265  04BF  120A  118A  2612  120A  118A  	xorlw	0
  3266  04C4  3A00               	skipz
  3267  04C5  1D03               	goto	u1831
  3268  04C6  2CC8               	goto	u1830
  3269  04C7  2CC9               u1831:
  3270  04C8                     	goto	l1867
  3271  04C8  2C90               u1830:
  3272  04C9                     	goto	l105
  3273  04C9  2CCA               	
  3274                           l104:	
  3275  04CA                     	line	177
  3276                           	
  3277                           l105:	
  3278  04CA                     	return
  3279  04CA  0008               	opt stack 0
  3280                           GLOBAL	__end_of_dispLCDstr
  3281                           	__end_of_dispLCDstr:
  3282  04CB                     	signat	_dispLCDstr,4217
  3283                           	global	_dispLCD_num
  3284                           
  3285 ;; *************** function _dispLCD_num *****************
  3286 ;; Defined at:
  3287 ;;		line 180 in file "lcd.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  lin             1   46[BANK0 ] unsigned char 
  3290 ;;  col             1   47[BANK0 ] unsigned char 
  3291 ;;  num             2   48[BANK0 ] int 
  3292 ;;  tam             1   50[BANK0 ] unsigned char 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  div             2   56[BANK0 ] int 
  3295 ;;  sinal           1   55[BANK0 ] unsigned char 
  3296 ;;  size            1   54[BANK0 ] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         0       5       0       0       0
  3307 ;;      Locals:         0       4       0       0       0
  3308 ;;      Temps:          0       3       0       0       0
  3309 ;;      Totals:         0      12       0       0       0
  3310 ;;Total ram usage:       12 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    4
  3313 ;; This function calls:
  3314 ;;		___awdiv
  3315 ;;		___awmod
  3316 ;;		_dispLCD_dataReg
  3317 ;;		_dispLCD_lincol
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3323                           	line	180
  3324                           global __ptext8
  3325                           __ptext8:	;psect for function _dispLCD_num
  3326  0038                     psect	text8
  3327                           	file	"lcd.c"
  3328                           	line	180
  3329                           	global	__size_of_dispLCD_num
  3330                           	__size_of_dispLCD_num	equ	__end_of_dispLCD_num-_dispLCD_num
  3331  00EF                     	
  3332                           _dispLCD_num:	
  3333  0038                     ;incstack = 0
  3334                           	opt	stack 3
  3335                           ; Regs used in _dispLCD_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3336                           	line	187
  3337                           	
  3338                           l1877:	
  3339  0038                     ;lcd.c: 180: void dispLCD_num( unsigned char lin, unsigned char col,;lcd.c: 181:        
                                              int num, unsigned char tam );lcd.c: 182: {;lcd.c: 183:     int div;;lcd.c: 
                                 184:     unsigned char size;;lcd.c: 185:     char sinal;;lcd.c: 187:     sinal = num < 0
                                 ;
  3340                           	bcf	status, 5	;RP0=0, select bank0
  3341  0038  1283               	bcf	status, 6	;RP1=0, select bank0
  3342  0039  1303               	btfsc	(dispLCD_num@num+1),7
  3343  003A  1BD1               	goto	u1841
  3344  003B  283D               	goto	u1840
  3345  003C  283F               u1841:
  3346  003D                     	movlw	1
  3347  003D  3001               	goto	u1850
  3348  003E  2840               u1840:
  3349  003F                     	movlw	0
  3350  003F  3000               u1850:
  3351  0040                     	movwf	(??_dispLCD_num+0)+0
  3352  0040  00D3               	movf	(??_dispLCD_num+0)+0,w
  3353  0041  0853               	movwf	(dispLCD_num@sinal)
  3354  0042  00D7               	line	188
  3355                           	
  3356                           l1879:	
  3357  0043                     ;lcd.c: 188:     if( sinal )
  3358                           	movf	((dispLCD_num@sinal)),w
  3359  0043  0857               	btfsc	status,2
  3360  0044  1903               	goto	u1861
  3361  0045  2847               	goto	u1860
  3362  0046  2848               u1861:
  3363  0047                     	goto	l1883
  3364  0047  284E               u1860:
  3365  0048                     	line	189
  3366                           	
  3367                           l1881:	
  3368  0048                     ;lcd.c: 189:         num = (~num) + 1;
  3369                           	comf	(dispLCD_num@num),f
  3370  0048  09D0               	comf	(dispLCD_num@num+1),f
  3371  0049  09D1               	incf	(dispLCD_num@num),f
  3372  004A  0AD0               	skipnz
  3373  004B  1903               	incf	(dispLCD_num@num+1),f
  3374  004C  0AD1               	goto	l1883
  3375  004D  284E               	
  3376                           l108:	
  3377  004E                     	line	191
  3378                           	
  3379                           l1883:	
  3380  004E                     ;lcd.c: 191:     dispLCD_lincol(lin, col);
  3381                           	movf	(dispLCD_num@col),w
  3382  004E  084F               	movwf	(??_dispLCD_num+0)+0
  3383  004F  00D3               	movf	(??_dispLCD_num+0)+0,w
  3384  0050  0853               	movwf	(dispLCD_lincol@col)
  3385  0051  00A1               	movf	(dispLCD_num@lin),w
  3386  0052  084E               	fcall	_dispLCD_lincol
  3387  0053  120A  118A  2628  120A  118A  	line	193
  3388                           	
  3389                           l1885:	
  3390  0058                     ;lcd.c: 193:     div=10000;
  3391                           	movlw	010h
  3392  0058  3010               	bcf	status, 5	;RP0=0, select bank0
  3393  0059  1283               	bcf	status, 6	;RP1=0, select bank0
  3394  005A  1303               	movwf	(dispLCD_num@div)
  3395  005B  00D8               	movlw	027h
  3396  005C  3027               	movwf	((dispLCD_num@div))+1
  3397  005D  00D9               	line	194
  3398                           	
  3399                           l1887:	
  3400  005E                     ;lcd.c: 194:     size = 5;
  3401                           	movlw	low(05h)
  3402  005E  3005               	movwf	(??_dispLCD_num+0)+0
  3403  005F  00D3               	movf	(??_dispLCD_num+0)+0,w
  3404  0060  0853               	movwf	(dispLCD_num@size)
  3405  0061  00D6               	line	195
  3406                           ;lcd.c: 195:     while( div >= 1 )
  3407                           	goto	l1895
  3408  0062  2892               	
  3409                           l110:	
  3410  0063                     	line	197
  3411                           	
  3412                           l1889:	
  3413  0063                     ;lcd.c: 196:     {;lcd.c: 197:         if( num/div == 0 )
  3414                           	bcf	status, 5	;RP0=0, select bank0
  3415  0063  1283               	bcf	status, 6	;RP1=0, select bank0
  3416  0064  1303               	movf	(dispLCD_num@div+1),w
  3417  0065  0859               	movwf	(___awdiv@divisor+1)
  3418  0066  00A1               	movf	(dispLCD_num@div),w
  3419  0067  0858               	movwf	(___awdiv@divisor)
  3420  0068  00A0               	movf	(dispLCD_num@num+1),w
  3421  0069  0851               	movwf	(___awdiv@dividend+1)
  3422  006A  00A3               	movf	(dispLCD_num@num),w
  3423  006B  0850               	movwf	(___awdiv@dividend)
  3424  006C  00A2               	fcall	___awdiv
  3425  006D  120A  118A  22BA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3426  0072  1283               	bcf	status, 6	;RP1=0, select bank0
  3427  0073  1303               	movf	((0+(?___awdiv))),w
  3428  0074  0820               iorwf	((1+(?___awdiv))),w
  3429  0075  0421               	btfss	status,2
  3430  0076  1D03               	goto	u1871
  3431  0077  2879               	goto	u1870
  3432  0078  287A               u1871:
  3433  0079                     	goto	l1901
  3434  0079  28AC               u1870:
  3435  007A                     	line	198
  3436                           	
  3437                           l1891:	
  3438  007A                     ;lcd.c: 198:             --size;
  3439                           	movlw	01h
  3440  007A  3001               	subwf	(dispLCD_num@size),f
  3441  007B  02D6               	goto	l1893
  3442  007C  287E               	line	199
  3443                           ;lcd.c: 199:         else
  3444                           	
  3445                           l111:	
  3446  007D                     	line	200
  3447                           ;lcd.c: 200:             break;
  3448                           	goto	l1901
  3449  007D  28AC               	
  3450                           l112:	
  3451  007E                     	line	201
  3452                           	
  3453                           l1893:	
  3454  007E                     ;lcd.c: 201:         div/=10;
  3455                           	movlw	0Ah
  3456  007E  300A               	movwf	(___awdiv@divisor)
  3457  007F  00A0               	movlw	0
  3458  0080  3000               	movwf	((___awdiv@divisor))+1
  3459  0081  00A1               	movf	(dispLCD_num@div+1),w
  3460  0082  0859               	movwf	(___awdiv@dividend+1)
  3461  0083  00A3               	movf	(dispLCD_num@div),w
  3462  0084  0858               	movwf	(___awdiv@dividend)
  3463  0085  00A2               	fcall	___awdiv
  3464  0086  120A  118A  22BA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3465  008B  1283               	bcf	status, 6	;RP1=0, select bank0
  3466  008C  1303               	movf	(1+(?___awdiv)),w
  3467  008D  0821               	movwf	(dispLCD_num@div+1)
  3468  008E  00D9               	movf	(0+(?___awdiv)),w
  3469  008F  0820               	movwf	(dispLCD_num@div)
  3470  0090  00D8               	goto	l1895
  3471  0091  2892               	line	202
  3472                           ;lcd.c: 202:     }
  3473                           	
  3474                           l109:	
  3475  0092                     	line	195
  3476                           	
  3477                           l1895:	
  3478  0092                     ;lcd.c: 195:     while( div >= 1 )
  3479                           	movf	(dispLCD_num@div+1),w
  3480  0092  0859               	xorlw	80h
  3481  0093  3A80               	movwf	btemp+1
  3482  0094  00FF               	movlw	(0)^80h
  3483  0095  3080               	subwf	btemp+1,w
  3484  0096  027F               	skipz
  3485  0097  1D03               	goto	u1885
  3486  0098  289B               	movlw	01h
  3487  0099  3001               	subwf	(dispLCD_num@div),w
  3488  009A  0258               u1885:
  3489  009B                     
  3490                           	skipnc
  3491  009B  1803               	goto	u1881
  3492  009C  289E               	goto	u1880
  3493  009D  289F               u1881:
  3494  009E                     	goto	l1889
  3495  009E  2863               u1880:
  3496  009F                     	goto	l1901
  3497  009F  28AC               	
  3498                           l113:	
  3499  00A0                     	line	204
  3500                           ;lcd.c: 204:     while( tam > (size+sinal) && tam > 1 )
  3501                           	goto	l1901
  3502  00A0  28AC               	
  3503                           l115:	
  3504  00A1                     	line	206
  3505                           	
  3506                           l1897:	
  3507  00A1                     ;lcd.c: 205:     {;lcd.c: 206:         dispLCD_dataReg(' ');
  3508                           	movlw	low(020h)
  3509  00A1  3020               	fcall	_dispLCD_dataReg
  3510  00A2  120A  118A  2572  120A  118A  	line	207
  3511                           	
  3512                           l1899:	
  3513  00A7                     ;lcd.c: 207:         --tam;
  3514                           	movlw	01h
  3515  00A7  3001               	bcf	status, 5	;RP0=0, select bank0
  3516  00A8  1283               	bcf	status, 6	;RP1=0, select bank0
  3517  00A9  1303               	subwf	(dispLCD_num@tam),f
  3518  00AA  02D2               	goto	l1901
  3519  00AB  28AC               	line	208
  3520                           ;lcd.c: 208:     }
  3521                           	
  3522                           l114:	
  3523  00AC                     	line	204
  3524                           	
  3525                           l1901:	
  3526  00AC                     ;lcd.c: 204:     while( tam > (size+sinal) && tam > 1 )
  3527                           	bcf	status, 5	;RP0=0, select bank0
  3528  00AC  1283               	bcf	status, 6	;RP1=0, select bank0
  3529  00AD  1303               	movf	(dispLCD_num@size),w
  3530  00AE  0856               	addwf	(dispLCD_num@sinal),w
  3531  00AF  0757               	movwf	(??_dispLCD_num+0)+0
  3532  00B0  00D3               	clrf	(??_dispLCD_num+0)+0+1
  3533  00B1  01D4               	rlf	1+(??_dispLCD_num+0)+0,f
  3534  00B2  0DD4               	
  3535                           	movf	1+(??_dispLCD_num+0)+0,w
  3536  00B3  0854               	xorlw	80h
  3537  00B4  3A80               	movwf	(??_dispLCD_num+2)+0
  3538  00B5  00D5               	movlw	80h
  3539  00B6  3080               	subwf	(??_dispLCD_num+2)+0,w
  3540  00B7  0255               	skipz
  3541  00B8  1D03               	goto	u1895
  3542  00B9  28BC               	movf	(dispLCD_num@tam),w
  3543  00BA  0852               	subwf	0+(??_dispLCD_num+0)+0,w
  3544  00BB  0253               u1895:
  3545  00BC                     
  3546                           	skipnc
  3547  00BC  1803               	goto	u1891
  3548  00BD  28BF               	goto	u1890
  3549  00BE  28C0               u1891:
  3550  00BF                     	goto	l1905
  3551  00BF  28CA               u1890:
  3552  00C0                     	
  3553                           l1903:	
  3554  00C0                     	movlw	low(02h)
  3555  00C0  3002               	bcf	status, 5	;RP0=0, select bank0
  3556  00C1  1283               	bcf	status, 6	;RP1=0, select bank0
  3557  00C2  1303               	subwf	(dispLCD_num@tam),w
  3558  00C3  0252               	skipnc
  3559  00C4  1803               	goto	u1901
  3560  00C5  28C7               	goto	u1900
  3561  00C6  28C8               u1901:
  3562  00C7                     	goto	l1897
  3563  00C7  28A1               u1900:
  3564  00C8                     	goto	l1905
  3565  00C8  28CA               	
  3566                           l117:	
  3567  00C9                     	goto	l1905
  3568  00C9  28CA               	
  3569                           l118:	
  3570  00CA                     	line	210
  3571                           	
  3572                           l1905:	
  3573  00CA                     ;lcd.c: 210:     if( sinal )
  3574                           	bcf	status, 5	;RP0=0, select bank0
  3575  00CA  1283               	bcf	status, 6	;RP1=0, select bank0
  3576  00CB  1303               	movf	((dispLCD_num@sinal)),w
  3577  00CC  0857               	btfsc	status,2
  3578  00CD  1903               	goto	u1911
  3579  00CE  28D0               	goto	u1910
  3580  00CF  28D1               u1911:
  3581  00D0                     	goto	l120
  3582  00D0  28D8               u1910:
  3583  00D1                     	line	211
  3584                           	
  3585                           l1907:	
  3586  00D1                     ;lcd.c: 211:         dispLCD_dataReg('-');
  3587                           	movlw	low(02Dh)
  3588  00D1  302D               	fcall	_dispLCD_dataReg
  3589  00D2  120A  118A  2572  120A  118A  	goto	l120
  3590  00D7  28D8               	
  3591                           l119:	
  3592  00D8                     	line	213
  3593                           ;lcd.c: 213:     do
  3594                           	
  3595                           l120:	
  3596  00D8                     	line	215
  3597                           ;lcd.c: 214:     {;lcd.c: 215:         dispLCD_dataReg( (unsigned char)(num / div) + '0'
                                  );
  3598                           	bcf	status, 5	;RP0=0, select bank0
  3599  00D8  1283               	bcf	status, 6	;RP1=0, select bank0
  3600  00D9  1303               	movf	(dispLCD_num@div+1),w
  3601  00DA  0859               	movwf	(___awdiv@divisor+1)
  3602  00DB  00A1               	movf	(dispLCD_num@div),w
  3603  00DC  0858               	movwf	(___awdiv@divisor)
  3604  00DD  00A0               	movf	(dispLCD_num@num+1),w
  3605  00DE  0851               	movwf	(___awdiv@dividend+1)
  3606  00DF  00A3               	movf	(dispLCD_num@num),w
  3607  00E0  0850               	movwf	(___awdiv@dividend)
  3608  00E1  00A2               	fcall	___awdiv
  3609  00E2  120A  118A  22BA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3610  00E7  1283               	bcf	status, 6	;RP1=0, select bank0
  3611  00E8  1303               	movf	(0+(?___awdiv)),w
  3612  00E9  0820               	addlw	030h
  3613  00EA  3E30               	fcall	_dispLCD_dataReg
  3614  00EB  120A  118A  2572  120A  118A  	line	216
  3615                           ;lcd.c: 216:         num = num % div;
  3616                           	bcf	status, 5	;RP0=0, select bank0
  3617  00F0  1283               	bcf	status, 6	;RP1=0, select bank0
  3618  00F1  1303               	movf	(dispLCD_num@div+1),w
  3619  00F2  0859               	movwf	(___awmod@divisor+1)
  3620  00F3  00A1               	movf	(dispLCD_num@div),w
  3621  00F4  0858               	movwf	(___awmod@divisor)
  3622  00F5  00A0               	movf	(dispLCD_num@num+1),w
  3623  00F6  0851               	movwf	(___awmod@dividend+1)
  3624  00F7  00A3               	movf	(dispLCD_num@num),w
  3625  00F8  0850               	movwf	(___awmod@dividend)
  3626  00F9  00A2               	fcall	___awmod
  3627  00FA  120A  118A  232D  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3628  00FF  1283               	bcf	status, 6	;RP1=0, select bank0
  3629  0100  1303               	movf	(1+(?___awmod)),w
  3630  0101  0821               	movwf	(dispLCD_num@num+1)
  3631  0102  00D1               	movf	(0+(?___awmod)),w
  3632  0103  0820               	movwf	(dispLCD_num@num)
  3633  0104  00D0               	line	217
  3634                           ;lcd.c: 217:         div/=10;
  3635                           	movlw	0Ah
  3636  0105  300A               	movwf	(___awdiv@divisor)
  3637  0106  00A0               	movlw	0
  3638  0107  3000               	movwf	((___awdiv@divisor))+1
  3639  0108  00A1               	movf	(dispLCD_num@div+1),w
  3640  0109  0859               	movwf	(___awdiv@dividend+1)
  3641  010A  00A3               	movf	(dispLCD_num@div),w
  3642  010B  0858               	movwf	(___awdiv@dividend)
  3643  010C  00A2               	fcall	___awdiv
  3644  010D  120A  118A  22BA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3645  0112  1283               	bcf	status, 6	;RP1=0, select bank0
  3646  0113  1303               	movf	(1+(?___awdiv)),w
  3647  0114  0821               	movwf	(dispLCD_num@div+1)
  3648  0115  00D9               	movf	(0+(?___awdiv)),w
  3649  0116  0820               	movwf	(dispLCD_num@div)
  3650  0117  00D8               	line	218
  3651                           	
  3652                           l1909:	
  3653  0118                     ;lcd.c: 218:     }
  3654                           	movf	(dispLCD_num@div+1),w
  3655  0118  0859               	xorlw	80h
  3656  0119  3A80               	movwf	btemp+1
  3657  011A  00FF               	movlw	(0)^80h
  3658  011B  3080               	subwf	btemp+1,w
  3659  011C  027F               	skipz
  3660  011D  1D03               	goto	u1925
  3661  011E  2921               	movlw	01h
  3662  011F  3001               	subwf	(dispLCD_num@div),w
  3663  0120  0258               u1925:
  3664  0121                     
  3665                           	skipnc
  3666  0121  1803               	goto	u1921
  3667  0122  2924               	goto	u1920
  3668  0123  2925               u1921:
  3669  0124                     	goto	l120
  3670  0124  28D8               u1920:
  3671  0125                     	goto	l122
  3672  0125  2926               	
  3673                           l121:	
  3674  0126                     	line	220
  3675                           	
  3676                           l122:	
  3677  0126                     	return
  3678  0126  0008               	opt stack 0
  3679                           GLOBAL	__end_of_dispLCD_num
  3680                           	__end_of_dispLCD_num:
  3681  0127                     	signat	_dispLCD_num,16505
  3682                           	global	_dispLCD_lincol
  3683                           
  3684 ;; *************** function _dispLCD_lincol *****************
  3685 ;; Defined at:
  3686 ;;		line 126 in file "lcd.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  lin             1    wreg     unsigned char 
  3689 ;;  col             1    1[BANK0 ] unsigned char 
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;  lin             1    3[BANK0 ] unsigned char 
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0, pclath, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3701 ;;      Params:         0       1       0       0       0
  3702 ;;      Locals:         0       1       0       0       0
  3703 ;;      Temps:          0       1       0       0       0
  3704 ;;      Totals:         0       3       0       0       0
  3705 ;;Total ram usage:        3 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    3
  3708 ;; This function calls:
  3709 ;;		_dispLCD_instReg
  3710 ;; This function is called by:
  3711 ;;		_dispLCDstr
  3712 ;;		_dispLCD_num
  3713 ;;		_dispLCD
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3717                           	line	126
  3718                           global __ptext9
  3719                           __ptext9:	;psect for function _dispLCD_lincol
  3720  0628                     psect	text9
  3721                           	file	"lcd.c"
  3722                           	line	126
  3723                           	global	__size_of_dispLCD_lincol
  3724                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  3725  0015                     	
  3726                           _dispLCD_lincol:	
  3727  0628                     ;incstack = 0
  3728                           	opt	stack 3
  3729                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  3730                           ;dispLCD_lincol@lin stored from wreg
  3731                           	bcf	status, 5	;RP0=0, select bank0
  3732  0628  1283               	bcf	status, 6	;RP1=0, select bank0
  3733  0629  1303               	movwf	(dispLCD_lincol@lin)
  3734  062A  00A3               	line	128
  3735                           	
  3736                           l1753:	
  3737  062B                     ;lcd.c: 126: void dispLCD_lincol( unsigned char lin, unsigned char col);lcd.c: 127: {;lc
                                 d.c: 128:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3738                           	movf	(dispLCD_lincol@lin),w
  3739  062B  0823               	movwf	(??_dispLCD_lincol+0)+0
  3740  062C  00A2               	movlw	06h
  3741  062D  3006               u1605:
  3742  062E                     	clrc
  3743  062E  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  3744  062F  0DA2               	addlw	-1
  3745  0630  3EFF               	skipz
  3746  0631  1D03               	goto	u1605
  3747  0632  2E2E               	movf	(dispLCD_lincol@col),w
  3748  0633  0821               	addwf	0+(??_dispLCD_lincol+0)+0,w
  3749  0634  0722               	andlw	07Fh
  3750  0635  397F               	addlw	080h
  3751  0636  3E80               	fcall	_dispLCD_instReg
  3752  0637  120A  118A  21CD  120A  118A  	line	129
  3753                           	
  3754                           l89:	
  3755  063C                     	return
  3756  063C  0008               	opt stack 0
  3757                           GLOBAL	__end_of_dispLCD_lincol
  3758                           	__end_of_dispLCD_lincol:
  3759  063D                     	signat	_dispLCD_lincol,8313
  3760                           	global	_dispLCD_dataReg
  3761                           
  3762 ;; *************** function _dispLCD_dataReg *****************
  3763 ;; Defined at:
  3764 ;;		line 110 in file "lcd.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  d               1    wreg     unsigned char 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  d               1    5[COMMON] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3778 ;;      Params:         0       0       0       0       0
  3779 ;;      Locals:         1       0       0       0       0
  3780 ;;      Temps:          1       0       0       0       0
  3781 ;;      Totals:         2       0       0       0       0
  3782 ;;Total ram usage:        2 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    2
  3785 ;; This function calls:
  3786 ;;		Nothing
  3787 ;; This function is called by:
  3788 ;;		_dispLCDstr
  3789 ;;		_dispLCD_num
  3790 ;;		_dispLCD
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3794                           	line	110
  3795                           global __ptext10
  3796                           __ptext10:	;psect for function _dispLCD_dataReg
  3797  0572                     psect	text10
  3798                           	file	"lcd.c"
  3799                           	line	110
  3800                           	global	__size_of_dispLCD_dataReg
  3801                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  3802  002B                     	
  3803                           _dispLCD_dataReg:	
  3804  0572                     ;incstack = 0
  3805                           	opt	stack 4
  3806                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  3807                           ;dispLCD_dataReg@d stored from wreg
  3808                           	movwf	(dispLCD_dataReg@d)
  3809  0572  00F5               	line	112
  3810                           	
  3811                           l1369:	
  3812  0573                     ;lcd.c: 110: void dispLCD_dataReg( unsigned char d );lcd.c: 111: {;lcd.c: 112:     LCDbi
                                 ts.RS = 1;
  3813                           	bcf	status, 5	;RP0=0, select bank0
  3814  0573  1283               	bcf	status, 6	;RP1=0, select bank0
  3815  0574  1303               	bsf	(8),4	;volatile
  3816  0575  1608               	line	113
  3817                           	
  3818                           l1371:	
  3819  0576                     ;lcd.c: 113:     LCDbits.BUS = d >> 4;
  3820                           	movf	(dispLCD_dataReg@d),w
  3821  0576  0875               	movwf	(??_dispLCD_dataReg+0)+0
  3822  0577  00F4               	movlw	04h
  3823  0578  3004               u895:
  3824  0579                     	clrc
  3825  0579  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  3826  057A  0CF4               	addlw	-1
  3827  057B  3EFF               	skipz
  3828  057C  1D03               	goto	u895
  3829  057D  2D79               	movf	(8),w	;volatile
  3830  057E  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3831  057F  0674               	andlw	not ((1<<4)-1)
  3832  0580  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3833  0581  0674               	movwf	(8)	;volatile
  3834  0582  0088               	line	114
  3835                           	
  3836                           l1373:	
  3837  0583                     ;lcd.c: 114:     LCDbits.EN = 0;
  3838                           	bcf	(8),5	;volatile
  3839  0583  1288               	line	115
  3840                           	
  3841                           l1375:	
  3842  0584                     ;lcd.c: 115:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3843                           	opt asmopt_push
  3844                           opt asmopt_off
  3845                           	movlw	13
  3846  0584  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  3847  0585  00F4               	u1947:
  3848  0586                     decfsz	(??_dispLCD_dataReg+0)+0,f
  3849  0586  0BF4               	goto	u1947
  3850  0587  2D86               opt asmopt_pop
  3851                           
  3852                           	line	116
  3853                           	
  3854                           l1377:	
  3855  0588                     ;lcd.c: 116:     LCDbits.EN = 1;
  3856                           	bcf	status, 5	;RP0=0, select bank0
  3857  0588  1283               	bcf	status, 6	;RP1=0, select bank0
  3858  0589  1303               	bsf	(8),5	;volatile
  3859  058A  1688               	line	118
  3860                           	
  3861                           l1379:	
  3862  058B                     ;lcd.c: 118:     LCDbits.RS = 1;
  3863                           	bsf	(8),4	;volatile
  3864  058B  1608               	line	119
  3865                           	
  3866                           l1381:	
  3867  058C                     ;lcd.c: 119:     LCDbits.BUS = d & 0x0F;
  3868                           	movlw	low(0Fh)
  3869  058C  300F               	andwf	(dispLCD_dataReg@d),w
  3870  058D  0575               	movwf	(??_dispLCD_dataReg+0)+0
  3871  058E  00F4               	movf	(8),w	;volatile
  3872  058F  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3873  0590  0674               	andlw	not ((1<<4)-1)
  3874  0591  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  3875  0592  0674               	movwf	(8)	;volatile
  3876  0593  0088               	line	120
  3877                           	
  3878                           l1383:	
  3879  0594                     ;lcd.c: 120:     LCDbits.EN = 0;
  3880                           	bcf	(8),5	;volatile
  3881  0594  1288               	line	121
  3882                           ;lcd.c: 121:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3883                           	opt asmopt_push
  3884                           opt asmopt_off
  3885                           	movlw	13
  3886  0595  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  3887  0596  00F4               	u1957:
  3888  0597                     decfsz	(??_dispLCD_dataReg+0)+0,f
  3889  0597  0BF4               	goto	u1957
  3890  0598  2D97               opt asmopt_pop
  3891                           
  3892                           	line	122
  3893                           	
  3894                           l1385:	
  3895  0599                     ;lcd.c: 122:     LCDbits.EN = 1;
  3896                           	bcf	status, 5	;RP0=0, select bank0
  3897  0599  1283               	bcf	status, 6	;RP1=0, select bank0
  3898  059A  1303               	bsf	(8),5	;volatile
  3899  059B  1688               	line	123
  3900                           	
  3901                           l86:	
  3902  059C                     	return
  3903  059C  0008               	opt stack 0
  3904                           GLOBAL	__end_of_dispLCD_dataReg
  3905                           	__end_of_dispLCD_dataReg:
  3906  059D                     	signat	_dispLCD_dataReg,4217
  3907                           	global	___awmod
  3908                           
  3909 ;; *************** function ___awmod *****************
  3910 ;; Defined at:
  3911 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  divisor         2    0[BANK0 ] int 
  3914 ;;  dividend        2    2[BANK0 ] int 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  sign            1    5[BANK0 ] unsigned char 
  3917 ;;  counter         1    4[BANK0 ] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  2    0[BANK0 ] int 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3927 ;;      Params:         0       4       0       0       0
  3928 ;;      Locals:         0       2       0       0       0
  3929 ;;      Temps:          1       0       0       0       0
  3930 ;;      Totals:         1       6       0       0       0
  3931 ;;Total ram usage:        7 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    2
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_dispLCD_num
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  3941                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3942                           	line	5
  3943                           global __ptext11
  3944                           __ptext11:	;psect for function ___awmod
  3945  032D                     psect	text11
  3946                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3947                           	line	5
  3948                           	global	__size_of___awmod
  3949                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3950  0065                     	
  3951                           ___awmod:	
  3952  032D                     ;incstack = 0
  3953                           	opt	stack 4
  3954                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3955                           	line	12
  3956                           	
  3957                           l1799:	
  3958  032D                     	bcf	status, 5	;RP0=0, select bank0
  3959  032D  1283               	bcf	status, 6	;RP1=0, select bank0
  3960  032E  1303               	clrf	(___awmod@sign)
  3961  032F  01A5               	line	13
  3962                           	
  3963                           l1801:	
  3964  0330                     	btfss	(___awmod@dividend+1),7
  3965  0330  1FA3               	goto	u1711
  3966  0331  2B33               	goto	u1710
  3967  0332  2B34               u1711:
  3968  0333                     	goto	l1807
  3969  0333  2B3C               u1710:
  3970  0334                     	line	14
  3971                           	
  3972                           l1803:	
  3973  0334                     	comf	(___awmod@dividend),f
  3974  0334  09A2               	comf	(___awmod@dividend+1),f
  3975  0335  09A3               	incf	(___awmod@dividend),f
  3976  0336  0AA2               	skipnz
  3977  0337  1903               	incf	(___awmod@dividend+1),f
  3978  0338  0AA3               	line	15
  3979                           	
  3980                           l1805:	
  3981  0339                     	clrf	(___awmod@sign)
  3982  0339  01A5               	incf	(___awmod@sign),f
  3983  033A  0AA5               	goto	l1807
  3984  033B  2B3C               	line	16
  3985                           	
  3986                           l488:	
  3987  033C                     	line	17
  3988                           	
  3989                           l1807:	
  3990  033C                     	btfss	(___awmod@divisor+1),7
  3991  033C  1FA1               	goto	u1721
  3992  033D  2B3F               	goto	u1720
  3993  033E  2B40               u1721:
  3994  033F                     	goto	l1811
  3995  033F  2B46               u1720:
  3996  0340                     	line	18
  3997                           	
  3998                           l1809:	
  3999  0340                     	comf	(___awmod@divisor),f
  4000  0340  09A0               	comf	(___awmod@divisor+1),f
  4001  0341  09A1               	incf	(___awmod@divisor),f
  4002  0342  0AA0               	skipnz
  4003  0343  1903               	incf	(___awmod@divisor+1),f
  4004  0344  0AA1               	goto	l1811
  4005  0345  2B46               	
  4006                           l489:	
  4007  0346                     	line	19
  4008                           	
  4009                           l1811:	
  4010  0346                     	movf	((___awmod@divisor)),w
  4011  0346  0820               iorwf	((___awmod@divisor+1)),w
  4012  0347  0421               	btfsc	status,2
  4013  0348  1903               	goto	u1731
  4014  0349  2B4B               	goto	u1730
  4015  034A  2B4C               u1731:
  4016  034B                     	goto	l1829
  4017  034B  2B81               u1730:
  4018  034C                     	line	20
  4019                           	
  4020                           l1813:	
  4021  034C                     	clrf	(___awmod@counter)
  4022  034C  01A4               	incf	(___awmod@counter),f
  4023  034D  0AA4               	line	21
  4024                           	goto	l1819
  4025  034E  2B5B               	
  4026                           l492:	
  4027  034F                     	line	22
  4028                           	
  4029                           l1815:	
  4030  034F                     	movlw	01h
  4031  034F  3001               	
  4032                           u1745:
  4033  0350                     	clrc
  4034  0350  1003               	rlf	(___awmod@divisor),f
  4035  0351  0DA0               	rlf	(___awmod@divisor+1),f
  4036  0352  0DA1               	addlw	-1
  4037  0353  3EFF               	skipz
  4038  0354  1D03               	goto	u1745
  4039  0355  2B50               	line	23
  4040                           	
  4041                           l1817:	
  4042  0356                     	movlw	low(01h)
  4043  0356  3001               	movwf	(??___awmod+0)+0
  4044  0357  00F4               	movf	(??___awmod+0)+0,w
  4045  0358  0874               	addwf	(___awmod@counter),f
  4046  0359  07A4               	goto	l1819
  4047  035A  2B5B               	line	24
  4048                           	
  4049                           l491:	
  4050  035B                     	line	21
  4051                           	
  4052                           l1819:	
  4053  035B                     	btfss	(___awmod@divisor+1),(15)&7
  4054  035B  1FA1               	goto	u1751
  4055  035C  2B5E               	goto	u1750
  4056  035D  2B5F               u1751:
  4057  035E                     	goto	l1815
  4058  035E  2B4F               u1750:
  4059  035F                     	goto	l1821
  4060  035F  2B61               	
  4061                           l493:	
  4062  0360                     	goto	l1821
  4063  0360  2B61               	line	25
  4064                           	
  4065                           l494:	
  4066  0361                     	line	26
  4067                           	
  4068                           l1821:	
  4069  0361                     	movf	(___awmod@divisor+1),w
  4070  0361  0821               	subwf	(___awmod@dividend+1),w
  4071  0362  0223               	skipz
  4072  0363  1D03               	goto	u1765
  4073  0364  2B67               	movf	(___awmod@divisor),w
  4074  0365  0820               	subwf	(___awmod@dividend),w
  4075  0366  0222               u1765:
  4076  0367                     	skipc
  4077  0367  1C03               	goto	u1761
  4078  0368  2B6A               	goto	u1760
  4079  0369  2B6B               u1761:
  4080  036A                     	goto	l1825
  4081  036A  2B72               u1760:
  4082  036B                     	line	27
  4083                           	
  4084                           l1823:	
  4085  036B                     	movf	(___awmod@divisor),w
  4086  036B  0820               	subwf	(___awmod@dividend),f
  4087  036C  02A2               	movf	(___awmod@divisor+1),w
  4088  036D  0821               	skipc
  4089  036E  1C03               	decf	(___awmod@dividend+1),f
  4090  036F  03A3               	subwf	(___awmod@dividend+1),f
  4091  0370  02A3               	goto	l1825
  4092  0371  2B72               	
  4093                           l495:	
  4094  0372                     	line	28
  4095                           	
  4096                           l1825:	
  4097  0372                     	movlw	01h
  4098  0372  3001               	
  4099                           u1775:
  4100  0373                     	clrc
  4101  0373  1003               	rrf	(___awmod@divisor+1),f
  4102  0374  0CA1               	rrf	(___awmod@divisor),f
  4103  0375  0CA0               	addlw	-1
  4104  0376  3EFF               	skipz
  4105  0377  1D03               	goto	u1775
  4106  0378  2B73               	line	29
  4107                           	
  4108                           l1827:	
  4109  0379                     	movlw	01h
  4110  0379  3001               	subwf	(___awmod@counter),f
  4111  037A  02A4               	btfss	status,2
  4112  037B  1D03               	goto	u1781
  4113  037C  2B7E               	goto	u1780
  4114  037D  2B7F               u1781:
  4115  037E                     	goto	l1821
  4116  037E  2B61               u1780:
  4117  037F                     	goto	l1829
  4118  037F  2B81               	
  4119                           l496:	
  4120  0380                     	goto	l1829
  4121  0380  2B81               	line	30
  4122                           	
  4123                           l490:	
  4124  0381                     	line	31
  4125                           	
  4126                           l1829:	
  4127  0381                     	movf	((___awmod@sign)),w
  4128  0381  0825               	btfsc	status,2
  4129  0382  1903               	goto	u1791
  4130  0383  2B85               	goto	u1790
  4131  0384  2B86               u1791:
  4132  0385                     	goto	l1833
  4133  0385  2B8C               u1790:
  4134  0386                     	line	32
  4135                           	
  4136                           l1831:	
  4137  0386                     	comf	(___awmod@dividend),f
  4138  0386  09A2               	comf	(___awmod@dividend+1),f
  4139  0387  09A3               	incf	(___awmod@dividend),f
  4140  0388  0AA2               	skipnz
  4141  0389  1903               	incf	(___awmod@dividend+1),f
  4142  038A  0AA3               	goto	l1833
  4143  038B  2B8C               	
  4144                           l497:	
  4145  038C                     	line	33
  4146                           	
  4147                           l1833:	
  4148  038C                     	movf	(___awmod@dividend+1),w
  4149  038C  0823               	movwf	(?___awmod+1)
  4150  038D  00A1               	movf	(___awmod@dividend),w
  4151  038E  0822               	movwf	(?___awmod)
  4152  038F  00A0               	goto	l498
  4153  0390  2B91               	
  4154                           l1835:	
  4155  0391                     	line	34
  4156                           	
  4157                           l498:	
  4158  0391                     	return
  4159  0391  0008               	opt stack 0
  4160                           GLOBAL	__end_of___awmod
  4161                           	__end_of___awmod:
  4162  0392                     	signat	___awmod,8314
  4163                           	global	___awdiv
  4164                           
  4165 ;; *************** function ___awdiv *****************
  4166 ;; Defined at:
  4167 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  divisor         2    0[BANK0 ] int 
  4170 ;;  dividend        2    2[BANK0 ] int 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  quotient        2    6[BANK0 ] int 
  4173 ;;  sign            1    5[BANK0 ] unsigned char 
  4174 ;;  counter         1    4[BANK0 ] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  2    0[BANK0 ] int 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4184 ;;      Params:         0       4       0       0       0
  4185 ;;      Locals:         0       4       0       0       0
  4186 ;;      Temps:          1       0       0       0       0
  4187 ;;      Totals:         1       8       0       0       0
  4188 ;;Total ram usage:        9 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    2
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_dispLCD_num
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  4198                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4199                           	line	5
  4200                           global __ptext12
  4201                           __ptext12:	;psect for function ___awdiv
  4202  02BA                     psect	text12
  4203                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4204                           	line	5
  4205                           	global	__size_of___awdiv
  4206                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4207  0073                     	
  4208                           ___awdiv:	
  4209  02BA                     ;incstack = 0
  4210                           	opt	stack 4
  4211                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4212                           	line	13
  4213                           	
  4214                           l1755:	
  4215  02BA                     	bcf	status, 5	;RP0=0, select bank0
  4216  02BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4217  02BB  1303               	clrf	(___awdiv@sign)
  4218  02BC  01A5               	line	14
  4219                           	
  4220                           l1757:	
  4221  02BD                     	btfss	(___awdiv@divisor+1),7
  4222  02BD  1FA1               	goto	u1611
  4223  02BE  2AC0               	goto	u1610
  4224  02BF  2AC1               u1611:
  4225  02C0                     	goto	l1763
  4226  02C0  2AC9               u1610:
  4227  02C1                     	line	15
  4228                           	
  4229                           l1759:	
  4230  02C1                     	comf	(___awdiv@divisor),f
  4231  02C1  09A0               	comf	(___awdiv@divisor+1),f
  4232  02C2  09A1               	incf	(___awdiv@divisor),f
  4233  02C3  0AA0               	skipnz
  4234  02C4  1903               	incf	(___awdiv@divisor+1),f
  4235  02C5  0AA1               	line	16
  4236                           	
  4237                           l1761:	
  4238  02C6                     	clrf	(___awdiv@sign)
  4239  02C6  01A5               	incf	(___awdiv@sign),f
  4240  02C7  0AA5               	goto	l1763
  4241  02C8  2AC9               	line	17
  4242                           	
  4243                           l475:	
  4244  02C9                     	line	18
  4245                           	
  4246                           l1763:	
  4247  02C9                     	btfss	(___awdiv@dividend+1),7
  4248  02C9  1FA3               	goto	u1621
  4249  02CA  2ACC               	goto	u1620
  4250  02CB  2ACD               u1621:
  4251  02CC                     	goto	l1769
  4252  02CC  2AD7               u1620:
  4253  02CD                     	line	19
  4254                           	
  4255                           l1765:	
  4256  02CD                     	comf	(___awdiv@dividend),f
  4257  02CD  09A2               	comf	(___awdiv@dividend+1),f
  4258  02CE  09A3               	incf	(___awdiv@dividend),f
  4259  02CF  0AA2               	skipnz
  4260  02D0  1903               	incf	(___awdiv@dividend+1),f
  4261  02D1  0AA3               	line	20
  4262                           	
  4263                           l1767:	
  4264  02D2                     	movlw	low(01h)
  4265  02D2  3001               	movwf	(??___awdiv+0)+0
  4266  02D3  00F4               	movf	(??___awdiv+0)+0,w
  4267  02D4  0874               	xorwf	(___awdiv@sign),f
  4268  02D5  06A5               	goto	l1769
  4269  02D6  2AD7               	line	21
  4270                           	
  4271                           l476:	
  4272  02D7                     	line	22
  4273                           	
  4274                           l1769:	
  4275  02D7                     	clrf	(___awdiv@quotient)
  4276  02D7  01A6               	clrf	(___awdiv@quotient+1)
  4277  02D8  01A7               	line	23
  4278                           	
  4279                           l1771:	
  4280  02D9                     	movf	((___awdiv@divisor)),w
  4281  02D9  0820               iorwf	((___awdiv@divisor+1)),w
  4282  02DA  0421               	btfsc	status,2
  4283  02DB  1903               	goto	u1631
  4284  02DC  2ADE               	goto	u1630
  4285  02DD  2ADF               u1631:
  4286  02DE                     	goto	l1791
  4287  02DE  2B1C               u1630:
  4288  02DF                     	line	24
  4289                           	
  4290                           l1773:	
  4291  02DF                     	clrf	(___awdiv@counter)
  4292  02DF  01A4               	incf	(___awdiv@counter),f
  4293  02E0  0AA4               	line	25
  4294                           	goto	l1779
  4295  02E1  2AEE               	
  4296                           l479:	
  4297  02E2                     	line	26
  4298                           	
  4299                           l1775:	
  4300  02E2                     	movlw	01h
  4301  02E2  3001               	
  4302                           u1645:
  4303  02E3                     	clrc
  4304  02E3  1003               	rlf	(___awdiv@divisor),f
  4305  02E4  0DA0               	rlf	(___awdiv@divisor+1),f
  4306  02E5  0DA1               	addlw	-1
  4307  02E6  3EFF               	skipz
  4308  02E7  1D03               	goto	u1645
  4309  02E8  2AE3               	line	27
  4310                           	
  4311                           l1777:	
  4312  02E9                     	movlw	low(01h)
  4313  02E9  3001               	movwf	(??___awdiv+0)+0
  4314  02EA  00F4               	movf	(??___awdiv+0)+0,w
  4315  02EB  0874               	addwf	(___awdiv@counter),f
  4316  02EC  07A4               	goto	l1779
  4317  02ED  2AEE               	line	28
  4318                           	
  4319                           l478:	
  4320  02EE                     	line	25
  4321                           	
  4322                           l1779:	
  4323  02EE                     	btfss	(___awdiv@divisor+1),(15)&7
  4324  02EE  1FA1               	goto	u1651
  4325  02EF  2AF1               	goto	u1650
  4326  02F0  2AF2               u1651:
  4327  02F1                     	goto	l1775
  4328  02F1  2AE2               u1650:
  4329  02F2                     	goto	l1781
  4330  02F2  2AF4               	
  4331                           l480:	
  4332  02F3                     	goto	l1781
  4333  02F3  2AF4               	line	29
  4334                           	
  4335                           l481:	
  4336  02F4                     	line	30
  4337                           	
  4338                           l1781:	
  4339  02F4                     	movlw	01h
  4340  02F4  3001               	
  4341                           u1665:
  4342  02F5                     	clrc
  4343  02F5  1003               	rlf	(___awdiv@quotient),f
  4344  02F6  0DA6               	rlf	(___awdiv@quotient+1),f
  4345  02F7  0DA7               	addlw	-1
  4346  02F8  3EFF               	skipz
  4347  02F9  1D03               	goto	u1665
  4348  02FA  2AF5               	line	31
  4349                           	movf	(___awdiv@divisor+1),w
  4350  02FB  0821               	subwf	(___awdiv@dividend+1),w
  4351  02FC  0223               	skipz
  4352  02FD  1D03               	goto	u1675
  4353  02FE  2B01               	movf	(___awdiv@divisor),w
  4354  02FF  0820               	subwf	(___awdiv@dividend),w
  4355  0300  0222               u1675:
  4356  0301                     	skipc
  4357  0301  1C03               	goto	u1671
  4358  0302  2B04               	goto	u1670
  4359  0303  2B05               u1671:
  4360  0304                     	goto	l1787
  4361  0304  2B0D               u1670:
  4362  0305                     	line	32
  4363                           	
  4364                           l1783:	
  4365  0305                     	movf	(___awdiv@divisor),w
  4366  0305  0820               	subwf	(___awdiv@dividend),f
  4367  0306  02A2               	movf	(___awdiv@divisor+1),w
  4368  0307  0821               	skipc
  4369  0308  1C03               	decf	(___awdiv@dividend+1),f
  4370  0309  03A3               	subwf	(___awdiv@dividend+1),f
  4371  030A  02A3               	line	33
  4372                           	
  4373                           l1785:	
  4374  030B                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4375  030B  1426               	goto	l1787
  4376  030C  2B0D               	line	34
  4377                           	
  4378                           l482:	
  4379  030D                     	line	35
  4380                           	
  4381                           l1787:	
  4382  030D                     	movlw	01h
  4383  030D  3001               	
  4384                           u1685:
  4385  030E                     	clrc
  4386  030E  1003               	rrf	(___awdiv@divisor+1),f
  4387  030F  0CA1               	rrf	(___awdiv@divisor),f
  4388  0310  0CA0               	addlw	-1
  4389  0311  3EFF               	skipz
  4390  0312  1D03               	goto	u1685
  4391  0313  2B0E               	line	36
  4392                           	
  4393                           l1789:	
  4394  0314                     	movlw	01h
  4395  0314  3001               	subwf	(___awdiv@counter),f
  4396  0315  02A4               	btfss	status,2
  4397  0316  1D03               	goto	u1691
  4398  0317  2B19               	goto	u1690
  4399  0318  2B1A               u1691:
  4400  0319                     	goto	l1781
  4401  0319  2AF4               u1690:
  4402  031A                     	goto	l1791
  4403  031A  2B1C               	
  4404                           l483:	
  4405  031B                     	goto	l1791
  4406  031B  2B1C               	line	37
  4407                           	
  4408                           l477:	
  4409  031C                     	line	38
  4410                           	
  4411                           l1791:	
  4412  031C                     	movf	((___awdiv@sign)),w
  4413  031C  0825               	btfsc	status,2
  4414  031D  1903               	goto	u1701
  4415  031E  2B20               	goto	u1700
  4416  031F  2B21               u1701:
  4417  0320                     	goto	l1795
  4418  0320  2B27               u1700:
  4419  0321                     	line	39
  4420                           	
  4421                           l1793:	
  4422  0321                     	comf	(___awdiv@quotient),f
  4423  0321  09A6               	comf	(___awdiv@quotient+1),f
  4424  0322  09A7               	incf	(___awdiv@quotient),f
  4425  0323  0AA6               	skipnz
  4426  0324  1903               	incf	(___awdiv@quotient+1),f
  4427  0325  0AA7               	goto	l1795
  4428  0326  2B27               	
  4429                           l484:	
  4430  0327                     	line	40
  4431                           	
  4432                           l1795:	
  4433  0327                     	movf	(___awdiv@quotient+1),w
  4434  0327  0827               	movwf	(?___awdiv+1)
  4435  0328  00A1               	movf	(___awdiv@quotient),w
  4436  0329  0826               	movwf	(?___awdiv)
  4437  032A  00A0               	goto	l485
  4438  032B  2B2C               	
  4439                           l1797:	
  4440  032C                     	line	41
  4441                           	
  4442                           l485:	
  4443  032C                     	return
  4444  032C  0008               	opt stack 0
  4445                           GLOBAL	__end_of___awdiv
  4446                           	__end_of___awdiv:
  4447  032D                     	signat	___awdiv,8314
  4448                           	global	_dispLCD_init
  4449                           
  4450 ;; *************** function _dispLCD_init *****************
  4451 ;; Defined at:
  4452 ;;		line 132 in file "lcd.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;		None
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;		None
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		wreg, status,2, status,0, pclath, cstack
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4466 ;;      Params:         0       0       0       0       0
  4467 ;;      Locals:         0       0       0       0       0
  4468 ;;      Temps:          0       0       0       0       0
  4469 ;;      Totals:         0       0       0       0       0
  4470 ;;Total ram usage:        0 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; Hardware stack levels required when called:    3
  4473 ;; This function calls:
  4474 ;;		_delay
  4475 ;;		_dispLCD_instReg
  4476 ;; This function is called by:
  4477 ;;		_main
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4481                           	file	"lcd.c"
  4482                           	line	132
  4483                           global __ptext13
  4484                           __ptext13:	;psect for function _dispLCD_init
  4485  04CB                     psect	text13
  4486                           	file	"lcd.c"
  4487                           	line	132
  4488                           	global	__size_of_dispLCD_init
  4489                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  4490  0041                     	
  4491                           _dispLCD_init:	
  4492  04CB                     ;incstack = 0
  4493                           	opt	stack 4
  4494                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  4495                           	line	134
  4496                           	
  4497                           l1845:	
  4498  04CB                     ;lcd.c: 134:     delay(100);
  4499                           	movlw	064h
  4500  04CB  3064               	movwf	(delay@t)
  4501  04CC  00F4               	movlw	0
  4502  04CD  3000               	movwf	((delay@t))+1
  4503  04CE  00F5               	fcall	_delay
  4504  04CF  120A  118A  25FA  120A  118A  	line	135
  4505                           	
  4506                           l1847:	
  4507  04D4                     ;lcd.c: 135:     TRISDbits.TRISD0 = 0;
  4508                           	bsf	status, 5	;RP0=1, select bank1
  4509  04D4  1683               	bcf	status, 6	;RP1=0, select bank1
  4510  04D5  1303               	bcf	(136)^080h,0	;volatile
  4511  04D6  1008               	line	136
  4512                           	
  4513                           l1849:	
  4514  04D7                     ;lcd.c: 136:     TRISDbits.TRISD1 = 0;
  4515                           	bcf	(136)^080h,1	;volatile
  4516  04D7  1088               	line	137
  4517                           	
  4518                           l1851:	
  4519  04D8                     ;lcd.c: 137:     TRISDbits.TRISD2 = 0;
  4520                           	bcf	(136)^080h,2	;volatile
  4521  04D8  1108               	line	138
  4522                           	
  4523                           l1853:	
  4524  04D9                     ;lcd.c: 138:     TRISDbits.TRISD3 = 0;
  4525                           	bcf	(136)^080h,3	;volatile
  4526  04D9  1188               	line	139
  4527                           	
  4528                           l1855:	
  4529  04DA                     ;lcd.c: 139:     TRISDbits.TRISD4 = 0;
  4530                           	bcf	(136)^080h,4	;volatile
  4531  04DA  1208               	line	140
  4532                           	
  4533                           l1857:	
  4534  04DB                     ;lcd.c: 140:     TRISDbits.TRISD5 = 0;
  4535                           	bcf	(136)^080h,5	;volatile
  4536  04DB  1288               	line	141
  4537                           	
  4538                           l1859:	
  4539  04DC                     ;lcd.c: 141:     TRISDbits.TRISD6 = 1;
  4540                           	bsf	(136)^080h,6	;volatile
  4541  04DC  1708               	line	142
  4542                           	
  4543                           l1861:	
  4544  04DD                     ;lcd.c: 142:     TRISDbits.TRISD7 = 1;
  4545                           	bsf	(136)^080h,7	;volatile
  4546  04DD  1788               	line	143
  4547                           ;lcd.c: 143:     delay(100);
  4548                           	movlw	064h
  4549  04DE  3064               	movwf	(delay@t)
  4550  04DF  00F4               	movlw	0
  4551  04E0  3000               	movwf	((delay@t))+1
  4552  04E1  00F5               	fcall	_delay
  4553  04E2  120A  118A  25FA  120A  118A  	line	144
  4554                           	
  4555                           l1863:	
  4556  04E7                     ;lcd.c: 144:     LCDbits.EN = 1;
  4557                           	bcf	status, 5	;RP0=0, select bank0
  4558  04E7  1283               	bcf	status, 6	;RP1=0, select bank0
  4559  04E8  1303               	bsf	(8),5	;volatile
  4560  04E9  1688               	line	145
  4561                           ;lcd.c: 145:     dispLCD_instReg( 0x20|0x00|0x08);
  4562                           	movlw	low(028h)
  4563  04EA  3028               	fcall	_dispLCD_instReg
  4564  04EB  120A  118A  21CD  120A  118A  	line	146
  4565                           ;lcd.c: 146:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  4566                           	movlw	low(0Ch)
  4567  04F0  300C               	fcall	_dispLCD_instReg
  4568  04F1  120A  118A  21CD  120A  118A  	line	147
  4569                           ;lcd.c: 147:     dispLCD_instReg( 0x01 );
  4570                           	movlw	low(01h)
  4571  04F6  3001               	fcall	_dispLCD_instReg
  4572  04F7  120A  118A  21CD  120A  118A  	line	148
  4573                           ;lcd.c: 148:     dispLCD_instReg( 0x02 );
  4574                           	movlw	low(02h)
  4575  04FC  3002               	fcall	_dispLCD_instReg
  4576  04FD  120A  118A  21CD  120A  118A  	line	149
  4577                           ;lcd.c: 149:     delay(100);
  4578                           	movlw	064h
  4579  0502  3064               	movwf	(delay@t)
  4580  0503  00F4               	movlw	0
  4581  0504  3000               	movwf	((delay@t))+1
  4582  0505  00F5               	fcall	_delay
  4583  0506  120A  118A  25FA  120A  118A  	line	150
  4584                           	
  4585                           l92:	
  4586  050B                     	return
  4587  050B  0008               	opt stack 0
  4588                           GLOBAL	__end_of_dispLCD_init
  4589                           	__end_of_dispLCD_init:
  4590  050C                     	signat	_dispLCD_init,89
  4591                           	global	_dispLCD_instReg
  4592                           
  4593 ;; *************** function _dispLCD_instReg *****************
  4594 ;; Defined at:
  4595 ;;		line 77 in file "lcd.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  i               1    wreg     unsigned char 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  i               1    0[BANK0 ] unsigned char 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4609 ;;      Params:         0       0       0       0       0
  4610 ;;      Locals:         0       1       0       0       0
  4611 ;;      Temps:          2       0       0       0       0
  4612 ;;      Totals:         2       1       0       0       0
  4613 ;;Total ram usage:        3 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    2
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_dispLCD_lincol
  4620 ;;		_dispLCD_init
  4621 ;;		_dispLCD_clr
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4625                           	line	77
  4626                           global __ptext14
  4627                           __ptext14:	;psect for function _dispLCD_instReg
  4628  01CD                     psect	text14
  4629                           	file	"lcd.c"
  4630                           	line	77
  4631                           	global	__size_of_dispLCD_instReg
  4632                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  4633  0079                     	
  4634                           _dispLCD_instReg:	
  4635  01CD                     ;incstack = 0
  4636                           	opt	stack 3
  4637                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  4638                           ;dispLCD_instReg@i stored from wreg
  4639                           	bcf	status, 5	;RP0=0, select bank0
  4640  01CD  1283               	bcf	status, 6	;RP1=0, select bank0
  4641  01CE  1303               	movwf	(dispLCD_instReg@i)
  4642  01CF  00A0               	line	79
  4643                           	
  4644                           l1675:	
  4645  01D0                     ;lcd.c: 77: void dispLCD_instReg( unsigned char i );lcd.c: 78: {;lcd.c: 79:     LCDbits.
                                 RS = 0;
  4646                           	bcf	(8),4	;volatile
  4647  01D0  1208               	line	80
  4648                           	
  4649                           l1677:	
  4650  01D1                     ;lcd.c: 80:     LCDbits.BUS = (i>>4);
  4651                           	movf	(dispLCD_instReg@i),w
  4652  01D1  0820               	movwf	(??_dispLCD_instReg+0)+0
  4653  01D2  00F4               	movlw	04h
  4654  01D3  3004               u1455:
  4655  01D4                     	clrc
  4656  01D4  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  4657  01D5  0CF4               	addlw	-1
  4658  01D6  3EFF               	skipz
  4659  01D7  1D03               	goto	u1455
  4660  01D8  29D4               	movf	(8),w	;volatile
  4661  01D9  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  4662  01DA  0674               	andlw	not ((1<<4)-1)
  4663  01DB  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  4664  01DC  0674               	movwf	(8)	;volatile
  4665  01DD  0088               	line	82
  4666                           	
  4667                           l1679:	
  4668  01DE                     ;lcd.c: 82:     LCDbits.EN = 0;
  4669                           	bcf	(8),5	;volatile
  4670  01DE  1288               	line	83
  4671                           ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  4672                           		decf	((dispLCD_instReg@i)),w
  4673  01DF  0320               	btfsc	status,2
  4674  01E0  1903               	goto	u1461
  4675  01E1  29E3               	goto	u1460
  4676  01E2  29E4               u1461:
  4677  01E3                     	goto	l1683
  4678  01E3  29EB               u1460:
  4679  01E4                     	
  4680                           l1681:	
  4681  01E4                     		movlw	2
  4682  01E4  3002               	xorwf	((dispLCD_instReg@i)),w
  4683  01E5  0620               	btfss	status,2
  4684  01E6  1D03               	goto	u1471
  4685  01E7  29E9               	goto	u1470
  4686  01E8  29EA               u1471:
  4687  01E9                     	goto	l1685
  4688  01E9  29F5               u1470:
  4689  01EA                     	goto	l1683
  4690  01EA  29EB               	
  4691                           l76:	
  4692  01EB                     	line	84
  4693                           	
  4694                           l1683:	
  4695  01EB                     ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4696                           	opt asmopt_push
  4697                           opt asmopt_off
  4698                           movlw	3
  4699  01EB  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  4700  01EC  00F5               	movlw	151
  4701  01ED  3097               movwf	((??_dispLCD_instReg+0)+0),f
  4702  01EE  00F4               	u1967:
  4703  01EF                     decfsz	((??_dispLCD_instReg+0)+0),f
  4704  01EF  0BF4               	goto	u1967
  4705  01F0  29EF               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  4706  01F1  0BF5               	goto	u1967
  4707  01F2  29EF               	nop2
  4708  01F3  29F4               opt asmopt_pop
  4709                           
  4710                           	goto	l1687
  4711  01F4  29FA               	line	85
  4712                           ;lcd.c: 85:     else
  4713                           	
  4714                           l74:	
  4715  01F5                     	line	86
  4716                           	
  4717                           l1685:	
  4718  01F5                     ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4719                           	opt asmopt_push
  4720                           opt asmopt_off
  4721                           	movlw	13
  4722  01F5  300D               movwf	((??_dispLCD_instReg+0)+0),f
  4723  01F6  00F4               	u1977:
  4724  01F7                     decfsz	(??_dispLCD_instReg+0)+0,f
  4725  01F7  0BF4               	goto	u1977
  4726  01F8  29F7               opt asmopt_pop
  4727                           
  4728                           	goto	l1687
  4729  01F9  29FA               	
  4730                           l77:	
  4731  01FA                     	line	87
  4732                           	
  4733                           l1687:	
  4734  01FA                     ;lcd.c: 87:     LCDbits.EN = 1;
  4735                           	bcf	status, 5	;RP0=0, select bank0
  4736  01FA  1283               	bcf	status, 6	;RP1=0, select bank0
  4737  01FB  1303               	bsf	(8),5	;volatile
  4738  01FC  1688               	line	90
  4739                           	
  4740                           l1689:	
  4741  01FD                     ;lcd.c: 90:     if( (i & 0xF0) == (0x20 | 0x00) )
  4742                           	movlw	low(0F0h)
  4743  01FD  30F0               	andwf	(dispLCD_instReg@i),w
  4744  01FE  0520               	movwf	(??_dispLCD_instReg+0)+0
  4745  01FF  00F4               		movlw	32
  4746  0200  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  4747  0201  0674               	btfss	status,2
  4748  0202  1D03               	goto	u1481
  4749  0203  2A05               	goto	u1480
  4750  0204  2A06               u1481:
  4751  0205                     	goto	l1701
  4752  0205  2A1D               u1480:
  4753  0206                     	line	92
  4754                           	
  4755                           l1691:	
  4756  0206                     ;lcd.c: 91:     {;lcd.c: 92:         LCDbits.RS = 0;
  4757                           	bcf	(8),4	;volatile
  4758  0206  1208               	line	93
  4759                           	
  4760                           l1693:	
  4761  0207                     ;lcd.c: 93:         LCDbits.BUS = i>>4;
  4762                           	movf	(dispLCD_instReg@i),w
  4763  0207  0820               	movwf	(??_dispLCD_instReg+0)+0
  4764  0208  00F4               	movlw	04h
  4765  0209  3004               u1495:
  4766  020A                     	clrc
  4767  020A  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  4768  020B  0CF4               	addlw	-1
  4769  020C  3EFF               	skipz
  4770  020D  1D03               	goto	u1495
  4771  020E  2A0A               	movf	(8),w	;volatile
  4772  020F  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  4773  0210  0674               	andlw	not ((1<<4)-1)
  4774  0211  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  4775  0212  0674               	movwf	(8)	;volatile
  4776  0213  0088               	line	94
  4777                           	
  4778                           l1695:	
  4779  0214                     ;lcd.c: 94:         LCDbits.EN = 0;
  4780                           	bcf	(8),5	;volatile
  4781  0214  1288               	line	95
  4782                           	
  4783                           l1697:	
  4784  0215                     ;lcd.c: 95:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4785                           	opt asmopt_push
  4786                           opt asmopt_off
  4787                           	movlw	13
  4788  0215  300D               movwf	((??_dispLCD_instReg+0)+0),f
  4789  0216  00F4               	u1987:
  4790  0217                     decfsz	(??_dispLCD_instReg+0)+0,f
  4791  0217  0BF4               	goto	u1987
  4792  0218  2A17               opt asmopt_pop
  4793                           
  4794                           	line	96
  4795                           	
  4796                           l1699:	
  4797  0219                     ;lcd.c: 96:         LCDbits.EN = 1;
  4798                           	bcf	status, 5	;RP0=0, select bank0
  4799  0219  1283               	bcf	status, 6	;RP1=0, select bank0
  4800  021A  1303               	bsf	(8),5	;volatile
  4801  021B  1688               	goto	l1701
  4802  021C  2A1D               	line	97
  4803                           ;lcd.c: 97:     }
  4804                           	
  4805                           l78:	
  4806  021D                     	line	99
  4807                           	
  4808                           l1701:	
  4809  021D                     ;lcd.c: 99:     LCDbits.RS = 0;
  4810                           	bcf	(8),4	;volatile
  4811  021D  1208               	line	100
  4812                           	
  4813                           l1703:	
  4814  021E                     ;lcd.c: 100:     LCDbits.BUS = i & 0x0F;
  4815                           	movlw	low(0Fh)
  4816  021E  300F               	andwf	(dispLCD_instReg@i),w
  4817  021F  0520               	movwf	(??_dispLCD_instReg+0)+0
  4818  0220  00F4               	movf	(8),w	;volatile
  4819  0221  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  4820  0222  0674               	andlw	not ((1<<4)-1)
  4821  0223  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  4822  0224  0674               	movwf	(8)	;volatile
  4823  0225  0088               	line	101
  4824                           	
  4825                           l1705:	
  4826  0226                     ;lcd.c: 101:     LCDbits.EN = 0;
  4827                           	bcf	(8),5	;volatile
  4828  0226  1288               	line	102
  4829                           	
  4830                           l1707:	
  4831  0227                     ;lcd.c: 102:     if( i == 0x01 || i == 0x02 )
  4832                           		decf	((dispLCD_instReg@i)),w
  4833  0227  0320               	btfsc	status,2
  4834  0228  1903               	goto	u1501
  4835  0229  2A2B               	goto	u1500
  4836  022A  2A2C               u1501:
  4837  022B                     	goto	l1711
  4838  022B  2A33               u1500:
  4839  022C                     	
  4840                           l1709:	
  4841  022C                     		movlw	2
  4842  022C  3002               	xorwf	((dispLCD_instReg@i)),w
  4843  022D  0620               	btfss	status,2
  4844  022E  1D03               	goto	u1511
  4845  022F  2A31               	goto	u1510
  4846  0230  2A32               u1511:
  4847  0231                     	goto	l1713
  4848  0231  2A3D               u1510:
  4849  0232                     	goto	l1711
  4850  0232  2A33               	
  4851                           l81:	
  4852  0233                     	line	103
  4853                           	
  4854                           l1711:	
  4855  0233                     ;lcd.c: 103:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4856                           	opt asmopt_push
  4857                           opt asmopt_off
  4858                           movlw	3
  4859  0233  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  4860  0234  00F5               	movlw	151
  4861  0235  3097               movwf	((??_dispLCD_instReg+0)+0),f
  4862  0236  00F4               	u1997:
  4863  0237                     decfsz	((??_dispLCD_instReg+0)+0),f
  4864  0237  0BF4               	goto	u1997
  4865  0238  2A37               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  4866  0239  0BF5               	goto	u1997
  4867  023A  2A37               	nop2
  4868  023B  2A3C               opt asmopt_pop
  4869                           
  4870                           	goto	l1715
  4871  023C  2A42               	line	104
  4872                           ;lcd.c: 104:     else
  4873                           	
  4874                           l79:	
  4875  023D                     	line	105
  4876                           	
  4877                           l1713:	
  4878  023D                     ;lcd.c: 105:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4879                           	opt asmopt_push
  4880                           opt asmopt_off
  4881                           	movlw	13
  4882  023D  300D               movwf	((??_dispLCD_instReg+0)+0),f
  4883  023E  00F4               	u2007:
  4884  023F                     decfsz	(??_dispLCD_instReg+0)+0,f
  4885  023F  0BF4               	goto	u2007
  4886  0240  2A3F               opt asmopt_pop
  4887                           
  4888                           	goto	l1715
  4889  0241  2A42               	
  4890                           l82:	
  4891  0242                     	line	106
  4892                           	
  4893                           l1715:	
  4894  0242                     ;lcd.c: 106:     LCDbits.EN = 1;
  4895                           	bcf	status, 5	;RP0=0, select bank0
  4896  0242  1283               	bcf	status, 6	;RP1=0, select bank0
  4897  0243  1303               	bsf	(8),5	;volatile
  4898  0244  1688               	line	107
  4899                           	
  4900                           l83:	
  4901  0245                     	return
  4902  0245  0008               	opt stack 0
  4903                           GLOBAL	__end_of_dispLCD_instReg
  4904                           	__end_of_dispLCD_instReg:
  4905  0246                     	signat	_dispLCD_instReg,4217
  4906                           	global	_delay
  4907                           
  4908 ;; *************** function _delay *****************
  4909 ;; Defined at:
  4910 ;;		line 12 in file "delay.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;  t               2    4[COMMON] unsigned int 
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4924 ;;      Params:         2       0       0       0       0
  4925 ;;      Locals:         0       0       0       0       0
  4926 ;;      Temps:          0       1       0       0       0
  4927 ;;      Totals:         2       1       0       0       0
  4928 ;;Total ram usage:        3 bytes
  4929 ;; Hardware stack levels used:    1
  4930 ;; Hardware stack levels required when called:    2
  4931 ;; This function calls:
  4932 ;;		Nothing
  4933 ;; This function is called by:
  4934 ;;		_dispLCD_init
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4938                           	file	"delay.c"
  4939                           	line	12
  4940                           global __ptext15
  4941                           __ptext15:	;psect for function _delay
  4942  05FA                     psect	text15
  4943                           	file	"delay.c"
  4944                           	line	12
  4945                           	global	__size_of_delay
  4946                           	__size_of_delay	equ	__end_of_delay-_delay
  4947  0018                     	
  4948                           _delay:	
  4949  05FA                     ;incstack = 0
  4950                           	opt	stack 4
  4951                           ; Regs used in _delay: [wreg+status,2+status,0]
  4952                           	line	14
  4953                           	
  4954                           l1747:	
  4955  05FA                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  4956                           	goto	l1751
  4957  05FA  2E0A               	
  4958                           l40:	
  4959  05FB                     	line	16
  4960                           	
  4961                           l1749:	
  4962  05FB                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));

  4963                           	opt asmopt_push
  4964                           opt asmopt_off
  4965                           	movlw	199
  4966  05FB  30C7               	bcf	status, 5	;RP0=0, select bank0
  4967  05FC  1283               	bcf	status, 6	;RP1=0, select bank0
  4968  05FD  1303               movwf	((??_delay+0)+0),f
  4969  05FE  00A0               	u2017:
  4970  05FF                     	nop2
  4971  05FF  2E00               decfsz	(??_delay+0)+0,f
  4972  0600  0BA0               	goto	u2017
  4973  0601  2DFF               	nop2
  4974  0602  2E03               opt asmopt_pop
  4975                           
  4976                           	line	17
  4977                           ;delay.c: 17:         --t;
  4978                           	movlw	01h
  4979  0603  3001               	subwf	(delay@t),f
  4980  0604  02F4               	movlw	0
  4981  0605  3000               	skipc
  4982  0606  1C03               	decf	(delay@t+1),f
  4983  0607  03F5               	subwf	(delay@t+1),f
  4984  0608  02F5               	goto	l1751
  4985  0609  2E0A               	line	18
  4986                           ;delay.c: 18:     }
  4987                           	
  4988                           l39:	
  4989  060A                     	line	14
  4990                           	
  4991                           l1751:	
  4992  060A                     ;delay.c: 14:     while( t )
  4993                           	movf	((delay@t)),w
  4994  060A  0874               iorwf	((delay@t+1)),w
  4995  060B  0475               	btfss	status,2
  4996  060C  1D03               	goto	u1591
  4997  060D  2E0F               	goto	u1590
  4998  060E  2E10               u1591:
  4999  060F                     	goto	l1749
  5000  060F  2DFB               u1590:
  5001  0610                     	goto	l42
  5002  0610  2E11               	
  5003                           l41:	
  5004  0611                     	line	19
  5005                           	
  5006                           l42:	
  5007  0611                     	return
  5008  0611  0008               	opt stack 0
  5009                           GLOBAL	__end_of_delay
  5010                           	__end_of_delay:
  5011  0612                     	signat	_delay,4217
  5012                           	global	_ADC_init
  5013                           
  5014 ;; *************** function _ADC_init *****************
  5015 ;; Defined at:
  5016 ;;		line 12 in file "adc.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;		None
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5030 ;;      Params:         0       0       0       0       0
  5031 ;;      Locals:         0       0       0       0       0
  5032 ;;      Temps:          0       0       0       0       0
  5033 ;;      Totals:         0       0       0       0       0
  5034 ;;Total ram usage:        0 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    2
  5037 ;; This function calls:
  5038 ;;		Nothing
  5039 ;; This function is called by:
  5040 ;;		_main
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5044                           	file	"adc.c"
  5045                           	line	12
  5046                           global __ptext16
  5047                           __ptext16:	;psect for function _ADC_init
  5048  059D                     psect	text16
  5049                           	file	"adc.c"
  5050                           	line	12
  5051                           	global	__size_of_ADC_init
  5052                           	__size_of_ADC_init	equ	__end_of_ADC_init-_ADC_init
  5053  0021                     	
  5054                           _ADC_init:	
  5055  059D                     ;incstack = 0
  5056                           	opt	stack 5
  5057                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
  5058                           	line	14
  5059                           	
  5060                           l1525:	
  5061  059D                     ;adc.c: 14:     INTCONbits.GIE = 0;
  5062                           	bcf	(11),7	;volatile
  5063  059D  138B               	line	16
  5064                           ;adc.c: 16:     ANSELbits.ANS0 = 1;
  5065                           	bsf	status, 5	;RP0=1, select bank3
  5066  059E  1683               	bsf	status, 6	;RP1=1, select bank3
  5067  059F  1703               	bsf	(392)^0180h,0	;volatile
  5068  05A0  1408               	line	17
  5069                           	
  5070                           l1527:	
  5071  05A1                     ;adc.c: 17:     ADCON0bits.ADCS = 0x2;
  5072                           	bcf	status, 5	;RP0=0, select bank0
  5073  05A1  1283               	bcf	status, 6	;RP1=0, select bank0
  5074  05A2  1303               	movf	(31),w	;volatile
  5075  05A3  081F               	andlw	not (((1<<2)-1)<<6)
  5076  05A4  393F               	iorlw	(02h & ((1<<2)-1))<<6
  5077  05A5  3880               	movwf	(31)	;volatile
  5078  05A6  009F               	line	18
  5079                           	
  5080                           l1529:	
  5081  05A7                     ;adc.c: 18:     ADCON1bits.VCFG0 = 0;
  5082                           	bsf	status, 5	;RP0=1, select bank1
  5083  05A7  1683               	bcf	status, 6	;RP1=0, select bank1
  5084  05A8  1303               	bcf	(159)^080h,4	;volatile
  5085  05A9  121F               	line	19
  5086                           	
  5087                           l1531:	
  5088  05AA                     ;adc.c: 19:     ADCON1bits.VCFG1 = 0;
  5089                           	bcf	(159)^080h,5	;volatile
  5090  05AA  129F               	line	20
  5091                           ;adc.c: 20:     ADCON0bits.CHS = 0x0;
  5092                           	movlw	((0 & ((1<<4)-1))<<2)|not (((1<<4)-1)<<2)
  5093  05AB  30C3               	bcf	status, 5	;RP0=0, select bank0
  5094  05AC  1283               	bcf	status, 6	;RP1=0, select bank0
  5095  05AD  1303               	andwf	(31),f	;volatile
  5096  05AE  059F               	line	21
  5097                           	
  5098                           l1533:	
  5099  05AF                     ;adc.c: 21:     ADCON1bits.ADFM = 1;
  5100                           	bsf	status, 5	;RP0=1, select bank1
  5101  05AF  1683               	bcf	status, 6	;RP1=0, select bank1
  5102  05B0  1303               	bsf	(159)^080h,7	;volatile
  5103  05B1  179F               	line	22
  5104                           	
  5105                           l1535:	
  5106  05B2                     ;adc.c: 22:     ADCON0bits.ADON = 1;
  5107                           	bcf	status, 5	;RP0=0, select bank0
  5108  05B2  1283               	bcf	status, 6	;RP1=0, select bank0
  5109  05B3  1303               	bsf	(31),0	;volatile
  5110  05B4  141F               	line	24
  5111                           	
  5112                           l1537:	
  5113  05B5                     ;adc.c: 24:     INTCONbits.PEIE = 1;
  5114                           	bsf	(11),6	;volatile
  5115  05B5  170B               	line	25
  5116                           	
  5117                           l1539:	
  5118  05B6                     ;adc.c: 25:     PIE1bits.ADIE = 1;
  5119                           	bsf	status, 5	;RP0=1, select bank1
  5120  05B6  1683               	bcf	status, 6	;RP1=0, select bank1
  5121  05B7  1303               	bsf	(140)^080h,6	;volatile
  5122  05B8  170C               	line	26
  5123                           	
  5124                           l1541:	
  5125  05B9                     ;adc.c: 26:     INTCONbits.GIE = 1;
  5126                           	bsf	(11),7	;volatile
  5127  05B9  178B               	line	27
  5128                           	
  5129                           l1543:	
  5130  05BA                     ;adc.c: 27:     ADCON0bits.GO = 1;
  5131                           	bcf	status, 5	;RP0=0, select bank0
  5132  05BA  1283               	bcf	status, 6	;RP1=0, select bank0
  5133  05BB  1303               	bsf	(31),1	;volatile
  5134  05BC  149F               	line	28
  5135                           	
  5136                           l17:	
  5137  05BD                     	return
  5138  05BD  0008               	opt stack 0
  5139                           GLOBAL	__end_of_ADC_init
  5140                           	__end_of_ADC_init:
  5141  05BE                     	signat	_ADC_init,89
  5142                           	global	_isr
  5143                           
  5144 ;; *************** function _isr *****************
  5145 ;; Defined at:
  5146 ;;		line 14 in file "interrupt.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0, pclath, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5160 ;;      Params:         0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0
  5162 ;;      Temps:          2       0       0       0       0
  5163 ;;      Totals:         2       0       0       0       0
  5164 ;;Total ram usage:        2 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    1
  5167 ;; This function calls:
  5168 ;;		_ADC_int
  5169 ;;		_T0_int
  5170 ;;		_T1_int
  5171 ;;		_T2_int
  5172 ;; This function is called by:
  5173 ;;		Interrupt level 1
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5177                           	file	"interrupt.c"
  5178                           	line	14
  5179                           global __ptext17
  5180                           __ptext17:	;psect for function _isr
  5181  050C                     psect	text17
  5182                           	file	"interrupt.c"
  5183                           	line	14
  5184                           	global	__size_of_isr
  5185                           	__size_of_isr	equ	__end_of_isr-_isr
  5186  0039                     	
  5187                           _isr:	
  5188  050C                     ;incstack = 0
  5189                           	opt	stack 3
  5190                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5191                           psect	intentry,class=CODE,delta=2
  5192                           global __pintentry
  5193                           __pintentry:
  5194  0004                     global interrupt_function
  5195                           interrupt_function:
  5196  0004                     	global saved_w
  5197                           	saved_w	set	btemp+0
  5198  007E                     	movwf	saved_w
  5199  0004  00FE               	swapf	status,w
  5200  0005  0E03               	movwf	(??_isr+0)
  5201  0006  00F2               	movf	pclath,w
  5202  0007  080A               	movwf	(??_isr+1)
  5203  0008  00F3               	ljmp	_isr
  5204  0009  120A  118A  2D0C   psect	text17
  5205                           	line	16
  5206                           	
  5207                           i1l1627:	
  5208  050C                     ;interrupt.c: 16:     if( INTCONbits.T0IF )
  5209                           	btfss	(11),2	;volatile
  5210  050C  1D0B               	goto	u140_21
  5211  050D  2D0F               	goto	u140_20
  5212  050E  2D10               u140_21:
  5213  050F                     	goto	i1l1633
  5214  050F  2D17               u140_20:
  5215  0510                     	line	18
  5216                           	
  5217                           i1l1629:	
  5218  0510                     ;interrupt.c: 17:     {;interrupt.c: 18:         INTCONbits.T0IF = 0;
  5219                           	bcf	(11),2	;volatile
  5220  0510  110B               	line	19
  5221                           	
  5222                           i1l1631:	
  5223  0511                     ;interrupt.c: 19:         T0_int();
  5224                           	fcall	_T0_int
  5225  0511  120A  118A  2664  120A  118A  	goto	i1l1633
  5226  0516  2D17               	line	20
  5227                           ;interrupt.c: 20:     }
  5228                           	
  5229                           i1l59:	
  5230  0517                     	line	21
  5231                           	
  5232                           i1l1633:	
  5233  0517                     ;interrupt.c: 21:     if( PIR1bits.TMR1IF )
  5234                           	bcf	status, 5	;RP0=0, select bank0
  5235  0517  1283               	bcf	status, 6	;RP1=0, select bank0
  5236  0518  1303               	btfss	(12),0	;volatile
  5237  0519  1C0C               	goto	u141_21
  5238  051A  2D1C               	goto	u141_20
  5239  051B  2D1D               u141_21:
  5240  051C                     	goto	i1l1639
  5241  051C  2D24               u141_20:
  5242  051D                     	line	23
  5243                           	
  5244                           i1l1635:	
  5245  051D                     ;interrupt.c: 22:     {;interrupt.c: 23:         PIR1bits.TMR1IF = 0;
  5246                           	bcf	(12),0	;volatile
  5247  051D  100C               	line	24
  5248                           	
  5249                           i1l1637:	
  5250  051E                     ;interrupt.c: 24:         T1_int();
  5251                           	fcall	_T1_int
  5252  051E  120A  118A  263D  120A  118A  	goto	i1l1639
  5253  0523  2D24               	line	25
  5254                           ;interrupt.c: 25:     }
  5255                           	
  5256                           i1l60:	
  5257  0524                     	line	26
  5258                           	
  5259                           i1l1639:	
  5260  0524                     ;interrupt.c: 26:     if( PIR1bits.TMR2IF )
  5261                           	bcf	status, 5	;RP0=0, select bank0
  5262  0524  1283               	bcf	status, 6	;RP1=0, select bank0
  5263  0525  1303               	btfss	(12),1	;volatile
  5264  0526  1C8C               	goto	u142_21
  5265  0527  2D29               	goto	u142_20
  5266  0528  2D2A               u142_21:
  5267  0529                     	goto	i1l1645
  5268  0529  2D31               u142_20:
  5269  052A                     	line	28
  5270                           	
  5271                           i1l1641:	
  5272  052A                     ;interrupt.c: 27:     {;interrupt.c: 28:         PIR1bits.TMR2IF = 0;
  5273                           	bcf	(12),1	;volatile
  5274  052A  108C               	line	29
  5275                           	
  5276                           i1l1643:	
  5277  052B                     ;interrupt.c: 29:         T2_int();
  5278                           	fcall	_T2_int
  5279  052B  120A  118A  2676  120A  118A  	goto	i1l1645
  5280  0530  2D31               	line	30
  5281                           ;interrupt.c: 30:     }
  5282                           	
  5283                           i1l61:	
  5284  0531                     	line	31
  5285                           	
  5286                           i1l1645:	
  5287  0531                     ;interrupt.c: 31:     if( PIR1bits.ADIF )
  5288                           	bcf	status, 5	;RP0=0, select bank0
  5289  0531  1283               	bcf	status, 6	;RP1=0, select bank0
  5290  0532  1303               	btfss	(12),6	;volatile
  5291  0533  1F0C               	goto	u143_21
  5292  0534  2D36               	goto	u143_20
  5293  0535  2D37               u143_21:
  5294  0536                     	goto	i1l63
  5295  0536  2D3E               u143_20:
  5296  0537                     	line	33
  5297                           	
  5298                           i1l1647:	
  5299  0537                     ;interrupt.c: 32:     {;interrupt.c: 33:         PIR1bits.ADIF = 0;
  5300                           	bcf	(12),6	;volatile
  5301  0537  130C               	line	34
  5302                           	
  5303                           i1l1649:	
  5304  0538                     ;interrupt.c: 34:         ADC_int();
  5305                           	fcall	_ADC_int
  5306  0538  120A  118A  25BE  120A  118A  	goto	i1l63
  5307  053D  2D3E               	line	35
  5308                           ;interrupt.c: 35:     }
  5309                           	
  5310                           i1l62:	
  5311  053E                     	line	36
  5312                           	
  5313                           i1l63:	
  5314  053E                     	movf	(??_isr+1),w
  5315  053E  0873               	movwf	pclath
  5316  053F  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  5317  0540  0E72               	movwf	status
  5318  0541  0083               	swapf	saved_w,f
  5319  0542  0EFE               	swapf	saved_w,w
  5320  0543  0E7E               	retfie
  5321  0544  0009               	opt stack 0
  5322                           GLOBAL	__end_of_isr
  5323                           	__end_of_isr:
  5324  0545                     	signat	_isr,89
  5325                           	global	_T2_int
  5326                           
  5327 ;; *************** function _T2_int *****************
  5328 ;; Defined at:
  5329 ;;		line 132 in file "timers.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;		None
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;		None
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2, status,0
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5343 ;;      Params:         0       0       0       0       0
  5344 ;;      Locals:         0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0
  5346 ;;      Totals:         0       0       0       0       0
  5347 ;;Total ram usage:        0 bytes
  5348 ;; Hardware stack levels used:    1
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_isr
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5356                           	file	"timers.c"
  5357                           	line	132
  5358                           global __ptext18
  5359                           __ptext18:	;psect for function _T2_int
  5360  0676                     psect	text18
  5361                           	file	"timers.c"
  5362                           	line	132
  5363                           	global	__size_of_T2_int
  5364                           	__size_of_T2_int	equ	__end_of_T2_int-_T2_int
  5365  0010                     	
  5366                           _T2_int:	
  5367  0676                     ;incstack = 0
  5368                           	opt	stack 3
  5369                           ; Regs used in _T2_int: [wreg+status,2+status,0]
  5370                           	line	134
  5371                           	
  5372                           i1l1557:	
  5373  0676                     ;timers.c: 134:     if( T2count )
  5374                           	bcf	status, 5	;RP0=0, select bank0
  5375  0676  1283               	bcf	status, 6	;RP1=0, select bank0
  5376  0677  1303               	movf	((_T2count)),w
  5377  0678  0863               iorwf	((_T2count+1)),w
  5378  0679  0464               	btfsc	status,2
  5379  067A  1903               	goto	u128_21
  5380  067B  2E7D               	goto	u128_20
  5381  067C  2E7E               u128_21:
  5382  067D                     	goto	i1l234
  5383  067D  2E85               u128_20:
  5384  067E                     	line	136
  5385                           	
  5386                           i1l1559:	
  5387  067E                     ;timers.c: 135:     {;timers.c: 136:         --T2count;
  5388                           	movlw	01h
  5389  067E  3001               	subwf	(_T2count),f
  5390  067F  02E3               	movlw	0
  5391  0680  3000               	skipc
  5392  0681  1C03               	decf	(_T2count+1),f
  5393  0682  03E4               	subwf	(_T2count+1),f
  5394  0683  02E4               	goto	i1l234
  5395  0684  2E85               	line	137
  5396                           ;timers.c: 137:     }
  5397                           	
  5398                           i1l233:	
  5399  0685                     	line	138
  5400                           	
  5401                           i1l234:	
  5402  0685                     	return
  5403  0685  0008               	opt stack 0
  5404                           GLOBAL	__end_of_T2_int
  5405                           	__end_of_T2_int:
  5406  0686                     	signat	_T2_int,89
  5407                           	global	_T1_int
  5408                           
  5409 ;; *************** function _T1_int *****************
  5410 ;; Defined at:
  5411 ;;		line 80 in file "timers.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;		None
  5414 ;; Auto vars:     Size  Location     Type
  5415 ;;		None
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  1    wreg      void 
  5418 ;; Registers used:
  5419 ;;		wreg, status,2, status,0
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5425 ;;      Params:         0       0       0       0       0
  5426 ;;      Locals:         0       0       0       0       0
  5427 ;;      Temps:          0       0       0       0       0
  5428 ;;      Totals:         0       0       0       0       0
  5429 ;;Total ram usage:        0 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; This function calls:
  5432 ;;		Nothing
  5433 ;; This function is called by:
  5434 ;;		_isr
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5438                           	line	80
  5439                           global __ptext19
  5440                           __ptext19:	;psect for function _T1_int
  5441  063D                     psect	text19
  5442                           	file	"timers.c"
  5443                           	line	80
  5444                           	global	__size_of_T1_int
  5445                           	__size_of_T1_int	equ	__end_of_T1_int-_T1_int
  5446  0014                     	
  5447                           _T1_int:	
  5448  063D                     ;incstack = 0
  5449                           	opt	stack 3
  5450                           ; Regs used in _T1_int: [wreg+status,2+status,0]
  5451                           	line	82
  5452                           	
  5453                           i1l1091:	
  5454  063D                     ;timers.c: 82:     TMR1H = ((0xFFFF-1000+1) >> 8) & 0x00FF;
  5455                           	movlw	low(0FCh)
  5456  063D  30FC               	bcf	status, 5	;RP0=0, select bank0
  5457  063E  1283               	bcf	status, 6	;RP1=0, select bank0
  5458  063F  1303               	movwf	(15)	;volatile
  5459  0640  008F               	line	83
  5460                           ;timers.c: 83:     TMR1L = ((0xFFFF-1000+1) >> 0) & 0x00FF;
  5461                           	movlw	low(018h)
  5462  0641  3018               	movwf	(14)	;volatile
  5463  0642  008E               	line	84
  5464                           	
  5465                           i1l1093:	
  5466  0643                     ;timers.c: 84:     if( T1count )
  5467                           	movf	((_T1count)),w
  5468  0643  0876               iorwf	((_T1count+1)),w
  5469  0644  0477               	btfsc	status,2
  5470  0645  1903               	goto	u56_21
  5471  0646  2E48               	goto	u56_20
  5472  0647  2E49               u56_21:
  5473  0648                     	goto	i1l215
  5474  0648  2E50               u56_20:
  5475  0649                     	line	86
  5476                           	
  5477                           i1l1095:	
  5478  0649                     ;timers.c: 85:     {;timers.c: 86:         --T1count;
  5479                           	movlw	01h
  5480  0649  3001               	subwf	(_T1count),f
  5481  064A  02F6               	movlw	0
  5482  064B  3000               	skipc
  5483  064C  1C03               	decf	(_T1count+1),f
  5484  064D  03F7               	subwf	(_T1count+1),f
  5485  064E  02F7               	goto	i1l215
  5486  064F  2E50               	line	87
  5487                           ;timers.c: 87:     }
  5488                           	
  5489                           i1l214:	
  5490  0650                     	line	88
  5491                           	
  5492                           i1l215:	
  5493  0650                     	return
  5494  0650  0008               	opt stack 0
  5495                           GLOBAL	__end_of_T1_int
  5496                           	__end_of_T1_int:
  5497  0651                     	signat	_T1_int,89
  5498                           	global	_T0_int
  5499                           
  5500 ;; *************** function _T0_int *****************
  5501 ;; Defined at:
  5502 ;;		line 33 in file "timers.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  1    wreg      void 
  5509 ;; Registers used:
  5510 ;;		wreg, status,2, status,0
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5516 ;;      Params:         0       0       0       0       0
  5517 ;;      Locals:         0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0
  5519 ;;      Totals:         0       0       0       0       0
  5520 ;;Total ram usage:        0 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_isr
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5529                           	line	33
  5530                           global __ptext20
  5531                           __ptext20:	;psect for function _T0_int
  5532  0664                     psect	text20
  5533                           	file	"timers.c"
  5534                           	line	33
  5535                           	global	__size_of_T0_int
  5536                           	__size_of_T0_int	equ	__end_of_T0_int-_T0_int
  5537  0012                     	
  5538                           _T0_int:	
  5539  0664                     ;incstack = 0
  5540                           	opt	stack 3
  5541                           ; Regs used in _T0_int: [wreg+status,2+status,0]
  5542                           	line	35
  5543                           	
  5544                           i1l1085:	
  5545  0664                     ;timers.c: 35:     TMR0 = (256-250);
  5546                           	movlw	low(06h)
  5547  0664  3006               	bcf	status, 5	;RP0=0, select bank0
  5548  0665  1283               	bcf	status, 6	;RP1=0, select bank0
  5549  0666  1303               	movwf	(1)	;volatile
  5550  0667  0081               	line	36
  5551                           	
  5552                           i1l1087:	
  5553  0668                     ;timers.c: 36:     if( T0count )
  5554                           	movf	((_T0count)),w
  5555  0668  0878               iorwf	((_T0count+1)),w
  5556  0669  0479               	btfsc	status,2
  5557  066A  1903               	goto	u55_21
  5558  066B  2E6D               	goto	u55_20
  5559  066C  2E6E               u55_21:
  5560  066D                     	goto	i1l196
  5561  066D  2E75               u55_20:
  5562  066E                     	line	38
  5563                           	
  5564                           i1l1089:	
  5565  066E                     ;timers.c: 37:     {;timers.c: 38:         --T0count;
  5566                           	movlw	01h
  5567  066E  3001               	subwf	(_T0count),f
  5568  066F  02F8               	movlw	0
  5569  0670  3000               	skipc
  5570  0671  1C03               	decf	(_T0count+1),f
  5571  0672  03F9               	subwf	(_T0count+1),f
  5572  0673  02F9               	goto	i1l196
  5573  0674  2E75               	line	39
  5574                           ;timers.c: 39:     }
  5575                           	
  5576                           i1l195:	
  5577  0675                     	line	40
  5578                           	
  5579                           i1l196:	
  5580  0675                     	return
  5581  0675  0008               	opt stack 0
  5582                           GLOBAL	__end_of_T0_int
  5583                           	__end_of_T0_int:
  5584  0676                     	signat	_T0_int,89
  5585                           	global	_ADC_int
  5586                           
  5587 ;; *************** function _ADC_int *****************
  5588 ;; Defined at:
  5589 ;;		line 31 in file "adc.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5603 ;;      Params:         0       0       0       0       0
  5604 ;;      Locals:         0       0       0       0       0
  5605 ;;      Temps:          2       0       0       0       0
  5606 ;;      Totals:         2       0       0       0       0
  5607 ;;Total ram usage:        2 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_isr
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5616                           	file	"adc.c"
  5617                           	line	31
  5618                           global __ptext21
  5619                           __ptext21:	;psect for function _ADC_int
  5620  05BE                     psect	text21
  5621                           	file	"adc.c"
  5622                           	line	31
  5623                           	global	__size_of_ADC_int
  5624                           	__size_of_ADC_int	equ	__end_of_ADC_int-_ADC_int
  5625  001F                     	
  5626                           _ADC_int:	
  5627  05BE                     ;incstack = 0
  5628                           	opt	stack 3
  5629                           ; Regs used in _ADC_int: [wreg]
  5630                           	line	33
  5631                           	
  5632                           i1l1545:	
  5633  05BE                     ;adc.c: 33:     ADC_value = ADRESH;
  5634                           	bcf	status, 5	;RP0=0, select bank0
  5635  05BE  1283               	bcf	status, 6	;RP1=0, select bank0
  5636  05BF  1303               	movf	(30),w	;volatile
  5637  05C0  081E               	movwf	(??_ADC_int+0)+0
  5638  05C1  00F0               	clrf	(??_ADC_int+0)+0+1
  5639  05C2  01F1               	movf	0+(??_ADC_int+0)+0,w
  5640  05C3  0870               	movwf	(_ADC_value)
  5641  05C4  00E5               	movf	1+(??_ADC_int+0)+0,w
  5642  05C5  0871               	movwf	(_ADC_value+1)
  5643  05C6  00E6               	line	34
  5644                           ;adc.c: 34:     ADC_value <<= 8;
  5645                           	movlw	08h
  5646  05C7  3008               	
  5647                           u125_25:
  5648  05C8                     	clrc
  5649  05C8  1003               	rlf	(_ADC_value),f
  5650  05C9  0DE5               	rlf	(_ADC_value+1),f
  5651  05CA  0DE6               	addlw	-1
  5652  05CB  3EFF               	skipz
  5653  05CC  1D03               	goto	u125_25
  5654  05CD  2DC8               	line	35
  5655                           ;adc.c: 35:     ADC_value += ADRESL;
  5656                           	bsf	status, 5	;RP0=1, select bank1
  5657  05CE  1683               	bcf	status, 6	;RP1=0, select bank1
  5658  05CF  1303               	movf	(158)^080h,w	;volatile
  5659  05D0  081E               	movwf	(??_ADC_int+0)+0
  5660  05D1  00F0               	clrf	(??_ADC_int+0)+0+1
  5661  05D2  01F1               	movf	0+(??_ADC_int+0)+0,w
  5662  05D3  0870               	bcf	status, 5	;RP0=0, select bank0
  5663  05D4  1283               	bcf	status, 6	;RP1=0, select bank0
  5664  05D5  1303               	addwf	(_ADC_value),f
  5665  05D6  07E5               	skipnc
  5666  05D7  1803               	incf	(_ADC_value+1),f
  5667  05D8  0AE6               	movf	1+(??_ADC_int+0)+0,w
  5668  05D9  0871               	addwf	(_ADC_value+1),f
  5669  05DA  07E6               	line	36
  5670                           	
  5671                           i1l1547:	
  5672  05DB                     ;adc.c: 36:     ADCON0bits.GO = 1;
  5673                           	bsf	(31),1	;volatile
  5674  05DB  149F               	line	37
  5675                           	
  5676                           i1l22:	
  5677  05DC                     	return
  5678  05DC  0008               	opt stack 0
  5679                           GLOBAL	__end_of_ADC_int
  5680                           	__end_of_ADC_int:
  5681  05DD                     	signat	_ADC_int,89
  5682                           global	___latbits
  5683                           ___latbits	equ	2
  5684  0002                     	global	fptotal
  5685                           fptotal equ 6
  5686  0006                     	file ""
  5687                           	line	#
  5688                           psect	functab,class=ENTRY,delta=2
  5689                           global __pfunctab
  5690                           __pfunctab:
  5691  0029                     	global	fptable,__fptable
  5692                           __fptable:
  5693  0029                     fptable:
  5694  0029                     	movwf (btemp+1)&07Fh
  5695  0029  00FF               	movlw high(fptable)
  5696  002A  3000               	movwf pclath
  5697  002B  008A               	movf (btemp+1)&07Fh,w
  5698  002C  087F               	addwf pc
  5699  002D  0782               	global	fpbase
  5700                           fpbase:
  5701  002E                     	goto fpbase	; Call via a null pointer and you will get stuck here.
  5702  002E  282E               	file ""
  5703                           	line	#
  5704                           fp__dispLCD_init:
  5705  002F                     	ljmp	_dispLCD_init
  5706  002F  120A  118A  2CCB   	file ""
  5707                           	line	#
  5708                           fp__dispLCD_num:
  5709  0032                     	ljmp	_dispLCD_num
  5710  0032  120A  118A  2838   	file ""
  5711                           	line	#
  5712                           fp__dispLCDstr:
  5713  0035                     	ljmp	_dispLCDstr
  5714  0035  120A  118A  2C86   	global __end_of__fptable
  5715                           	__end_of__fptable:
  5716  0038                     	global __size_of__fptable
  5717                           	__size_of__fptable	equ	__end_of__fptable-__fptable
  5718  000F                     	global	btemp
  5719                           	btemp set 07Eh
  5720  007E                     
  5721                           	DABS	1,126,2	;btemp
  5722                           	global	wtemp0
  5723                           	wtemp0 set btemp+0
  5724  007E                     	end


Data Sizes:
    Strings     16
    Constant    0
    Data        7
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     60      71
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S364$2$2	PTR const unsigned char  size(1) Largest target is 0

    S364$1$0	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 

    S364$B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    IHM.B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    S364$B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    IHM.B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    S364$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    IHM.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S364$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    S364$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    S364$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    S364$init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    IHM.init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _fahrenheit->___lmul
    _celsius->___lwdiv
    ___aldiv->___lmul
    _dispLCDstr->_dispLCD_dataReg
    _dispLCD_num->_dispLCD_dataReg
    _dispLCD_lincol->_dispLCD_instReg
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg

Critical Paths under _isr in COMMON

    _isr->_ADC_int

Critical Paths under _main in BANK0

    _main->_dispLCD_num
    _kelvin->_celsius
    _fahrenheit->___aldiv
    _celsius->___lwdiv
    ___lmul->_celsius
    ___aldiv->___lmul
    _dispLCDstr->_dispLCD_lincol
    _dispLCD_num->_fahrenheit
    _dispLCD_lincol->_dispLCD_instReg
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7305
                                             58 BANK0      2     2      0
                           _ADC_init
                            _celsius
                       _dispLCD_init *
                        _dispLCD_num *
                         _dispLCDstr *
                         _fahrenheit
                             _kelvin
 ---------------------------------------------------------------------------------
 (1) _kelvin                                               8     4      4     421
                                             11 BANK0      8     4      4
                            _celsius
 ---------------------------------------------------------------------------------
 (1) _fahrenheit                                           8     4      4    1117
                                             38 BANK0      8     4      4
                            ___aldiv
                             ___lmul
                            _celsius
 ---------------------------------------------------------------------------------
 (2) _celsius                                              4     0      4     421
                                              7 BANK0      4     0      4
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              5 COMMON     1     1      0
                                             11 BANK0     12     4      8
                            _celsius (ARG)
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             23 BANK0     15     7      8
                             ___lmul (ARG)
                            _celsius (ARG)
 ---------------------------------------------------------------------------------
 (1) _dispLCDstr                                           2     1      1     875
                                              4 BANK0      2     1      1
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _dispLCD_num                                         12     7      5    3919
                                             46 BANK0     12     7      5
                            ___awdiv
                            ___awmod
                            _celsius (ARG)
                    _dispLCD_dataReg
                     _dispLCD_lincol
                         _fahrenheit (ARG)
                             _kelvin (ARG)
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     670
                                              1 BANK0      3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     552
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     248
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     304
                                              4 COMMON     2     0      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              2 COMMON     2     2      0
                            _ADC_int
                             _T0_int
                             _T1_int
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T1_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T0_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_int                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _celsius
     ___lwdiv
   _dispLCD_init *
     _delay
     _dispLCD_instReg
   _dispLCD_num *
     ___awdiv
     ___awmod
     _celsius (ARG)
       ___lwdiv
     _dispLCD_dataReg (ARG)
     _dispLCD_lincol (ARG)
       _dispLCD_instReg
     _fahrenheit (ARG)
       ___aldiv
         ___lmul (ARG)
           _celsius (ARG)
             ___lwdiv
         _celsius (ARG)
           ___lwdiv
       ___lmul
         _celsius (ARG)
           ___lwdiv
       _celsius
         ___lwdiv
     _kelvin (ARG)
       _celsius
         ___lwdiv
   _dispLCDstr *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fahrenheit *
     ___aldiv
       ___lmul (ARG)
         _celsius (ARG)
           ___lwdiv
       _celsius (ARG)
         ___lwdiv
     ___lmul
       _celsius (ARG)
         ___lwdiv
     _celsius
       ___lwdiv
   _kelvin *
     _celsius
       ___lwdiv

 _isr (ROOT)
   _ADC_int
   _T0_int
   _T1_int
   _T2_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3C      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      51      12        0.0%
ABS                  0      0      51       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jun 24 16:41:23 2021

                       pc 0002               __CFG_CP$OFF 0000                        l31 03EC  
                      l40 05FB                        l17 05BD                        l41 0611  
                      l42 0611                        l34 0571                        l28 05F9  
                      l39 060A                        l81 0233                        l82 0242  
                      l74 01F5                        l83 0245                        l76 01EB  
                      l92 050B                        l77 01FA                        l78 021D  
                      l86 059C                        l79 023D                        l89 063C  
            ___awdiv@sign 0025   __end_of_dispLCD_dataReg 059D                        fsr 0004  
                     l101 04BB                       l110 0063                       l102 0490  
                     l111 007D                       l103 04A6                       l120 00D8  
                     l112 007E                       l104 04CA                       l121 0126  
                     l113 00A0                       l105 04CA                       l122 0126  
                     l114 00AC                       l115 00A1                       l108 004E  
                     l117 00C9                       l109 0092                       l118 00CA  
                     l119 00D8                       l400 0170                       l160 0260  
                     l401 0162                       l161 02B6                       l402 0175  
                     l162 02B7                       l403 0176                       l163 02B7  
                     l404 01A1                       l405 01B1                       l406 01C3  
                     l407 01CC                       l343 0445                       l344 0461  
                     l600 040B                       l345 047C                       l601 040C  
                     l346 0485                       l602 0425                       l603 0433  
                     l604 0439                       l480 02F3                       l481 02F4  
                     l482 030D                       l490 0381                       l483 031B  
                     l475 02C9                       l491 035B                       l484 0327  
                     l476 02D7                       l492 034F                       l485 032C  
                     l477 031C                       l493 0360                       l397 013B  
                     l478 02EE                       l494 0361                       l398 014F  
                     l479 02E2                       l495 0372                       l399 01B2  
                     l496 0380                       l488 033C                       l497 038C  
                     l489 0346                       l498 0391                       l597 0434  
                     l598 0406                       l599 03FA                       _IHM 005C  
                     _PR2 0092              __CFG_CPD$OFF 0000                       u910 0449  
                     u911 0448                       u921 0452                       u922 0459  
                     u923 0460                       u950 047B                       u951 047A  
                     u935 0463                       u960 012E                       u961 012D  
                     u945 046B                       u970 013F                       u971 013E  
                     u980 015F                       u981 015E                       u895 0579  
                     u995 0164                       _isr 050C                       fsr0 0004  
                     indf 0000   __end_of_dispLCD_instReg 0246              ___awmod@sign 0025  
         __end_of_ADC_int 05DD              __CFG_LVP$OFF 0000                      l1401 0485  
                    l1411 014A                      l1403 0127                      l1421 0170  
                    l1413 014F                      l1405 012A                      l1431 01A1  
                    l1423 0176                      l1415 0157                      l1407 012E  
                    l1441 01CC                      l1433 01AA                      l1425 017F  
                    l1417 015F                      l1409 013F                      l1531 05AA  
                    l1371 0576                      l1427 0191                      l1419 0162  
                    l1435 01B2                      l1541 05B9                      l1533 05AF  
                    l1525 059D                      l1701 021D                      l1381 058C  
                    l1373 0583                      l1437 01B7                      l1429 019F  
                    l1543 05BA                      l1535 05B2                      l1527 05A1  
                    l1711 0233                      l1703 021E                      l1383 0594  
                    l1375 0584                      l1439 01C3                      l1391 0445  
                    l1537 05B5                      l1529 05A7                      l1713 023D  
                    l1705 0226                      l1801 0330                      l1385 0599  
                    l1377 0588                      l1369 0573                      l1393 0449  
                    l1721 03F7                      l1539 05B6                      l1715 0242  
                    l1707 0227                      l1811 0346                      l1803 0334  
                    l1379 058B                      l1395 0461                      l1731 041D  
                    l1723 03FA                      l1709 022C                      l1821 0361  
                    l1813 034C                      l1805 0339                      l1901 00AC  
                    l1397 046A                      l1389 043A                      l1741 0439  
                    l1733 0423                      l1725 0401                      l1717 03ED  
                    l1751 060A                      l1831 0386                      l1823 036B  
                    l1815 034F                      l1807 033C                      l1903 00C0  
                    l1399 047C                      l1735 0425                      l1727 0406  
                    l1719 03F1                      l1743 05DD                      l1681 01E4  
                    l1761 02C6                      l1833 038C                      l1825 0372  
                    l1817 0356                      l1809 0340                      l1753 062B  
                    l1905 00CA                      l1737 042C                      l1729 040C  
                    l1745 05F9                      l1841 0545                      l1921 0246  
                    l1747 05FA                      l1691 0206                      l1683 01EB  
                    l1675 01D0                      l1851 04D8                      l1771 02D9  
                    l1763 02C9                      l1755 02BA                      l1835 0391  
                    l1827 0379                      l1819 035B                      l1907 00D1  
                    l1739 0434                      l1843 0571                      l1923 0253  
                    l1749 05FB                      l1693 0207                      l1685 01F5  
                    l1677 01D1                      l1861 04DD                      l1853 04D9  
                    l1845 04CB                      l1781 02F4                      l1773 02DF  
                    l1765 02CD                      l1757 02BD                      l1829 0381  
                    l1909 0118                      l1837 0392                      l1925 0260  
                    l1695 0214                      l1687 01FA                      l1679 01DE  
                    l1863 04E7                      l1855 04DA                      l1847 04D4  
                    l1783 0305                      l1775 02E2                      l1791 031C  
                    l1767 02D2                      l1759 02C1                      l1871 04A6  
                    l1839 03EC                      l1927 027B                      l1697 0215  
                    l1689 01FD                      l1857 04DB                      l1849 04D7  
                    l1793 0321                      l1785 030B                      l1777 02E9  
                    l1769 02D7                      l1881 0048                      l1873 04B4  
                    l1865 0486                      l1929 0298                      l1699 0219  
                    l1859 04DC                      l1795 0327                      l1787 030D  
                    l1779 02EE                      l1891 007A                      l1883 004E  
                    l1867 0490                      l1875 04BB                      l1797 032C  
                    l1789 0314                      l1893 007E                      l1885 0058  
                    l1877 0038                      l1869 049E                      l1799 032D  
                    l1895 0092                      l1887 005E                      l1879 0043  
                    l1897 00A1                      l1889 0063                      l1899 00A7  
                    ?_isr 0070                      STR_1 0618                      u1000 0174  
                    u1001 0173                      u1020 0191                      u1021 0190  
                    u1015 0178                      u1040 01B0                      u1041 01AF  
                    u1025 018D                      u1050 01B7                      u1051 01B6  
                    u1035 01A2                      u2007 023F                      u2017 05FF  
                    u1500 022C                      u1501 022B                      u1510 0232  
                    u1511 0231                      u1520 03F7                      u1521 03F6  
                    u1610 02C1                      u1611 02C0                      u1460 01E4  
                    u1700 0321                      u1620 02CD                      u1540 040A  
                    u1461 01E3                      u1701 0320                      u1621 02CC  
                    u1605 062E                      u1541 0409                      u1470 01EA  
                    u1630 02DF                      u1710 0334                      u1471 01E9  
                    u1455 01D4                      u1631 02DE                      u1711 0333  
                    u1535 03FB                      u1480 0206                      u1720 0340  
                    u1560 041D                      u1800 03D8                      u1481 0205  
                    u1721 033F                      u1561 041C                      u1801 03D9  
                    u1650 02F2                      u1730 034C                      u1802 03DE  
                    u1810 055D                      u1651 02F1                      u1731 034B  
                    u1555 040D                      u1803 03DF                      u1811 055E  
                    u1900 00C8                      u1820 049E                      u1580 0432  
                    u1812 0563                      u1645 02E3                      u1901 00C7  
                    u1821 049D                      u1581 0431                      u1565 0419  
                    u1813 0564                      u1590 0610                      u1670 0305  
                    u1750 035F                      u1910 00D1                      u1830 04C9  
                    u1591 060F                      u1495 020A                      u1671 0304  
                    u1751 035E                      u1911 00D0                      u1831 04C8  
                    u1575 0426                      u1760 036B                      u1920 0125  
                    u1840 003F                      u1665 02F5                      u1761 036A  
                    u1745 0350                      u1921 0124                      u1841 003D  
                    u1690 031A                      u1850 0040                      u1691 0319  
                    u1675 0301                      u1780 037F                      u1860 0048  
                    u1685 030E                      u1781 037E                      u1765 0367  
                    u1925 0121                      u1861 0047                      u1790 0386  
                    u1870 007A                      u1791 0385                      u1775 0373  
                    u1871 0079                      u1880 009F                      u1881 009E  
                    u1890 00C0                      u1947 0586                      u1891 00BF  
                    u1957 0597                      u1885 009B                      i1l22 05DC  
                    u1967 01EF                      u1895 00BC                      u1977 01F7  
                    u1987 0217                      i1l60 0524                      i1l61 0531  
                    u1997 0237                      i1l62 053E                      i1l63 053E  
                    i1l59 0517                      _TMR0 0001                      _TMR2 0011  
            __CFG_WRT$OFF 0000                      _main 0246                      btemp 007E  
                    start 000C          __end_of_ADC_init 05BE             __CFG_IESO$OFF 0000  
                   ??_isr 0072           __end_of___aldiv 01CD                     ?_main 0070  
         __end_of___awdiv 032D             __CFG_WDTE$OFF 0000           __end_of___awmod 0392  
         ___awdiv@divisor 0020           __end_of___lwdiv 043A                     i1l214 0650  
                   i1l215 0650                     i1l233 0685                     i1l234 0685  
                   i1l195 0675                     i1l196 0675           ___awdiv@counter 0024  
                   _TMR1H 000F                     _TMR1L 000E                     u55_20 066E  
                   u55_21 066D                     u56_20 0649                     u56_21 0648  
     ___lmul@multiplicand 002F           __end_of_celsius 05FA            __CFG_FCMEN$OFF 0000  
                   _delay 05FA                     fpbase 002E            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
    __end_of_dispLCD_init 050C            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 02BA          ?_dispLCD_dataReg 0070                 ??_ADC_int 0070  
                  ??_main 005A      __size_of_dispLCD_num 00EF          ?_dispLCD_instReg 0070  
                  ?_delay 0074                    _ADRESH 001E                    _ADRESL 009E  
        ___awdiv@dividend 0022                    i1l1091 063D                    i1l1085 0664  
                  i1l1093 0643                    i1l1087 0668                    i1l1095 0649  
                  i1l1089 066E                    i1l1631 0511                    i1l1545 05BE  
                  i1l1641 052A                    i1l1633 0517                    i1l1547 05DB  
                  i1l1643 052B                    i1l1635 051D                    i1l1627 050C  
                  i1l1557 0676                    i1l1645 0531                    i1l1637 051E  
                  i1l1629 0510                    i1l1559 067E                    i1l1647 0537  
                  i1l1639 0524                    i1l1649 0538                    u140_20 0510  
                  u140_21 050F                    u141_20 051D                    u141_21 051C  
                  u125_25 05C8                    u142_20 052A                    u142_21 0529  
                  u143_20 0537                    u143_21 0536                    u128_20 067E  
                  u128_21 067D                    _T0_int 0664                    _T1_int 063D  
                  _T2_int 0676          __end_of__fptable 0038            __CFG_PWRTE$OFF 0000  
                  ___lmul 043A                 ??___aldiv 003F                 ??___awdiv 0074  
               ??___awmod 0074                 ??___lwdiv 0074                    _kelvin 0545  
                  delay@t 0074          ___awdiv@quotient 0026           ___awmod@divisor 0020  
               ??_celsius 0075           ___awmod@counter 0024                    fptable 0029  
                  fptotal 0006                    saved_w 007E                 ?_ADC_init 0070  
 __end_of__initialization 0025   __size_of_dispLCD_lincol 0015            __pcstackCOMMON 0070  
            __pidataBANK0 0686             __end_of_delay 0612            _OPTION_REGbits 0081  
              ??_ADC_init 0074                   ??_delay 0020                __pbssBANK0 0063  
   __size_of_dispLCD_init 0041                   ?_T0_int 0070                   ?_T1_int 0070  
                 ?_T2_int 0070                _fahrenheit 0392                __pmaintext 0246  
                 ?___lmul 002B                _dispLCD_B0 0000                _dispLCD_B1 0000  
              __pintentry 0004                _dispLCDstr 0486                   ?_kelvin 002B  
          ___lmul@product 0033                   _ADC_int 05BE                   _LCDbits 0008  
            _dispLCD_init 04CB                   _T0count 0078                   _T1count 0076  
                 _T2count 0063                __stringtab 0612           __size_of_T0_int 0012  
         __size_of_T1_int 0014           __size_of_T2_int 0010                 _ADC_value 0065  
                 ___aldiv 0127                   ___awdiv 02BA           __size_of___lmul 004C  
                 ___awmod 032D                   ___lwdiv 03ED           __size_of_kelvin 002D  
               _ANSELbits 0188                   _celsius 05DD                   _dispLCD 0000  
                 __ptext1 0545                   __ptext2 0392                   __ptext3 05DD  
                 __ptext4 03ED                   __ptext5 043A                   __ptext6 0127  
                 __ptext7 0486                   __ptext8 0038                   __ptext9 0628  
               _T1CONbits 0010                 _T2CONbits 0012              __size_of_isr 0039  
        ___awmod@dividend 0022          ___aldiv@dividend 003B      end_of_initialization 0025  
          dispLCD_num@col 004F            dispLCD_num@div 0058            dispLCD_num@lin 004E  
          dispLCD_num@tam 0052            dispLCD_num@num 0050            _dispLCD_lincol 0628  
             ?_fahrenheit 0046          ___aldiv@quotient 0042               ?_dispLCDstr 0024  
           ??_dispLCD_num 0053                 _TRISDbits 0088  __size_of_dispLCD_dataReg 002B  
       __size_of_ADC_init 0021    __end_of_dispLCD_lincol 063D  __size_of_dispLCD_instReg 0079  
          __end_of_T0_int 0676            __end_of_T1_int 0651            __end_of_T2_int 0686  
          __end_of___lmul 0486            __end_of_kelvin 0572       start_initialization 000F  
     __end_of_dispLCD_num 0127               __end_of_isr 0545       __size_of_fahrenheit 005B  
     __size_of_dispLCDstr 0045           ?_dispLCD_lincol 0021                  ??_T0_int 0070  
                ??_T1_int 0070                  ??_T2_int 0070  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       dispLCD_lincol@col 0021         dispLCD_lincol@lin 0023                  ??___lmul 0075  
              init_fetch0 0651               __pdataBANK0 005C                  ??_kelvin 002F  
                ?_ADC_int 0070               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of__fptable 000F         ??_dispLCD_dataReg 0074  
        ___lwdiv@dividend 0022         ??_dispLCD_instReg 0074                 __pfunctab 0029  
                ?___aldiv 0037                  ?___awdiv 0020                  ?___awmod 0020  
                ?___lwdiv 0020               _dispLCD_clr 0000               _dispLCD_num 0038  
                ?_celsius 0027                 __pstrings 0612                  _ADC_init 059D  
        ___lwdiv@quotient 0025            __size_of_delay 0018           ___aldiv@divisor 0037  
       interrupt_function 0004           ___aldiv@counter 0040                  _PIE1bits 008C  
            ??_fahrenheit 004A                  _PIR1bits 000C              ??_dispLCDstr 0025  
        dispLCD_dataReg@d 0075             dispLCDstr@str 0024                _ADCON0bits 001F  
             __stringbase 0617                _ADCON1bits 009F          __size_of_ADC_int 001F  
      __end_of_fahrenheit 03ED         ___lmul@multiplier 002B        __end_of_dispLCDstr 04CB  
        dispLCD_instReg@i 0020          __size_of___aldiv 00A6          __size_of___awdiv 0073  
        __size_of___awmod 0065          __size_of___lwdiv 004D           fp__dispLCD_init 002F  
        dispLCD_num@sinal 0057        __end_of__stringtab 0618          __size_of_celsius 001D  
                __fptable 0029          ??_dispLCD_lincol 0022           ___lwdiv@divisor 0020  
         ___lwdiv@counter 0024                  __ptext10 0572                  __ptext11 032D  
                __ptext20 0664                  __ptext12 02BA                  __ptext21 05BE  
                __ptext13 04CB                  __ptext14 01CD                  __ptext15 05FA  
                __ptext16 059D                  __ptext17 050C                  __ptext18 0676  
                __ptext19 063D         __CFG_BOR4V$BOR40V 0000             __size_of_main 0074  
              _INTCONbits 000B             ?_dispLCD_init 0070           _dispLCD_dataReg 0572  
                init_ram0 0655            fp__dispLCD_num 0032           dispLCD_num@size 0056  
         _dispLCD_instReg 01CD                  intlevel1 0029                 stringcode 0612  
            ?_dispLCD_num 004E             fp__dispLCDstr 0035            ??_dispLCD_init 0076  
                stringdir 0612                  stringtab 0612              ___aldiv@sign 0041  
